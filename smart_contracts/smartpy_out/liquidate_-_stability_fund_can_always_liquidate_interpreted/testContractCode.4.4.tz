parameter (or (unit %default) (or (int %intCallback) (nat %natCallback)));
storage   (pair (int %intValue) (nat %natValue));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        DROP;       # @storage
        # == default == # @storage
      }
      {
        IF_LEFT
          {
            SWAP;       # @storage : @parameter%intCallback
            # == intCallback ==
            # self.data.intValue = params # @storage : @parameter%intCallback
            CDR;        # nat : @parameter%intCallback
            SWAP;       # @parameter%intCallback : nat
            PAIR;       # pair @parameter%intCallback nat
          }
          {
            SWAP;       # @storage : @parameter%natCallback
            # == natCallback ==
            # self.data.natValue = params # @storage : @parameter%natCallback
            CAR;        # int : @parameter%natCallback
            PAIR;       # pair int @parameter%natCallback
          }; # pair @parameter%intCallback nat
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };