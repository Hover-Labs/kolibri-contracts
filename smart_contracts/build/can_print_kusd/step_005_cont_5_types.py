import smartpy as sp

tstorage = sp.TRecord(collateralizationPercentage = sp.TNat, devFundSplit = sp.TNat, developerFundContractAddress = sp.TAddress, governorContractAddress = sp.TAddress, interestIndex = sp.TNat, lastInterestIndexUpdateTime = sp.TTimestamp, liquidationFeePercent = sp.TNat, liquidityPoolContractAddress = sp.TAddress, ovenProxyContractAddress = sp.TAddress, privateOwnerLiquidationThreshold = sp.TNat, stabilityFee = sp.TNat, stabilityFundContractAddress = sp.TAddress, tokenContractAddress = sp.TAddress).layout(((("collateralizationPercentage", ("devFundSplit", "developerFundContractAddress")), ("governorContractAddress", ("interestIndex", "lastInterestIndexUpdateTime"))), (("liquidationFeePercent", ("liquidityPoolContractAddress", "ovenProxyContractAddress")), (("privateOwnerLiquidationThreshold", "stabilityFee"), ("stabilityFundContractAddress", "tokenContractAddress")))))
tparameter = sp.TVariant(borrow = sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TNat)))))))), deposit = sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TInt)))))), getInterestIndex = sp.TContract(sp.TNat), liquidate = sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TAddress)))))))), repay = sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TNat))))))), setCollateralizationPercentage = sp.TNat, setDeveloperFundContract = sp.TAddress, setGovernorContract = sp.TAddress, setLiquidationFeePercent = sp.TNat, setLiquidityPoolContract = sp.TAddress, setOvenProxyContract = sp.TAddress, setPrivateLiquidationThreshold = sp.TNat, setStabilityFee = sp.TNat, setStabilityFundContract = sp.TAddress, setTokenContract = sp.TAddress, updateFundSplits = sp.TRecord(developerFundSplit = sp.TNat, stabilityFundSplit = sp.TNat).layout(("developerFundSplit", "stabilityFundSplit")), updateParams = sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TOption(sp.TMutez)))), withdraw = sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TMutez))))))))).layout((((("borrow", "deposit"), ("getInterestIndex", "liquidate")), (("repay", "setCollateralizationPercentage"), ("setDeveloperFundContract", ("setGovernorContract", "setLiquidationFeePercent")))), ((("setLiquidityPoolContract", "setOvenProxyContract"), ("setPrivateLiquidationThreshold", "setStabilityFee")), (("setStabilityFundContract", "setTokenContract"), ("updateFundSplits", ("updateParams", "withdraw"))))))
tprivates = { "calculateNewAccruedInterest": sp.TLambda(sp.TPair(sp.TInt, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))), sp.TNat), "compoundWithLinearApproximation": sp.TLambda(sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat)), sp.TNat), "computeCollateralizationPercentage": sp.TLambda(sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat)), sp.TNat) }
tviews = { }
