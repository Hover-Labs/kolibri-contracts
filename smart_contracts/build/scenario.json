[
 {
  "shortname": "can_print_kusd",
  "longname": "can_print_kusd",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"test-helpers/dummy-contract.py\" 12)) \nstorage (record (\"test-helpers/dummy-contract.py\" 12) (intValue (literal (int 0) (\"test-helpers/dummy-contract.py\" 10))) (natValue (literal (nat 0) (\"test-helpers/dummy-contract.py\" 9))))\nstorage_type (())\nmessages ((default True None None False (\"test-helpers/dummy-contract.py\" 18) ()) (intCallback True None None True (\"test-helpers/dummy-contract.py\" 28) ((set (attr (data) \"intValue\" (\"test-helpers/dummy-contract.py\" 30)) (params (\"test-helpers/dummy-contract.py\" 28)) (\"test-helpers/dummy-contract.py\" 30)))) (natCallback True None None True (\"test-helpers/dummy-contract.py\" 23) ((set (attr (data) \"natValue\" (\"test-helpers/dummy-contract.py\" 25)) (params (\"test-helpers/dummy-contract.py\" 23)) (\"test-helpers/dummy-contract.py\" 25)))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 0 (\"test-helpers/dummy-contract.py\" 12))",
    "line_no": "(\"oven-cracker.py\" 138)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 1 (\"token.py\" 56)) \nstorage (record (\"token.py\" 56) (administrator (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (balances (type_annotation (big_map (\"token.py\" 57) ) (bigmap (unknown 1) (record ((approvals (map \"address\" \"nat\")) (balance \"nat\")) None)) (\"token.py\" 57))) (debtCeiling (literal (nat 1000000000000000000000000000000000000000000000000000000000000000000000000) (\"token.py\" 169))) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (metadata (type_annotation (big_map (\"token.py\" 45) ((literal (string \"\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x74657a6f732d73746f726167653a64617461\") (\"token.py\" 47))) ((literal (string \"data\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x7b206e616d653a2022204b6f6c6962726920546f6b656e20436f6e7472616374222c20226465736372697074696f6e223a20224641312e3220496d706c656d656e746174696f6e206f66206b555344222c2022617574686f72223a2022486f766572204c616273222c2022686f6d6570616765223a20202268747470733a2f2f6b6f6c696272692e66696e616e6365222c2022696e7465726661636573223a205b2022545a49502d3030372d323032312d30312d3239225d207d\") (\"token.py\" 43)))) (bigmap \"string\" \"bytes\") (\"token.py\" 45))) (paused (literal (bool False) (\"token.py\" 56))) (token_metadata (type_annotation (big_map (\"token.py\" 33) ((literal (nat 0) (\"token.py\" 20)) (tuple (\"oven-cracker.py\" 141) (literal (nat 0) (\"token.py\" 20)) (type_annotation (map (\"token.py\" 22) ((literal (string \"name\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x4b6f6c6962726920555344\") (\"token.py\" 24))) ((literal (string \"decimals\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x3138\") (\"token.py\" 25))) ((literal (string \"symbol\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x6b555344\") (\"token.py\" 26))) ((literal (string \"icon\") (\"oven-cracker.py\" 141)) (literal (bytes \"0x2068747470733a2f2f6b6f6c696272692d646174612e73332e616d617a6f6e6177732e636f6d2f6c6f676f2e706e67\") (\"token.py\" 27)))) (map \"string\" \"bytes\") (\"token.py\" 22))))) (bigmap \"nat\" (tuple \"nat\" (map \"string\" \"bytes\"))) (\"token.py\" 33))) (totalSupply (literal (intOrNat 0) (\"token.py\" 56))))\nstorage_type (())\nmessages ((approve True None None True (\"token.py\" 79) ((set_type (params (\"token.py\" 79)) (record ((spender \"address\") (value \"nat\")) (Some ((\"spender\") (\"value\")))) (\"token.py\" 81)) (verify (not (attr (data) \"paused\" (\"token.py\" 151)) (\"token.py\" 82)) (\"token.py\" 82)) (verify (or (eq (getItemDefault (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (sender) (\"token.py\" 83)) \"approvals\" (\"token.py\" 83)) (attr (params (\"token.py\" 79)) \"spender\" (\"token.py\" 83)) (literal (intOrNat 0) (\"token.py\" 83)) (\"token.py\" 83)) (literal (intOrNat 0) (\"token.py\" 84)) (\"token.py\" 84)) (eq (attr (params (\"token.py\" 79)) \"value\" (\"token.py\" 84)) (literal (intOrNat 0) (\"token.py\" 84)) (\"token.py\" 84)) (\"token.py\" 84)) (literal (intOrNat 23) (\"token.py\" 84)) (\"token.py\" 84)) (set (getItem (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (sender) (\"token.py\" 85)) \"approvals\" (\"token.py\" 85)) (attr (params (\"token.py\" 79)) \"spender\" (\"token.py\" 83)) (\"token.py\" 85)) (attr (params (\"token.py\" 79)) \"value\" (\"token.py\" 84)) (\"token.py\" 85)))) (burn True None None True (\"token.py\" 124) ((set_type (params (\"token.py\" 124)) (record ((address \"address\") (value \"nat\")) None) (\"token.py\" 126)) (verify (eq (sender) (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 134)) (literal (intOrNat 24) (\"token.py\" 127)) (\"token.py\" 127)) (verify (ge (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 124)) \"address\" (\"token.py\" 128)) (\"token.py\" 128)) \"balance\" (\"token.py\" 128)) (attr (params (\"token.py\" 124)) \"value\" (\"token.py\" 128)) (\"token.py\" 128)) (literal (intOrNat 23) (\"token.py\" 128)) (\"token.py\" 128)) (set (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 124)) \"address\" (\"token.py\" 128)) (\"token.py\" 129)) \"balance\" (\"token.py\" 129)) (openVariant (isNat (sub (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 124)) \"address\" (\"token.py\" 128)) (\"token.py\" 129)) \"balance\" (\"token.py\" 129)) (attr (params (\"token.py\" 124)) \"value\" (\"token.py\" 128)) (\"token.py\" 129)) (\"token.py\" 129)) \"Some\" \"None\" (\"token.py\" 129)) (\"token.py\" 129)) (set (attr (data) \"totalSupply\" (\"token.py\" 130)) (openVariant (isNat (sub (attr (data) \"totalSupply\" (\"token.py\" 130)) (attr (params (\"token.py\" 124)) \"value\" (\"token.py\" 128)) (\"token.py\" 130)) (\"token.py\" 130)) \"Some\" \"None\" (\"token.py\" 130)) (\"token.py\" 130)))) (getAdministrator True None None True (\"token.py\" 144) ((bind \"__s1\" ((set_type (first (params (\"token.py\" 144)) (\"oven-cracker.py\" 141)) \"unit\" (\"token.py\" 146)) (result (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 147)))) (set_type (second (params (\"token.py\" 144)) (\"oven-cracker.py\" 141)) (contract \"address\") (\"oven-cracker.py\" 141)) (set (operations (\"oven-cracker.py\" 141)) (cons (transfer (getLocal \"__s1\" (\"oven-cracker.py\" 141)) (literal (mutez 0) (\"oven-cracker.py\" 141)) (second (params (\"token.py\" 144)) (\"oven-cracker.py\" 141)) (\"token.py\" 144)) (operations (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)))) (getAllowance True None None True (\"token.py\" 95) ((bind \"__s2\" ((result (getItem (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (first (params (\"token.py\" 95)) (\"oven-cracker.py\" 141)) \"owner\" (\"token.py\" 97)) (\"token.py\" 97)) \"approvals\" (\"token.py\" 97)) (attr (first (params (\"token.py\" 95)) (\"oven-cracker.py\" 141)) \"spender\" (\"token.py\" 97)) (\"token.py\" 97)) (\"token.py\" 97)))) (set_type (second (params (\"token.py\" 95)) (\"oven-cracker.py\" 141)) (contract \"nat\") (\"oven-cracker.py\" 141)) (set (operations (\"oven-cracker.py\" 141)) (cons (transfer (getLocal \"__s2\" (\"oven-cracker.py\" 141)) (literal (mutez 0) (\"oven-cracker.py\" 141)) (second (params (\"token.py\" 95)) (\"oven-cracker.py\" 141)) (\"token.py\" 95)) (operations (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)))) (getBalance True None None True (\"token.py\" 91) ((bind \"__s3\" ((result (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (first (params (\"token.py\" 91)) (\"oven-cracker.py\" 141)) (\"token.py\" 93)) \"balance\" (\"token.py\" 93)) (\"token.py\" 93)))) (set_type (second (params (\"token.py\" 91)) (\"oven-cracker.py\" 141)) (contract \"nat\") (\"oven-cracker.py\" 141)) (set (operations (\"oven-cracker.py\" 141)) (cons (transfer (getLocal \"__s3\" (\"oven-cracker.py\" 141)) (literal (mutez 0) (\"oven-cracker.py\" 141)) (second (params (\"token.py\" 91)) (\"oven-cracker.py\" 141)) (\"token.py\" 91)) (operations (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)))) (getTotalSupply True None None True (\"token.py\" 99) ((bind \"__s4\" ((set_type (first (params (\"token.py\" 99)) (\"oven-cracker.py\" 141)) \"unit\" (\"token.py\" 101)) (result (attr (data) \"totalSupply\" (\"token.py\" 130)) (\"token.py\" 102)))) (set_type (second (params (\"token.py\" 99)) (\"oven-cracker.py\" 141)) (contract \"nat\") (\"oven-cracker.py\" 141)) (set (operations (\"oven-cracker.py\" 141)) (cons (transfer (getLocal \"__s4\" (\"oven-cracker.py\" 141)) (literal (mutez 0) (\"oven-cracker.py\" 141)) (second (params (\"token.py\" 99)) (\"oven-cracker.py\" 141)) (\"token.py\" 99)) (operations (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)) (\"oven-cracker.py\" 141)))) (mint True None None True (\"token.py\" 113) ((set_type (params (\"token.py\" 113)) (record ((address \"address\") (value \"nat\")) None) (\"token.py\" 115)) (verify (eq (sender) (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 134)) (literal (intOrNat 24) (\"token.py\" 116)) (\"token.py\" 116)) (ifBlock (not (contains (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 113)) \"address\" (\"token.py\" 117)) (\"token.py\" 88)) (\"token.py\" 88)) ((set (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 113)) \"address\" (\"token.py\" 117)) (\"token.py\" 89)) (record (\"token.py\" 89) (approvals (map (\"token.py\" 89) )) (balance (literal (intOrNat 0) (\"token.py\" 89)))) (\"token.py\" 89))) (\"token.py\" 88)) (set (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 113)) \"address\" (\"token.py\" 117)) (\"token.py\" 118)) \"balance\" (\"token.py\" 118)) (add (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 113)) \"address\" (\"token.py\" 117)) (\"token.py\" 118)) \"balance\" (\"token.py\" 118)) (attr (params (\"token.py\" 113)) \"value\" (\"token.py\" 118)) (\"token.py\" 118)) (\"token.py\" 118)) (set (attr (data) \"totalSupply\" (\"token.py\" 130)) (add (attr (data) \"totalSupply\" (\"token.py\" 130)) (attr (params (\"token.py\" 113)) \"value\" (\"token.py\" 118)) (\"token.py\" 119)) (\"token.py\" 119)) (verify (le (attr (data) \"totalSupply\" (\"token.py\" 130)) (attr (data) \"debtCeiling\" (\"token.py\" 122)) (\"token.py\" 122)) (literal (intOrNat 20) (\"token.py\" 122)) (\"token.py\" 122)))) (setAdministrator True None None True (\"token.py\" 136) ((set_type (params (\"token.py\" 136)) \"address\" (\"token.py\" 138)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (\"token.py\" 141)) (literal (intOrNat 4) (\"token.py\" 141)) (\"token.py\" 141)) (set (attr (data) \"administrator\" (\"token.py\" 134)) (params (\"token.py\" 136)) (\"token.py\" 142)))) (setDebtCeiling True None None True (\"token.py\" 189) ((set_type (params (\"token.py\" 189)) \"nat\" (\"token.py\" 191)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (\"token.py\" 193)) (literal (intOrNat 4) (\"token.py\" 193)) (\"token.py\" 193)) (set (attr (data) \"debtCeiling\" (\"token.py\" 122)) (params (\"token.py\" 189)) (\"token.py\" 194)))) (setGovernorContract True None None True (\"token.py\" 181) ((set_type (params (\"token.py\" 181)) \"address\" (\"token.py\" 183)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (\"token.py\" 185)) (literal (intOrNat 4) (\"token.py\" 185)) (\"token.py\" 185)) (set (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (params (\"token.py\" 181)) (\"token.py\" 186)))) (setPause True None None True (\"token.py\" 153) ((set_type (params (\"token.py\" 153)) \"bool\" (\"token.py\" 155)) (verify (eq (sender) (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 134)) (literal (intOrNat 24) (\"token.py\" 156)) (\"token.py\" 156)) (set (attr (data) \"paused\" (\"token.py\" 151)) (params (\"token.py\" 153)) (\"token.py\" 157)))) (transfer True None None True (\"token.py\" 65) ((set_type (params (\"token.py\" 65)) (record ((from_ \"address\") (to_ \"address\") (value \"nat\")) (Some ((\"from_ as from\") ((\"to_ as to\") (\"value\"))))) (\"token.py\" 67)) (verify (or (eq (sender) (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 134)) (and (not (attr (data) \"paused\" (\"token.py\" 151)) (\"token.py\" 69)) (or (eq (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (sender) (\"token.py\" 70)) (ge (getItem (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 71)) \"approvals\" (\"token.py\" 71)) (sender) (\"token.py\" 71)) (attr (params (\"token.py\" 65)) \"value\" (\"token.py\" 71)) (\"token.py\" 71)) (\"token.py\" 70)) (\"token.py\" 69)) (\"token.py\" 68)) (literal (intOrNat 22) (\"token.py\" 68)) (\"token.py\" 68)) (ifBlock (not (contains (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"to_\" (\"token.py\" 72)) (\"token.py\" 88)) (\"token.py\" 88)) ((set (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"to_\" (\"token.py\" 72)) (\"token.py\" 89)) (record (\"token.py\" 89) (approvals (map (\"token.py\" 89) )) (balance (literal (intOrNat 0) (\"token.py\" 89)))) (\"token.py\" 89))) (\"token.py\" 88)) (verify (ge (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 73)) \"balance\" (\"token.py\" 73)) (attr (params (\"token.py\" 65)) \"value\" (\"token.py\" 71)) (\"token.py\" 73)) (literal (intOrNat 23) (\"token.py\" 73)) (\"token.py\" 73)) (set (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 74)) \"balance\" (\"token.py\" 74)) (openVariant (isNat (sub (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 74)) \"balance\" (\"token.py\" 74)) (attr (params (\"token.py\" 65)) \"value\" (\"token.py\" 71)) (\"token.py\" 74)) (\"token.py\" 74)) \"Some\" \"None\" (\"token.py\" 74)) (\"token.py\" 74)) (set (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"to_\" (\"token.py\" 72)) (\"token.py\" 75)) \"balance\" (\"token.py\" 75)) (add (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"to_\" (\"token.py\" 72)) (\"token.py\" 75)) \"balance\" (\"token.py\" 75)) (attr (params (\"token.py\" 65)) \"value\" (\"token.py\" 71)) (\"token.py\" 75)) (\"token.py\" 75)) (ifBlock (and (neq (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (sender) (\"token.py\" 76)) (not (eq (sender) (attr (data) \"administrator\" (\"token.py\" 134)) (\"token.py\" 134)) (\"token.py\" 76)) (\"token.py\" 76)) ((set (getItem (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 77)) \"approvals\" (\"token.py\" 77)) (sender) (\"token.py\" 77)) (openVariant (isNat (sub (getItem (attr (getItem (attr (data) \"balances\" (\"token.py\" 83)) (attr (params (\"token.py\" 65)) \"from_\" (\"token.py\" 70)) (\"token.py\" 77)) \"approvals\" (\"token.py\" 77)) (sender) (\"token.py\" 77)) (attr (params (\"token.py\" 65)) \"value\" (\"token.py\" 71)) (\"token.py\" 77)) (\"token.py\" 77)) \"Some\" \"None\" (\"token.py\" 77)) (\"token.py\" 77))) (\"token.py\" 76)))) (updateContractMetadata True None None True (\"token.py\" 197) ((set_type (params (\"token.py\" 197)) (tuple \"string\" \"bytes\") (\"token.py\" 199)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (\"token.py\" 201)) (literal (intOrNat 4) (\"token.py\" 201)) (\"token.py\" 201)) (set (getItem (attr (data) \"metadata\" (\"token.py\" 204)) (first (params (\"token.py\" 197)) (\"token.py\" 202)) (\"token.py\" 204)) (second (params (\"token.py\" 197)) (\"token.py\" 203)) (\"token.py\" 204)))) (updateTokenMetadata True None None True (\"token.py\" 207) ((set_type (params (\"token.py\" 207)) (tuple \"nat\" (map \"string\" \"bytes\")) (\"token.py\" 209)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"token.py\" 141)) (\"token.py\" 211)) (literal (intOrNat 4) (\"token.py\" 211)) (\"token.py\" 211)) (set (getItem (attr (data) \"token_metadata\" (\"token.py\" 212)) (literal (intOrNat 0) (\"token.py\" 212)) (\"token.py\" 212)) (params (\"token.py\" 207)) (\"token.py\" 212)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 1 (\"token.py\" 56))",
    "line_no": "(\"oven-cracker.py\" 141)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 2 (\"test-helpers/fake-harbinger.py\" 13)) \nstorage (record (\"test-helpers/fake-harbinger.py\" 13) (harbingerAsset (literal (string \"XTZ-USD\") (\"test-helpers/fake-harbinger.py\" 13))) (harbingerUpdateTime (literal (timestamp 0) (\"oven-cracker.py\" 143))) (harbingerValue (literal (nat 2000000) (\"oven-cracker.py\" 144))))\nstorage_type (())\nmessages ((get True None None True (\"test-helpers/fake-harbinger.py\" 30) ((set_type (params (\"test-helpers/fake-harbinger.py\" 30)) (tuple \"string\" (contract (tuple \"string\" (tuple \"timestamp\" \"nat\")))) (\"test-helpers/fake-harbinger.py\" 32)) (set (operations (\"test-helpers/fake-harbinger.py\" 37)) (cons (transfer (tuple (\"test-helpers/fake-harbinger.py\" 37) (attr (data) \"harbingerAsset\" (\"test-helpers/fake-harbinger.py\" 36)) (tuple (\"test-helpers/fake-harbinger.py\" 37) (attr (data) \"harbingerUpdateTime\" (\"test-helpers/fake-harbinger.py\" 36)) (attr (data) \"harbingerValue\" (\"test-helpers/fake-harbinger.py\" 36)))) (literal (mutez 0) (\"test-helpers/fake-harbinger.py\" 37)) (second (params (\"test-helpers/fake-harbinger.py\" 30)) (\"test-helpers/fake-harbinger.py\" 34)) (\"test-helpers/fake-harbinger.py\" 37)) (operations (\"test-helpers/fake-harbinger.py\" 37)) (\"test-helpers/fake-harbinger.py\" 37)) (\"test-helpers/fake-harbinger.py\" 37)))) (setNewPrice True None None True (\"test-helpers/fake-harbinger.py\" 20) ((set (attr (data) \"harbingerValue\" (\"test-helpers/fake-harbinger.py\" 36)) (params (\"test-helpers/fake-harbinger.py\" 20)) (\"test-helpers/fake-harbinger.py\" 22)))) (update True None None False (\"test-helpers/fake-harbinger.py\" 25) ()))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 2 (\"test-helpers/fake-harbinger.py\" 13))",
    "line_no": "(\"oven-cracker.py\" 150)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 3 (\"oracle.py\" 34)) \nstorage (record (\"oracle.py\" 34) (clientCallback (variant \"None\" (unit) -1)) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (harbingerContractAddress (contract_address (static_id 2 (\"test-helpers/fake-harbinger.py\" 13)) \"\" (\"test-helpers/fake-harbinger.py\" 13))) (maxDataDelaySec (literal (nat 1800) (\"oracle.py\" 29))) (state (literal (intOrNat 0) (\"oracle.py\" 34))))\nstorage_type (())\nmessages ((default True None None True (\"oracle.py\" 47) ((set_type (params (\"oracle.py\" 47)) \"unit\" (\"oracle.py\" 49)) (failwith (literal (intOrNat 19) (\"oracle.py\" 50)) (\"oracle.py\" 50)))) (getXtzUsdRate True None None True (\"oracle.py\" 56) ((set_type (params (\"oracle.py\" 56)) (contract \"nat\") (\"oracle.py\" 58)) (verify (eq (attr (data) \"state\" (\"oracle.py\" 61)) (literal (intOrNat 0) (\"oracle.py\" 61)) (\"oracle.py\" 61)) (literal (intOrNat 12) (\"oracle.py\" 61)) (\"oracle.py\" 61)) (verify (eq (amount) (literal (mutez 0) (\"oracle.py\" 64)) (\"oracle.py\" 64)) (literal (intOrNat 15) (\"oracle.py\" 64)) (\"oracle.py\" 64)) (set (attr (data) \"state\" (\"oracle.py\" 61)) (literal (intOrNat 1) (\"oracle.py\" 67)) (\"oracle.py\" 67)) (set (attr (data) \"clientCallback\" (\"oracle.py\" 68)) (variant \"Some\" (to_address (params (\"oracle.py\" 56)) (\"oracle.py\" 68)) (\"oracle.py\" 68)) (\"oracle.py\" 68)) (set_type (self \"getXtzUsdRate_callback\" (\"oracle.py\" 71)) (contract (tuple \"string\" (tuple \"timestamp\" \"nat\"))) (\"oracle.py\" 72)) (set (operations (\"oracle.py\" 81)) (cons (transfer (tuple (\"oracle.py\" 81) (literal (string \"XTZ-USD\") (\"oracle.py\" 81)) (self \"getXtzUsdRate_callback\" (\"oracle.py\" 71))) (literal (mutez 0) (\"oracle.py\" 81)) (openVariant (contract \"get\" (tuple \"string\" (contract (tuple \"string\" (tuple \"timestamp\" \"nat\")))) (attr (data) \"harbingerContractAddress\" (\"oracle.py\" 77)) (\"oracle.py\" 75)) \"Some\" \"None\" (\"oracle.py\" 79)) (\"oracle.py\" 81)) (operations (\"oracle.py\" 81)) (\"oracle.py\" 81)) (\"oracle.py\" 81)))) (getXtzUsdRate_callback True None None True (\"oracle.py\" 87) ((set_type (params (\"oracle.py\" 87)) (tuple \"string\" (tuple \"timestamp\" \"nat\")) (\"oracle.py\" 89)) (verify (eq (attr (data) \"state\" (\"oracle.py\" 61)) (literal (intOrNat 1) (\"oracle.py\" 92)) (\"oracle.py\" 92)) (literal (intOrNat 12) (\"oracle.py\" 92)) (\"oracle.py\" 92)) (verify (eq (sender) (attr (data) \"harbingerContractAddress\" (\"oracle.py\" 77)) (\"oracle.py\" 95)) (literal (intOrNat 3) (\"oracle.py\" 95)) (\"oracle.py\" 95)) (verify (eq (first (params (\"oracle.py\" 87)) (\"oracle.py\" 96)) (literal (string \"XTZ-USD\") (\"oracle.py\" 97)) (\"oracle.py\" 97)) (literal (intOrNat 14) (\"oracle.py\" 97)) (\"oracle.py\" 97)) (verify (lt (openVariant (isNat (sub (now) (first (second (params (\"oracle.py\" 87)) (\"oracle.py\" 100)) (\"oracle.py\" 100)) (\"oracle.py\" 100)) (\"oracle.py\" 100)) \"Some\" \"None\" (\"oracle.py\" 100)) (attr (data) \"maxDataDelaySec\" (\"oracle.py\" 101)) (\"oracle.py\" 101)) (literal (intOrNat 17) (\"oracle.py\" 101)) (\"oracle.py\" 101)) (set (operations (\"oracle.py\" 114)) (cons (transfer (mul (second (second (params (\"oracle.py\" 87)) (\"oracle.py\" 111)) (\"oracle.py\" 111)) (literal (intOrNat 1000000000000) (\"oracle.py\" 111)) (\"oracle.py\" 111)) (literal (mutez 0) (\"oracle.py\" 114)) (openVariant (contract \"\" \"nat\" (openVariant (attr (data) \"clientCallback\" (\"oracle.py\" 68)) \"Some\" \"None\" (\"oracle.py\" 104)) (\"oracle.py\" 105)) \"Some\" \"None\" (\"oracle.py\" 109)) (\"oracle.py\" 114)) (operations (\"oracle.py\" 114)) (\"oracle.py\" 114)) (\"oracle.py\" 114)) (set (attr (data) \"state\" (\"oracle.py\" 61)) (literal (intOrNat 0) (\"oracle.py\" 117)) (\"oracle.py\" 117)) (set (attr (data) \"clientCallback\" (\"oracle.py\" 68)) (variant \"None\" (unit) -1) (\"oracle.py\" 118)))) (setGovernorContract True None None True (\"oracle.py\" 125) ((set_type (params (\"oracle.py\" 125)) \"address\" (\"oracle.py\" 127)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oracle.py\" 129)) (\"oracle.py\" 129)) (literal (intOrNat 4) (\"oracle.py\" 129)) (\"oracle.py\" 129)) (set (attr (data) \"governorContractAddress\" (\"oracle.py\" 129)) (params (\"oracle.py\" 125)) (\"oracle.py\" 130)))) (setMaxDataDelaySec True None None True (\"oracle.py\" 133) ((set_type (params (\"oracle.py\" 133)) \"nat\" (\"oracle.py\" 135)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oracle.py\" 129)) (\"oracle.py\" 137)) (literal (intOrNat 4) (\"oracle.py\" 137)) (\"oracle.py\" 137)) (set (attr (data) \"maxDataDelaySec\" (\"oracle.py\" 101)) (params (\"oracle.py\" 133)) (\"oracle.py\" 138)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 3 (\"oracle.py\" 34))",
    "line_no": "(\"oven-cracker.py\" 153)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 4 (\"oven-registry.py\" 18)) \nstorage (record (\"oven-registry.py\" 18) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (ovenFactoryContractAddress (literal (address \"tz1irJKkXS2DBWkU1NnmFQx1c1L7pbGg4yhk\") (\"test-helpers/addresses.py\" 15))) (ovenMap (type_annotation (big_map (\"oven-registry.py\" 21) ) (bigmap \"address\" \"address\") (\"oven-registry.py\" 21))))\nstorage_type (())\nmessages ((addOven True None None True (\"oven-registry.py\" 50) ((set_type (params (\"oven-registry.py\" 50)) (tuple \"address\" \"address\") (\"oven-registry.py\" 52)) (verify (eq (sender) (attr (data) \"ovenFactoryContractAddress\" (\"oven-registry.py\" 54)) (\"oven-registry.py\" 54)) (literal (intOrNat 7) (\"oven-registry.py\" 54)) (\"oven-registry.py\" 54)) (set (getItem (attr (data) \"ovenMap\" (\"oven-registry.py\" 59)) (first (params (\"oven-registry.py\" 50)) (\"oven-registry.py\" 56)) (\"oven-registry.py\" 59)) (second (params (\"oven-registry.py\" 50)) (\"oven-registry.py\" 57)) (\"oven-registry.py\" 59)))) (default True None None True (\"oven-registry.py\" 40) ((set_type (params (\"oven-registry.py\" 40)) \"unit\" (\"oven-registry.py\" 42)) (failwith (literal (intOrNat 19) (\"oven-registry.py\" 43)) (\"oven-registry.py\" 43)))) (isOven True None None True (\"oven-registry.py\" 32) ((verify (contains (attr (data) \"ovenMap\" (\"oven-registry.py\" 59)) (params (\"oven-registry.py\" 32)) (\"oven-registry.py\" 34)) (literal (intOrNat 1) (\"oven-registry.py\" 34)) (\"oven-registry.py\" 34)) (verify (eq (amount) (literal (mutez 0) (\"oven-registry.py\" 37)) (\"oven-registry.py\" 37)) (literal (intOrNat 15) (\"oven-registry.py\" 37)) (\"oven-registry.py\" 37)))) (setGovernorContract True None None True (\"oven-registry.py\" 66) ((set_type (params (\"oven-registry.py\" 66)) \"address\" (\"oven-registry.py\" 68)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-registry.py\" 70)) (\"oven-registry.py\" 70)) (literal (intOrNat 4) (\"oven-registry.py\" 70)) (\"oven-registry.py\" 70)) (set (attr (data) \"governorContractAddress\" (\"oven-registry.py\" 70)) (params (\"oven-registry.py\" 66)) (\"oven-registry.py\" 71)))) (setOvenFactoryContract True None None True (\"oven-registry.py\" 74) ((set_type (params (\"oven-registry.py\" 74)) \"address\" (\"oven-registry.py\" 76)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-registry.py\" 70)) (\"oven-registry.py\" 78)) (literal (intOrNat 4) (\"oven-registry.py\" 78)) (\"oven-registry.py\" 78)) (set (attr (data) \"ovenFactoryContractAddress\" (\"oven-registry.py\" 54)) (params (\"oven-registry.py\" 74)) (\"oven-registry.py\" 79)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 4 (\"oven-registry.py\" 18))",
    "line_no": "(\"oven-cracker.py\" 159)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 5 (\"minter.py\" 34)) \nstorage (record (\"minter.py\" 34) (collateralizationPercentage (literal (nat 200000000000000000000) (\"oven-cracker.py\" 163))) (devFundSplit (literal (nat 100000000000000000) (\"minter.py\" 28))) (developerFundContractAddress (literal (address \"tz1R6Ej25VSerE3MkSoEEeBjKHCDTFbpKuSX\") (\"test-helpers/addresses.py\" 45))) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (interestIndex (literal (intOrNat 1000000000000000000) (\"minter.py\" 34))) (lastInterestIndexUpdateTime (literal (timestamp 0) (\"oven-cracker.py\" 143))) (liquidationFeePercent (literal (nat 80000000000000000) (\"minter.py\" 29))) (liquidityPoolContractAddress (literal (address \"tz3QSGPoRp3Kn7n3vY24eYeu3Peuqo45LQ4D\") (\"test-helpers/addresses.py\" 57))) (ovenProxyContractAddress (literal (address \"tz1c461F8GirBvq5DpFftPoPyCcPR7HQM6gm\") (\"test-helpers/addresses.py\" 9))) (privateOwnerLiquidationThreshold (literal (nat 20000000000000000000) (\"minter.py\" 22))) (stabilityFee (literal (nat 0) (\"minter.py\" 23))) (stabilityFundContractAddress (literal (address \"tz1W5VkdB5s7ENMESVBtwyt9kyvLqPcUczRT\") (\"test-helpers/addresses.py\" 42))) (tokenContractAddress (literal (address \"tz1cYufsxHXJcvANhvS55h3aY32a9BAFB494\") (\"test-helpers/addresses.py\" 27))))\nstorage_type (())\nmessages ((borrow True None None True (\"minter.py\" 84) ((set_type (params (\"minter.py\" 84)) (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\")))))))) (\"minter.py\" 86)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 89)) (literal (intOrNat 2) (\"minter.py\" 89)) (\"minter.py\" 89)) (match_tuple (\"minter.py\" 92) (params (\"minter.py\" 84)) \"match_pair_minter_92_fst\" \"match_pair_minter_92_snd\") (match_tuple (\"minter.py\" 93) (variant_arg \"match_pair_minter_92_snd\" (\"minter.py\" 92)) \"match_pair_minter_93_fst\" \"match_pair_minter_93_snd\") (match_tuple (\"minter.py\" 94) (variant_arg \"match_pair_minter_93_snd\" (\"minter.py\" 93)) \"match_pair_minter_94_fst\" \"match_pair_minter_94_snd\") (match_tuple (\"minter.py\" 95) (variant_arg \"match_pair_minter_94_snd\" (\"minter.py\" 94)) \"match_pair_minter_95_fst\" \"match_pair_minter_95_snd\") (match_tuple (\"minter.py\" 96) (variant_arg \"match_pair_minter_95_snd\" (\"minter.py\" 95)) \"match_pair_minter_96_fst\" \"match_pair_minter_96_snd\") (match_tuple (\"minter.py\" 97) (variant_arg \"match_pair_minter_96_snd\" (\"minter.py\" 96)) \"match_pair_minter_97_fst\" \"match_pair_minter_97_snd\") (match_tuple (\"minter.py\" 98) (variant_arg \"match_pair_minter_97_snd\" (\"minter.py\" 97)) \"match_pair_minter_98_fst\" \"match_pair_minter_98_snd\") (set_type (variant_arg \"match_pair_minter_92_fst\" (\"minter.py\" 92)) \"nat\" (\"minter.py\" 104)) (set_type (variant_arg \"match_pair_minter_93_fst\" (\"minter.py\" 93)) \"address\" (\"minter.py\" 105)) (set_type (variant_arg \"match_pair_minter_94_fst\" (\"minter.py\" 94)) \"address\" (\"minter.py\" 106)) (set_type (variant_arg \"match_pair_minter_95_fst\" (\"minter.py\" 95)) \"nat\" (\"minter.py\" 107)) (set_type (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) \"nat\" (\"minter.py\" 108)) (set_type (variant_arg \"match_pair_minter_97_fst\" (\"minter.py\" 97)) \"bool\" (\"minter.py\" 109)) (set_type (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) \"nat\" (\"minter.py\" 110)) (set_type (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) \"int\" (\"minter.py\" 111)) (set_type (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) \"nat\" (\"minter.py\" 112)) (verify (eq (variant_arg \"match_pair_minter_97_fst\" (\"minter.py\" 97)) (literal (bool False) (\"minter.py\" 120)) (\"minter.py\" 120)) (literal (intOrNat 16) (\"minter.py\" 120)) (\"minter.py\" 120)) (set_type (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) \"nat\" (\"minter.py\" 128)) (set_type (add (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) (add (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 123) (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) (tuple (\"minter.py\" 123) (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (tuple (\"minter.py\" 123) (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117))))) (\"minter.py\" 123)) (\"minter.py\" 124)) (\"minter.py\" 131)) \"nat\" (\"minter.py\" 132)) (ifBlock (gt (add (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) (add (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 123) (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) (tuple (\"minter.py\" 123) (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (tuple (\"minter.py\" 123) (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117))))) (\"minter.py\" 123)) (\"minter.py\" 124)) (\"minter.py\" 131)) (literal (intOrNat 0) (\"minter.py\" 133)) (\"minter.py\" 133)) ((verify (ge (call_lambda (global \"computeCollateralizationPercentage\" (\"minter.py\" 592)) (tuple (\"minter.py\" 134) (variant_arg \"match_pair_minter_95_fst\" (\"minter.py\" 95)) (tuple (\"minter.py\" 134) (variant_arg \"match_pair_minter_92_fst\" (\"minter.py\" 92)) (add (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) (add (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 123) (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) (tuple (\"minter.py\" 123) (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (tuple (\"minter.py\" 123) (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117))))) (\"minter.py\" 123)) (\"minter.py\" 124)) (\"minter.py\" 131)))) (\"minter.py\" 134)) (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (\"minter.py\" 135)) (literal (intOrNat 11) (\"minter.py\" 135)) (\"minter.py\" 135))) (\"minter.py\" 133)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117)) (\"minter.py\" 138)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)) (literal (intOrNat 60) (\"minter.py\" 139)) (\"minter.py\" 139)) (\"minter.py\" 139)) (\"minter.py\" 139)) (\"minter.py\" 139)) (set_type (variant_arg \"match_pair_minter_93_fst\" (\"minter.py\" 93)) \"address\" (\"minter.py\" 606)) (set_type (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) \"nat\" (\"minter.py\" 607)) (set_type (add (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 123) (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) (tuple (\"minter.py\" 123) (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (tuple (\"minter.py\" 123) (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117))))) (\"minter.py\" 123)) (\"minter.py\" 124)) \"nat\" (\"minter.py\" 608)) (set_type (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117)) \"nat\" (\"minter.py\" 609)) (set_type (variant_arg \"match_pair_minter_97_fst\" (\"minter.py\" 97)) \"bool\" (\"minter.py\" 610)) (set_type (balance) \"mutez\" (\"minter.py\" 611)) (set (operations (\"minter.py\" 622)) (cons (transfer (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_93_fst\" (\"minter.py\" 93)) (tuple (\"minter.py\" 622) (add (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) (\"minter.py\" 127)) (tuple (\"minter.py\" 622) (toInt (add (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 123) (first (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 99)) (tuple (\"minter.py\" 123) (variant_arg \"match_pair_minter_96_fst\" (\"minter.py\" 96)) (tuple (\"minter.py\" 123) (openVariant (isNat (variant_arg \"match_pair_minter_98_fst\" (\"minter.py\" 98)) (\"minter.py\" 102)) \"Some\" \"None\" (\"minter.py\" 102)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117))))) (\"minter.py\" 123)) (\"minter.py\" 124)) (\"minter.py\" 614)) (tuple (\"minter.py\" 622) (toInt (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 117) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 117) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 115)) (\"minter.py\" 115)) \"Some\" \"None\" (\"minter.py\" 115)) (literal (intOrNat 60) (\"minter.py\" 116)) (\"minter.py\" 116)))) (\"minter.py\" 117)) (\"minter.py\" 614)) (variant_arg \"match_pair_minter_97_fst\" (\"minter.py\" 97)))))) (balance) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 616)) \"Some\" \"None\" (\"minter.py\" 620)) (\"minter.py\" 622)) (operations (\"minter.py\" 622)) (\"minter.py\" 622)) (\"minter.py\" 622)) (set_type (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)) \"nat\" (\"minter.py\" 552)) (set_type (variant_arg \"match_pair_minter_94_fst\" (\"minter.py\" 94)) \"address\" (\"minter.py\" 553)) (set (operations (\"minter.py\" 561)) (cons (transfer (record (\"minter.py\" 555) (address (variant_arg \"match_pair_minter_94_fst\" (\"minter.py\" 94))) (value (second (variant_arg \"match_pair_minter_98_snd\" (\"minter.py\" 98)) (\"minter.py\" 100)))) (literal (mutez 0) (\"minter.py\" 561)) (openVariant (contract \"mint\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 556)) \"Some\" \"None\" (\"minter.py\" 560)) (\"minter.py\" 561)) (operations (\"minter.py\" 561)) (\"minter.py\" 561)) (\"minter.py\" 561)))) (deposit True None None True (\"minter.py\" 214) ((set_type (params (\"minter.py\" 214)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" \"int\")))))) (\"minter.py\" 216)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 219)) (literal (intOrNat 2) (\"minter.py\" 219)) (\"minter.py\" 219)) (match_tuple (\"minter.py\" 222) (params (\"minter.py\" 214)) \"match_pair_minter_222_fst\" \"match_pair_minter_222_snd\") (match_tuple (\"minter.py\" 223) (variant_arg \"match_pair_minter_222_snd\" (\"minter.py\" 222)) \"match_pair_minter_223_fst\" \"match_pair_minter_223_snd\") (match_tuple (\"minter.py\" 224) (variant_arg \"match_pair_minter_223_snd\" (\"minter.py\" 223)) \"match_pair_minter_224_fst\" \"match_pair_minter_224_snd\") (match_tuple (\"minter.py\" 225) (variant_arg \"match_pair_minter_224_snd\" (\"minter.py\" 224)) \"match_pair_minter_225_fst\" \"match_pair_minter_225_snd\") (match_tuple (\"minter.py\" 226) (variant_arg \"match_pair_minter_225_snd\" (\"minter.py\" 225)) \"match_pair_minter_226_fst\" \"match_pair_minter_226_snd\") (set_type (variant_arg \"match_pair_minter_222_fst\" (\"minter.py\" 222)) \"address\" (\"minter.py\" 232)) (set_type (variant_arg \"match_pair_minter_223_fst\" (\"minter.py\" 223)) \"address\" (\"minter.py\" 233)) (set_type (variant_arg \"match_pair_minter_224_fst\" (\"minter.py\" 224)) \"nat\" (\"minter.py\" 234)) (set_type (variant_arg \"match_pair_minter_225_fst\" (\"minter.py\" 225)) \"nat\" (\"minter.py\" 235)) (set_type (variant_arg \"match_pair_minter_226_fst\" (\"minter.py\" 226)) \"bool\" (\"minter.py\" 236)) (set_type (openVariant (isNat (first (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 227)) (\"minter.py\" 230)) \"Some\" \"None\" (\"minter.py\" 230)) \"nat\" (\"minter.py\" 237)) (set_type (second (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 228)) \"int\" (\"minter.py\" 238)) (verify (eq (variant_arg \"match_pair_minter_226_fst\" (\"minter.py\" 226)) (literal (bool False) (\"minter.py\" 246)) (\"minter.py\" 246)) (literal (intOrNat 16) (\"minter.py\" 246)) (\"minter.py\" 246)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 243) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 243) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)))) (\"minter.py\" 243)) (\"minter.py\" 253)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)) (literal (intOrNat 60) (\"minter.py\" 254)) (\"minter.py\" 254)) (\"minter.py\" 254)) (\"minter.py\" 254)) (\"minter.py\" 254)) (set_type (variant_arg \"match_pair_minter_222_fst\" (\"minter.py\" 222)) \"address\" (\"minter.py\" 606)) (set_type (variant_arg \"match_pair_minter_225_fst\" (\"minter.py\" 225)) \"nat\" (\"minter.py\" 607)) (set_type (add (openVariant (isNat (first (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 227)) (\"minter.py\" 230)) \"Some\" \"None\" (\"minter.py\" 230)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 249) (second (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 228)) (tuple (\"minter.py\" 249) (variant_arg \"match_pair_minter_225_fst\" (\"minter.py\" 225)) (tuple (\"minter.py\" 249) (openVariant (isNat (first (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 227)) (\"minter.py\" 230)) \"Some\" \"None\" (\"minter.py\" 230)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 243) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 243) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)))) (\"minter.py\" 243))))) (\"minter.py\" 249)) (\"minter.py\" 250)) \"nat\" (\"minter.py\" 608)) (set_type (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 243) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 243) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)))) (\"minter.py\" 243)) \"nat\" (\"minter.py\" 609)) (set_type (variant_arg \"match_pair_minter_226_fst\" (\"minter.py\" 226)) \"bool\" (\"minter.py\" 610)) (set_type (balance) \"mutez\" (\"minter.py\" 611)) (set (operations (\"minter.py\" 622)) (cons (transfer (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_222_fst\" (\"minter.py\" 222)) (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_225_fst\" (\"minter.py\" 225)) (tuple (\"minter.py\" 622) (toInt (add (openVariant (isNat (first (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 227)) (\"minter.py\" 230)) \"Some\" \"None\" (\"minter.py\" 230)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 249) (second (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 228)) (tuple (\"minter.py\" 249) (variant_arg \"match_pair_minter_225_fst\" (\"minter.py\" 225)) (tuple (\"minter.py\" 249) (openVariant (isNat (first (variant_arg \"match_pair_minter_226_snd\" (\"minter.py\" 226)) (\"minter.py\" 227)) (\"minter.py\" 230)) \"Some\" \"None\" (\"minter.py\" 230)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 243) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 243) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)))) (\"minter.py\" 243))))) (\"minter.py\" 249)) (\"minter.py\" 250)) (\"minter.py\" 614)) (tuple (\"minter.py\" 622) (toInt (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 243) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 243) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 241)) (\"minter.py\" 241)) \"Some\" \"None\" (\"minter.py\" 241)) (literal (intOrNat 60) (\"minter.py\" 242)) (\"minter.py\" 242)))) (\"minter.py\" 243)) (\"minter.py\" 614)) (variant_arg \"match_pair_minter_226_fst\" (\"minter.py\" 226)))))) (balance) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 616)) \"Some\" \"None\" (\"minter.py\" 620)) (\"minter.py\" 622)) (operations (\"minter.py\" 622)) (\"minter.py\" 622)) (\"minter.py\" 622)))) (getInterestIndex True None None True (\"minter.py\" 60) ((set_type (params (\"minter.py\" 60)) (contract \"nat\") (\"minter.py\" 62)) (verify (eq (amount) (literal (mutez 0) (\"minter.py\" 65)) (\"minter.py\" 65)) (literal (intOrNat 15) (\"minter.py\" 65)) (\"minter.py\" 65)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 70) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 70) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 68)) (\"minter.py\" 68)) \"Some\" \"None\" (\"minter.py\" 68)) (literal (intOrNat 60) (\"minter.py\" 69)) (\"minter.py\" 69)))) (\"minter.py\" 70)) (\"minter.py\" 73)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 68)) (\"minter.py\" 68)) \"Some\" \"None\" (\"minter.py\" 68)) (literal (intOrNat 60) (\"minter.py\" 69)) (\"minter.py\" 69)) (literal (intOrNat 60) (\"minter.py\" 74)) (\"minter.py\" 74)) (\"minter.py\" 74)) (\"minter.py\" 74)) (\"minter.py\" 74)) (set (operations (\"minter.py\" 77)) (cons (transfer (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 70) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 70) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 68)) (\"minter.py\" 68)) \"Some\" \"None\" (\"minter.py\" 68)) (literal (intOrNat 60) (\"minter.py\" 69)) (\"minter.py\" 69)))) (\"minter.py\" 70)) (literal (mutez 0) (\"minter.py\" 77)) (params (\"minter.py\" 60)) (\"minter.py\" 77)) (operations (\"minter.py\" 77)) (\"minter.py\" 77)) (\"minter.py\" 77)))) (liquidate True None None True (\"minter.py\" 318) ((set_type (params (\"minter.py\" 318)) (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"address\")))))))) (\"minter.py\" 320)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 323)) (literal (intOrNat 2) (\"minter.py\" 323)) (\"minter.py\" 323)) (match_tuple (\"minter.py\" 326) (params (\"minter.py\" 318)) \"match_pair_minter_326_fst\" \"match_pair_minter_326_snd\") (match_tuple (\"minter.py\" 327) (variant_arg \"match_pair_minter_326_snd\" (\"minter.py\" 326)) \"match_pair_minter_327_fst\" \"match_pair_minter_327_snd\") (match_tuple (\"minter.py\" 328) (variant_arg \"match_pair_minter_327_snd\" (\"minter.py\" 327)) \"match_pair_minter_328_fst\" \"match_pair_minter_328_snd\") (match_tuple (\"minter.py\" 329) (variant_arg \"match_pair_minter_328_snd\" (\"minter.py\" 328)) \"match_pair_minter_329_fst\" \"match_pair_minter_329_snd\") (match_tuple (\"minter.py\" 330) (variant_arg \"match_pair_minter_329_snd\" (\"minter.py\" 329)) \"match_pair_minter_330_fst\" \"match_pair_minter_330_snd\") (match_tuple (\"minter.py\" 331) (variant_arg \"match_pair_minter_330_snd\" (\"minter.py\" 330)) \"match_pair_minter_331_fst\" \"match_pair_minter_331_snd\") (match_tuple (\"minter.py\" 332) (variant_arg \"match_pair_minter_331_snd\" (\"minter.py\" 331)) \"match_pair_minter_332_fst\" \"match_pair_minter_332_snd\") (set_type (variant_arg \"match_pair_minter_326_fst\" (\"minter.py\" 326)) \"nat\" (\"minter.py\" 338)) (set_type (variant_arg \"match_pair_minter_327_fst\" (\"minter.py\" 327)) \"address\" (\"minter.py\" 339)) (set_type (variant_arg \"match_pair_minter_328_fst\" (\"minter.py\" 328)) \"address\" (\"minter.py\" 340)) (set_type (variant_arg \"match_pair_minter_329_fst\" (\"minter.py\" 329)) \"nat\" (\"minter.py\" 341)) (set_type (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) \"nat\" (\"minter.py\" 342)) (set_type (variant_arg \"match_pair_minter_331_fst\" (\"minter.py\" 331)) \"bool\" (\"minter.py\" 343)) (set_type (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) \"nat\" (\"minter.py\" 344)) (set_type (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) \"int\" (\"minter.py\" 345)) (set_type (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334)) \"address\" (\"minter.py\" 346)) (verify (eq (variant_arg \"match_pair_minter_331_fst\" (\"minter.py\" 331)) (literal (bool False) (\"minter.py\" 354)) (\"minter.py\" 354)) (literal (intOrNat 16) (\"minter.py\" 354)) (\"minter.py\" 354)) (verify (lt (call_lambda (global \"computeCollateralizationPercentage\" (\"minter.py\" 592)) (tuple (\"minter.py\" 362) (variant_arg \"match_pair_minter_329_fst\" (\"minter.py\" 329)) (tuple (\"minter.py\" 362) (variant_arg \"match_pair_minter_326_fst\" (\"minter.py\" 326)) (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)))) (\"minter.py\" 362)) (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (\"minter.py\" 363)) (literal (intOrNat 10) (\"minter.py\" 363)) (\"minter.py\" 363)) (verify (or (or (eq (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334)) (attr (data) \"liquidityPoolContractAddress\" (\"minter.py\" 370)) (\"minter.py\" 370)) (eq (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334)) (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371)) (\"minter.py\" 371)) (\"minter.py\" 370)) (lt (call_lambda (global \"computeCollateralizationPercentage\" (\"minter.py\" 592)) (tuple (\"minter.py\" 362) (variant_arg \"match_pair_minter_329_fst\" (\"minter.py\" 329)) (tuple (\"minter.py\" 362) (variant_arg \"match_pair_minter_326_fst\" (\"minter.py\" 326)) (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)))) (\"minter.py\" 362)) (openVariant (isNat (sub (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (attr (data) \"privateOwnerLiquidationThreshold\" (\"minter.py\" 368)) (\"minter.py\" 368)) (\"minter.py\" 368)) \"Some\" \"None\" (\"minter.py\" 368)) (\"minter.py\" 372)) (\"minter.py\" 370)) (literal (intOrNat 26) (\"minter.py\" 369)) (\"minter.py\" 369)) (set_type (add (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 380)) \"nat\" (\"minter.py\" 540)) (set_type (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334)) \"address\" (\"minter.py\" 541)) (set (operations (\"minter.py\" 549)) (cons (transfer (record (\"minter.py\" 543) (address (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334))) (value (add (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 380)))) (literal (mutez 0) (\"minter.py\" 549)) (openVariant (contract \"burn\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 544)) \"Some\" \"None\" (\"minter.py\" 548)) (\"minter.py\" 549)) (operations (\"minter.py\" 549)) (\"minter.py\" 549)) (\"minter.py\" 549)) (set_type (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) \"nat\" (\"minter.py\" 529)) (set_type (floordiv (mul (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) \"nat\" (\"minter.py\" 552)) (set_type (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536)) \"address\" (\"minter.py\" 553)) (set (operations (\"minter.py\" 561)) (cons (transfer (record (\"minter.py\" 555) (address (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536))) (value (floordiv (mul (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)))) (literal (mutez 0) (\"minter.py\" 561)) (openVariant (contract \"mint\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 556)) \"Some\" \"None\" (\"minter.py\" 560)) (\"minter.py\" 561)) (operations (\"minter.py\" 561)) (\"minter.py\" 561)) (\"minter.py\" 561)) (set_type (openVariant (isNat (sub (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (floordiv (mul (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) (\"minter.py\" 533)) (\"minter.py\" 533)) \"Some\" \"None\" (\"minter.py\" 533)) \"nat\" (\"minter.py\" 552)) (set_type (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371)) \"address\" (\"minter.py\" 553)) (set (operations (\"minter.py\" 561)) (cons (transfer (record (\"minter.py\" 555) (address (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371))) (value (openVariant (isNat (sub (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (floordiv (mul (add (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (floordiv (mul (add (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (add (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 357) (first (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 333)) (tuple (\"minter.py\" 357) (variant_arg \"match_pair_minter_330_fst\" (\"minter.py\" 330)) (tuple (\"minter.py\" 357) (openVariant (isNat (variant_arg \"match_pair_minter_332_fst\" (\"minter.py\" 332)) (\"minter.py\" 336)) \"Some\" \"None\" (\"minter.py\" 336)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351))))) (\"minter.py\" 357)) (\"minter.py\" 358)) (\"minter.py\" 361)) (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (\"minter.py\" 377)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 377)) (\"minter.py\" 383)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) (\"minter.py\" 533)) (\"minter.py\" 533)) \"Some\" \"None\" (\"minter.py\" 533)))) (literal (mutez 0) (\"minter.py\" 561)) (openVariant (contract \"mint\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 556)) \"Some\" \"None\" (\"minter.py\" 560)) (\"minter.py\" 561)) (operations (\"minter.py\" 561)) (\"minter.py\" 561)) (\"minter.py\" 561)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351)) (\"minter.py\" 386)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)) (literal (intOrNat 60) (\"minter.py\" 387)) (\"minter.py\" 387)) (\"minter.py\" 387)) (\"minter.py\" 387)) (\"minter.py\" 387)) (set_type (variant_arg \"match_pair_minter_327_fst\" (\"minter.py\" 327)) \"address\" (\"minter.py\" 606)) (set_type (literal (nat 0) (\"minter.py\" 390)) \"nat\" (\"minter.py\" 607)) (set_type (literal (nat 0) (\"minter.py\" 390)) \"nat\" (\"minter.py\" 608)) (set_type (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351)) \"nat\" (\"minter.py\" 609)) (set_type (literal (bool True) (\"minter.py\" 610)) \"bool\" (\"minter.py\" 610)) (set_type (literal (mutez 0) (\"minter.py\" 390)) \"mutez\" (\"minter.py\" 611)) (set (operations (\"minter.py\" 622)) (cons (transfer (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_327_fst\" (\"minter.py\" 327)) (tuple (\"minter.py\" 622) (literal (nat 0) (\"minter.py\" 390)) (tuple (\"minter.py\" 622) (toInt (literal (nat 0) (\"minter.py\" 390)) (\"minter.py\" 614)) (tuple (\"minter.py\" 622) (toInt (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 351) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 351) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 349)) (\"minter.py\" 349)) \"Some\" \"None\" (\"minter.py\" 349)) (literal (intOrNat 60) (\"minter.py\" 350)) (\"minter.py\" 350)))) (\"minter.py\" 351)) (\"minter.py\" 614)) (literal (bool True) (\"minter.py\" 622)))))) (literal (mutez 0) (\"minter.py\" 390)) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 616)) \"Some\" \"None\" (\"minter.py\" 620)) (\"minter.py\" 622)) (operations (\"minter.py\" 622)) (\"minter.py\" 622)) (\"minter.py\" 622)) (set (operations (\"minter.py\" 393)) (cons (transfer (unit) (mul_overloaded (floordiv (variant_arg \"match_pair_minter_329_fst\" (\"minter.py\" 329)) (literal (intOrNat 1000000000000) (\"minter.py\" 393)) (\"minter.py\" 393)) (literal (mutez 1) (\"minter.py\" 393)) (\"minter.py\" 393)) (openVariant (contract \"\" \"unit\" (second (variant_arg \"match_pair_minter_332_snd\" (\"minter.py\" 332)) (\"minter.py\" 334)) (\"minter.py\" 393)) \"Some\" \"None\" (\"minter.py\" 393)) (\"minter.py\" 393)) (operations (\"minter.py\" 393)) (\"minter.py\" 393)) (\"minter.py\" 393)))) (repay True None None True (\"minter.py\" 148) ((set_type (params (\"minter.py\" 148)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (\"minter.py\" 150)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 153)) (literal (intOrNat 2) (\"minter.py\" 153)) (\"minter.py\" 153)) (match_tuple (\"minter.py\" 156) (params (\"minter.py\" 148)) \"match_pair_minter_156_fst\" \"match_pair_minter_156_snd\") (match_tuple (\"minter.py\" 157) (variant_arg \"match_pair_minter_156_snd\" (\"minter.py\" 156)) \"match_pair_minter_157_fst\" \"match_pair_minter_157_snd\") (match_tuple (\"minter.py\" 158) (variant_arg \"match_pair_minter_157_snd\" (\"minter.py\" 157)) \"match_pair_minter_158_fst\" \"match_pair_minter_158_snd\") (match_tuple (\"minter.py\" 159) (variant_arg \"match_pair_minter_158_snd\" (\"minter.py\" 158)) \"match_pair_minter_159_fst\" \"match_pair_minter_159_snd\") (match_tuple (\"minter.py\" 160) (variant_arg \"match_pair_minter_159_snd\" (\"minter.py\" 159)) \"match_pair_minter_160_fst\" \"match_pair_minter_160_snd\") (match_tuple (\"minter.py\" 161) (variant_arg \"match_pair_minter_160_snd\" (\"minter.py\" 160)) \"match_pair_minter_161_fst\" \"match_pair_minter_161_snd\") (set_type (variant_arg \"match_pair_minter_156_fst\" (\"minter.py\" 156)) \"address\" (\"minter.py\" 167)) (set_type (variant_arg \"match_pair_minter_157_fst\" (\"minter.py\" 157)) \"address\" (\"minter.py\" 168)) (set_type (variant_arg \"match_pair_minter_158_fst\" (\"minter.py\" 158)) \"nat\" (\"minter.py\" 169)) (set_type (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) \"nat\" (\"minter.py\" 170)) (set_type (variant_arg \"match_pair_minter_160_fst\" (\"minter.py\" 160)) \"bool\" (\"minter.py\" 171)) (set_type (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) \"nat\" (\"minter.py\" 172)) (set_type (first (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 162)) \"int\" (\"minter.py\" 173)) (set_type (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) \"nat\" (\"minter.py\" 174)) (verify (eq (variant_arg \"match_pair_minter_160_fst\" (\"minter.py\" 160)) (literal (bool False) (\"minter.py\" 182)) (\"minter.py\" 182)) (literal (intOrNat 16) (\"minter.py\" 182)) (\"minter.py\" 182)) (defineLocal \"stabilityFeeTokensRepaid\" (literal (intOrNat 0) (\"minter.py\" 190)) (\"minter.py\" 190)) (defineLocal \"remainingStabilityFeeTokens\" (literal (intOrNat 0) (\"minter.py\" 191)) (\"minter.py\" 191)) (defineLocal \"remainingBorrowedTokenBalance\" (literal (intOrNat 0) (\"minter.py\" 192)) (\"minter.py\" 192)) (ifBlock (lt (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) (add (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 185) (first (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 162)) (tuple (\"minter.py\" 185) (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (tuple (\"minter.py\" 185) (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179))))) (\"minter.py\" 185)) (\"minter.py\" 186)) (\"minter.py\" 193)) ((set (getLocal \"stabilityFeeTokensRepaid\" (\"oven-cracker.py\" 166)) (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) (\"minter.py\" 194)) (set (getLocal \"remainingStabilityFeeTokens\" (\"oven-cracker.py\" 166)) (openVariant (isNat (sub (add (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 185) (first (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 162)) (tuple (\"minter.py\" 185) (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (tuple (\"minter.py\" 185) (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179))))) (\"minter.py\" 185)) (\"minter.py\" 186)) (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) (\"minter.py\" 195)) (\"minter.py\" 195)) \"Some\" \"None\" (\"minter.py\" 195)) (\"minter.py\" 195)) (set (getLocal \"remainingBorrowedTokenBalance\" (\"oven-cracker.py\" 166)) (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (\"minter.py\" 196))) (\"minter.py\" 193)) (elseBlock ((set (getLocal \"stabilityFeeTokensRepaid\" (\"oven-cracker.py\" 166)) (add (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 185) (first (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 162)) (tuple (\"minter.py\" 185) (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (tuple (\"minter.py\" 185) (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179))))) (\"minter.py\" 185)) (\"minter.py\" 186)) (\"minter.py\" 198)) (set (getLocal \"remainingStabilityFeeTokens\" (\"oven-cracker.py\" 166)) (literal (nat 0) (\"minter.py\" 199)) (\"minter.py\" 199)) (set (getLocal \"remainingBorrowedTokenBalance\" (\"oven-cracker.py\" 166)) (openVariant (isNat (sub (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (openVariant (isNat (sub (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) (add (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 185) (first (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 162)) (tuple (\"minter.py\" 185) (variant_arg \"match_pair_minter_159_fst\" (\"minter.py\" 159)) (tuple (\"minter.py\" 185) (openVariant (isNat (variant_arg \"match_pair_minter_161_fst\" (\"minter.py\" 161)) (\"minter.py\" 165)) \"Some\" \"None\" (\"minter.py\" 165)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179))))) (\"minter.py\" 185)) (\"minter.py\" 186)) (\"minter.py\" 200)) (\"minter.py\" 200)) \"Some\" \"None\" (\"minter.py\" 200)) (\"minter.py\" 200)) (\"minter.py\" 200)) \"Some\" \"None\" (\"minter.py\" 200)) (\"minter.py\" 200)))) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179)) (\"minter.py\" 203)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)) (literal (intOrNat 60) (\"minter.py\" 204)) (\"minter.py\" 204)) (\"minter.py\" 204)) (\"minter.py\" 204)) (\"minter.py\" 204)) (set_type (variant_arg \"match_pair_minter_156_fst\" (\"minter.py\" 156)) \"address\" (\"minter.py\" 606)) (set_type (getLocal \"remainingBorrowedTokenBalance\" (\"minter.py\" 207)) \"nat\" (\"minter.py\" 607)) (set_type (getLocal \"remainingStabilityFeeTokens\" (\"minter.py\" 207)) \"nat\" (\"minter.py\" 608)) (set_type (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179)) \"nat\" (\"minter.py\" 609)) (set_type (variant_arg \"match_pair_minter_160_fst\" (\"minter.py\" 160)) \"bool\" (\"minter.py\" 610)) (set_type (balance) \"mutez\" (\"minter.py\" 611)) (set (operations (\"minter.py\" 622)) (cons (transfer (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_156_fst\" (\"minter.py\" 156)) (tuple (\"minter.py\" 622) (getLocal \"remainingBorrowedTokenBalance\" (\"minter.py\" 207)) (tuple (\"minter.py\" 622) (toInt (getLocal \"remainingStabilityFeeTokens\" (\"minter.py\" 207)) (\"minter.py\" 614)) (tuple (\"minter.py\" 622) (toInt (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 179) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 179) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 177)) (\"minter.py\" 177)) \"Some\" \"None\" (\"minter.py\" 177)) (literal (intOrNat 60) (\"minter.py\" 178)) (\"minter.py\" 178)))) (\"minter.py\" 179)) (\"minter.py\" 614)) (variant_arg \"match_pair_minter_160_fst\" (\"minter.py\" 160)))))) (balance) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 616)) \"Some\" \"None\" (\"minter.py\" 620)) (\"minter.py\" 622)) (operations (\"minter.py\" 622)) (\"minter.py\" 622)) (\"minter.py\" 622)) (set_type (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) \"nat\" (\"minter.py\" 529)) (set_type (floordiv (mul (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) \"nat\" (\"minter.py\" 552)) (set_type (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536)) \"address\" (\"minter.py\" 553)) (set (operations (\"minter.py\" 561)) (cons (transfer (record (\"minter.py\" 555) (address (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536))) (value (floordiv (mul (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)))) (literal (mutez 0) (\"minter.py\" 561)) (openVariant (contract \"mint\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 556)) \"Some\" \"None\" (\"minter.py\" 560)) (\"minter.py\" 561)) (operations (\"minter.py\" 561)) (\"minter.py\" 561)) (\"minter.py\" 561)) (set_type (openVariant (isNat (sub (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (floordiv (mul (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) (\"minter.py\" 533)) (\"minter.py\" 533)) \"Some\" \"None\" (\"minter.py\" 533)) \"nat\" (\"minter.py\" 552)) (set_type (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371)) \"address\" (\"minter.py\" 553)) (set (operations (\"minter.py\" 561)) (cons (transfer (record (\"minter.py\" 555) (address (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371))) (value (openVariant (isNat (sub (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (floordiv (mul (getLocal \"stabilityFeeTokensRepaid\" (\"minter.py\" 210)) (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (\"minter.py\" 532)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 532)) (\"minter.py\" 533)) (\"minter.py\" 533)) \"Some\" \"None\" (\"minter.py\" 533)))) (literal (mutez 0) (\"minter.py\" 561)) (openVariant (contract \"mint\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 556)) \"Some\" \"None\" (\"minter.py\" 560)) (\"minter.py\" 561)) (operations (\"minter.py\" 561)) (\"minter.py\" 561)) (\"minter.py\" 561)) (set_type (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)) \"nat\" (\"minter.py\" 540)) (set_type (variant_arg \"match_pair_minter_157_fst\" (\"minter.py\" 157)) \"address\" (\"minter.py\" 541)) (set (operations (\"minter.py\" 549)) (cons (transfer (record (\"minter.py\" 543) (address (variant_arg \"match_pair_minter_157_fst\" (\"minter.py\" 157))) (value (second (variant_arg \"match_pair_minter_161_snd\" (\"minter.py\" 161)) (\"minter.py\" 163)))) (literal (mutez 0) (\"minter.py\" 549)) (openVariant (contract \"burn\" (record ((address \"address\") (value \"nat\")) None) (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (\"minter.py\" 544)) \"Some\" \"None\" (\"minter.py\" 548)) (\"minter.py\" 549)) (operations (\"minter.py\" 549)) (\"minter.py\" 549)) (\"minter.py\" 549)))) (setCollateralizationPercentage True None None True (\"minter.py\" 445) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 447)) (literal (intOrNat 4) (\"minter.py\" 447)) (\"minter.py\" 447)) (set (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (params (\"minter.py\" 445)) (\"minter.py\" 448)))) (setDeveloperFundContract True None None True (\"minter.py\" 499) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 501)) (literal (intOrNat 4) (\"minter.py\" 501)) (\"minter.py\" 501)) (set (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536)) (params (\"minter.py\" 499)) (\"minter.py\" 502)))) (setGovernorContract True None None True (\"minter.py\" 479) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 481)) (literal (intOrNat 4) (\"minter.py\" 481)) (\"minter.py\" 481)) (set (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (params (\"minter.py\" 479)) (\"minter.py\" 482)))) (setLiquidationFeePercent True None None True (\"minter.py\" 440) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 442)) (literal (intOrNat 4) (\"minter.py\" 442)) (\"minter.py\" 442)) (set (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (params (\"minter.py\" 440)) (\"minter.py\" 443)))) (setLiquidityPoolContract True None None True (\"minter.py\" 469) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 471)) (literal (intOrNat 4) (\"minter.py\" 471)) (\"minter.py\" 471)) (set (attr (data) \"liquidityPoolContractAddress\" (\"minter.py\" 370)) (params (\"minter.py\" 469)) (\"minter.py\" 472)))) (setOvenProxyContract True None None True (\"minter.py\" 489) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 491)) (literal (intOrNat 4) (\"minter.py\" 491)) (\"minter.py\" 491)) (set (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (params (\"minter.py\" 489)) (\"minter.py\" 492)))) (setPrivateLiquidationThreshold True None None True (\"minter.py\" 474) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 476)) (literal (intOrNat 4) (\"minter.py\" 476)) (\"minter.py\" 476)) (set (attr (data) \"privateOwnerLiquidationThreshold\" (\"minter.py\" 368)) (params (\"minter.py\" 474)) (\"minter.py\" 477)))) (setStabilityFee True None None True (\"minter.py\" 427) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 429)) (literal (intOrNat 4) (\"minter.py\" 429)) (\"minter.py\" 429)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 434) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 434) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 432)) (\"minter.py\" 432)) \"Some\" \"None\" (\"minter.py\" 432)) (literal (intOrNat 60) (\"minter.py\" 433)) (\"minter.py\" 433)))) (\"minter.py\" 434)) (\"minter.py\" 435)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 432)) (\"minter.py\" 432)) \"Some\" \"None\" (\"minter.py\" 432)) (literal (intOrNat 60) (\"minter.py\" 433)) (\"minter.py\" 433)) (literal (intOrNat 60) (\"minter.py\" 436)) (\"minter.py\" 436)) (\"minter.py\" 436)) (\"minter.py\" 436)) (\"minter.py\" 436)) (set (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (params (\"minter.py\" 427)) (\"minter.py\" 438)))) (setStabilityFundContract True None None True (\"minter.py\" 494) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 496)) (literal (intOrNat 4) (\"minter.py\" 496)) (\"minter.py\" 496)) (set (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371)) (params (\"minter.py\" 494)) (\"minter.py\" 497)))) (setTokenContract True None None True (\"minter.py\" 484) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 486)) (literal (intOrNat 4) (\"minter.py\" 486)) (\"minter.py\" 486)) (set (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (params (\"minter.py\" 484)) (\"minter.py\" 487)))) (updateContracts True None None True (\"minter.py\" 452) ((set_type (params (\"minter.py\" 452)) (tuple \"address\" (tuple \"address\" (tuple \"address\" (tuple \"address\" \"address\")))) (\"minter.py\" 454)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 456)) (literal (intOrNat 4) (\"minter.py\" 456)) (\"minter.py\" 456)) (match_tuple (\"minter.py\" 458) (params (\"minter.py\" 452)) \"match_pair_minter_458_fst\" \"match_pair_minter_458_snd\") (match_tuple (\"minter.py\" 459) (variant_arg \"match_pair_minter_458_snd\" (\"minter.py\" 458)) \"match_pair_minter_459_fst\" \"match_pair_minter_459_snd\") (match_tuple (\"minter.py\" 460) (variant_arg \"match_pair_minter_459_snd\" (\"minter.py\" 459)) \"match_pair_minter_460_fst\" \"match_pair_minter_460_snd\") (match_tuple (\"minter.py\" 461) (variant_arg \"match_pair_minter_460_snd\" (\"minter.py\" 460)) \"match_pair_minter_461_fst\" \"match_pair_minter_461_snd\") (set (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (variant_arg \"match_pair_minter_458_fst\" (\"minter.py\" 458)) (\"minter.py\" 463)) (set (attr (data) \"tokenContractAddress\" (\"minter.py\" 558)) (variant_arg \"match_pair_minter_459_fst\" (\"minter.py\" 459)) (\"minter.py\" 464)) (set (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (variant_arg \"match_pair_minter_460_fst\" (\"minter.py\" 460)) (\"minter.py\" 465)) (set (attr (data) \"stabilityFundContractAddress\" (\"minter.py\" 371)) (variant_arg \"match_pair_minter_461_fst\" (\"minter.py\" 461)) (\"minter.py\" 466)) (set (attr (data) \"developerFundContractAddress\" (\"minter.py\" 536)) (variant_arg \"match_pair_minter_461_snd\" (\"minter.py\" 461)) (\"minter.py\" 467)))) (updateFundSplits True None None True (\"minter.py\" 505) ((set_type (params (\"minter.py\" 505)) (record ((developerFundSplit \"nat\") (stabilityFundSplit \"nat\")) (Some ((\"developerFundSplit\") (\"stabilityFundSplit\")))) (\"minter.py\" 507)) (verify (eq (add (attr (params (\"minter.py\" 505)) \"developerFundSplit\" (\"minter.py\" 513)) (attr (params (\"minter.py\" 505)) \"stabilityFundSplit\" (\"minter.py\" 513)) (\"minter.py\" 513)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 513)) (literal (intOrNat 25) (\"minter.py\" 513)) (\"minter.py\" 513)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 516)) (literal (intOrNat 4) (\"minter.py\" 516)) (\"minter.py\" 516)) (set (attr (data) \"devFundSplit\" (\"minter.py\" 532)) (attr (params (\"minter.py\" 505)) \"developerFundSplit\" (\"minter.py\" 513)) (\"minter.py\" 518)))) (updateParams True None None True (\"minter.py\" 405) ((set_type (params (\"minter.py\" 405)) (tuple \"nat\" (tuple \"nat\" (tuple \"nat\" (option \"mutez\")))) (\"minter.py\" 407)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"minter.py\" 447)) (\"minter.py\" 409)) (literal (intOrNat 4) (\"minter.py\" 409)) (\"minter.py\" 409)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 414) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 414) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 412)) (\"minter.py\" 412)) \"Some\" \"None\" (\"minter.py\" 412)) (literal (intOrNat 60) (\"minter.py\" 413)) (\"minter.py\" 413)))) (\"minter.py\" 414)) (\"minter.py\" 415)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 412)) (\"minter.py\" 412)) \"Some\" \"None\" (\"minter.py\" 412)) (literal (intOrNat 60) (\"minter.py\" 413)) (\"minter.py\" 413)) (literal (intOrNat 60) (\"minter.py\" 416)) (\"minter.py\" 416)) (\"minter.py\" 416)) (\"minter.py\" 416)) (\"minter.py\" 416)) (match_tuple (\"minter.py\" 419) (params (\"minter.py\" 405)) \"match_pair_minter_419_fst\" \"match_pair_minter_419_snd\") (match_tuple (\"minter.py\" 420) (variant_arg \"match_pair_minter_419_snd\" (\"minter.py\" 419)) \"match_pair_minter_420_fst\" \"match_pair_minter_420_snd\") (set (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (variant_arg \"match_pair_minter_419_fst\" (\"minter.py\" 419)) (\"minter.py\" 423)) (set (attr (data) \"liquidationFeePercent\" (\"minter.py\" 377)) (variant_arg \"match_pair_minter_420_fst\" (\"minter.py\" 420)) (\"minter.py\" 424)) (set (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (first (variant_arg \"match_pair_minter_420_snd\" (\"minter.py\" 420)) (\"minter.py\" 421)) (\"minter.py\" 425)))) (withdraw True None None True (\"minter.py\" 259) ((set_type (params (\"minter.py\" 259)) (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"mutez\")))))))) (\"minter.py\" 261)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 264)) (literal (intOrNat 2) (\"minter.py\" 264)) (\"minter.py\" 264)) (match_tuple (\"minter.py\" 267) (params (\"minter.py\" 259)) \"match_pair_minter_267_fst\" \"match_pair_minter_267_snd\") (match_tuple (\"minter.py\" 268) (variant_arg \"match_pair_minter_267_snd\" (\"minter.py\" 267)) \"match_pair_minter_268_fst\" \"match_pair_minter_268_snd\") (match_tuple (\"minter.py\" 269) (variant_arg \"match_pair_minter_268_snd\" (\"minter.py\" 268)) \"match_pair_minter_269_fst\" \"match_pair_minter_269_snd\") (match_tuple (\"minter.py\" 270) (variant_arg \"match_pair_minter_269_snd\" (\"minter.py\" 269)) \"match_pair_minter_270_fst\" \"match_pair_minter_270_snd\") (match_tuple (\"minter.py\" 271) (variant_arg \"match_pair_minter_270_snd\" (\"minter.py\" 270)) \"match_pair_minter_271_fst\" \"match_pair_minter_271_snd\") (match_tuple (\"minter.py\" 272) (variant_arg \"match_pair_minter_271_snd\" (\"minter.py\" 271)) \"match_pair_minter_272_fst\" \"match_pair_minter_272_snd\") (match_tuple (\"minter.py\" 273) (variant_arg \"match_pair_minter_272_snd\" (\"minter.py\" 272)) \"match_pair_minter_273_fst\" \"match_pair_minter_273_snd\") (set_type (variant_arg \"match_pair_minter_267_fst\" (\"minter.py\" 267)) \"nat\" (\"minter.py\" 279)) (set_type (variant_arg \"match_pair_minter_268_fst\" (\"minter.py\" 268)) \"address\" (\"minter.py\" 280)) (set_type (variant_arg \"match_pair_minter_269_fst\" (\"minter.py\" 269)) \"address\" (\"minter.py\" 281)) (set_type (variant_arg \"match_pair_minter_270_fst\" (\"minter.py\" 270)) \"nat\" (\"minter.py\" 282)) (set_type (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) \"nat\" (\"minter.py\" 283)) (set_type (variant_arg \"match_pair_minter_272_fst\" (\"minter.py\" 272)) \"bool\" (\"minter.py\" 284)) (set_type (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) \"nat\" (\"minter.py\" 285)) (set_type (first (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 274)) \"int\" (\"minter.py\" 286)) (set_type (second (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 275)) \"mutez\" (\"minter.py\" 287)) (ifBlock (gt (add (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (add (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 295) (first (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 274)) (tuple (\"minter.py\" 295) (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (tuple (\"minter.py\" 295) (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292))))) (\"minter.py\" 295)) (\"minter.py\" 296)) (\"minter.py\" 299)) (literal (intOrNat 0) (\"minter.py\" 300)) (\"minter.py\" 300)) ((verify (ge (call_lambda (global \"computeCollateralizationPercentage\" (\"minter.py\" 592)) (tuple (\"minter.py\" 303) (openVariant (isNat (sub (variant_arg \"match_pair_minter_270_fst\" (\"minter.py\" 270)) (mul (first (openVariant (ediv (second (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 275)) (literal (mutez 1) (\"minter.py\" 301)) (\"minter.py\" 301)) \"Some\" \"None\" (\"minter.py\" 301)) (\"minter.py\" 301)) (literal (intOrNat 1000000000000) (\"minter.py\" 301)) (\"minter.py\" 301)) (\"minter.py\" 302)) (\"minter.py\" 302)) \"Some\" \"None\" (\"minter.py\" 302)) (tuple (\"minter.py\" 303) (variant_arg \"match_pair_minter_267_fst\" (\"minter.py\" 267)) (add (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (add (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 295) (first (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 274)) (tuple (\"minter.py\" 295) (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (tuple (\"minter.py\" 295) (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292))))) (\"minter.py\" 295)) (\"minter.py\" 296)) (\"minter.py\" 299)))) (\"minter.py\" 303)) (attr (data) \"collateralizationPercentage\" (\"minter.py\" 135)) (\"minter.py\" 304)) (literal (intOrNat 11) (\"minter.py\" 304)) (\"minter.py\" 304))) (\"minter.py\" 300)) (set (attr (data) \"interestIndex\" (\"minter.py\" 117)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292)) (\"minter.py\" 307)) (set (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (add_seconds (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (toInt (mul (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)) (literal (intOrNat 60) (\"minter.py\" 308)) (\"minter.py\" 308)) (\"minter.py\" 308)) (\"minter.py\" 308)) (\"minter.py\" 308)) (set_type (variant_arg \"match_pair_minter_268_fst\" (\"minter.py\" 268)) \"address\" (\"minter.py\" 606)) (set_type (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) \"nat\" (\"minter.py\" 607)) (set_type (add (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 295) (first (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 274)) (tuple (\"minter.py\" 295) (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (tuple (\"minter.py\" 295) (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292))))) (\"minter.py\" 295)) (\"minter.py\" 296)) \"nat\" (\"minter.py\" 608)) (set_type (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292)) \"nat\" (\"minter.py\" 609)) (set_type (variant_arg \"match_pair_minter_272_fst\" (\"minter.py\" 272)) \"bool\" (\"minter.py\" 610)) (set_type (sub (mul_overloaded (floordiv (variant_arg \"match_pair_minter_270_fst\" (\"minter.py\" 270)) (literal (intOrNat 1000000000000) (\"minter.py\" 311)) (\"minter.py\" 311)) (literal (mutez 1) (\"minter.py\" 311)) (\"minter.py\" 311)) (second (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 275)) (\"minter.py\" 311)) \"mutez\" (\"minter.py\" 611)) (set (operations (\"minter.py\" 622)) (cons (transfer (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_268_fst\" (\"minter.py\" 268)) (tuple (\"minter.py\" 622) (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (tuple (\"minter.py\" 622) (toInt (add (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"calculateNewAccruedInterest\" (\"minter.py\" 564)) (tuple (\"minter.py\" 295) (first (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 274)) (tuple (\"minter.py\" 295) (variant_arg \"match_pair_minter_271_fst\" (\"minter.py\" 271)) (tuple (\"minter.py\" 295) (openVariant (isNat (variant_arg \"match_pair_minter_273_fst\" (\"minter.py\" 273)) (\"minter.py\" 277)) \"Some\" \"None\" (\"minter.py\" 277)) (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292))))) (\"minter.py\" 295)) (\"minter.py\" 296)) (\"minter.py\" 614)) (tuple (\"minter.py\" 622) (toInt (call_lambda (global \"compoundWithLinearApproximation\" (\"minter.py\" 580)) (tuple (\"minter.py\" 292) (attr (data) \"interestIndex\" (\"minter.py\" 117)) (tuple (\"minter.py\" 292) (attr (data) \"stabilityFee\" (\"minter.py\" 117)) (floordiv (openVariant (isNat (sub (now) (attr (data) \"lastInterestIndexUpdateTime\" (\"minter.py\" 115)) (\"minter.py\" 290)) (\"minter.py\" 290)) \"Some\" \"None\" (\"minter.py\" 290)) (literal (intOrNat 60) (\"minter.py\" 291)) (\"minter.py\" 291)))) (\"minter.py\" 292)) (\"minter.py\" 614)) (variant_arg \"match_pair_minter_272_fst\" (\"minter.py\" 272)))))) (sub (mul_overloaded (floordiv (variant_arg \"match_pair_minter_270_fst\" (\"minter.py\" 270)) (literal (intOrNat 1000000000000) (\"minter.py\" 311)) (\"minter.py\" 311)) (literal (mutez 1) (\"minter.py\" 311)) (\"minter.py\" 311)) (second (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 275)) (\"minter.py\" 311)) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (attr (data) \"ovenProxyContractAddress\" (\"minter.py\" 89)) (\"minter.py\" 616)) \"Some\" \"None\" (\"minter.py\" 620)) (\"minter.py\" 622)) (operations (\"minter.py\" 622)) (\"minter.py\" 622)) (\"minter.py\" 622)) (set (operations (\"minter.py\" 315)) (cons (transfer (unit) (second (variant_arg \"match_pair_minter_273_snd\" (\"minter.py\" 273)) (\"minter.py\" 275)) (openVariant (contract \"\" \"unit\" (variant_arg \"match_pair_minter_269_fst\" (\"minter.py\" 269)) (\"minter.py\" 315)) \"Some\" \"None\" (\"minter.py\" 315)) (\"minter.py\" 315)) (operations (\"minter.py\" 315)) (\"minter.py\" 315)) (\"minter.py\" 315)))))\nflags ((erase-comments) (exceptions DefaultUnit))\nglobals ((calculateNewAccruedInterest (lambda 0 \"\" (\"oven-cracker.py\" 166) ((set_type (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (tuple \"int\" (tuple \"nat\" (tuple \"nat\" \"nat\"))) (\"minter.py\" 566)) (result (openVariant (isNat (sub (first (openVariant (ediv (mul (first (openVariant (ediv (mul (second (second (second (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 571)) (\"minter.py\" 571)) (\"minter.py\" 571)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 573)) (openVariant (isNat (first (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 568)) (\"minter.py\" 568)) \"Some\" \"None\" (\"minter.py\" 568)) (\"minter.py\" 573)) \"Some\" \"None\" (\"minter.py\" 573)) (\"minter.py\" 573)) (add (first (second (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 569)) (\"minter.py\" 569)) (first (second (second (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 570)) (\"minter.py\" 570)) (\"minter.py\" 570)) (\"minter.py\" 574)) (\"minter.py\" 575)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 575)) \"Some\" \"None\" (\"minter.py\" 575)) (\"minter.py\" 575)) (add (first (second (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 569)) (\"minter.py\" 569)) (first (second (second (lambdaParams 0 \"\" (\"oven-cracker.py\" 166) (unknown 2)) (\"minter.py\" 570)) (\"minter.py\" 570)) (\"minter.py\" 570)) (\"minter.py\" 574)) (\"minter.py\" 576)) (\"minter.py\" 576)) \"Some\" \"None\" (\"minter.py\" 576)) (\"minter.py\" 577))))) (compoundWithLinearApproximation (lambda 1 \"\" (\"oven-cracker.py\" 166) ((set_type (lambdaParams 1 \"\" (\"oven-cracker.py\" 166) (unknown 3)) (tuple \"nat\" (tuple \"nat\" \"nat\")) (\"minter.py\" 582)) (result (floordiv (mul (first (lambdaParams 1 \"\" (\"oven-cracker.py\" 166) (unknown 3)) (\"minter.py\" 584)) (add (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (mul (second (second (lambdaParams 1 \"\" (\"oven-cracker.py\" 166) (unknown 3)) (\"minter.py\" 586)) (\"minter.py\" 586)) (first (second (lambdaParams 1 \"\" (\"oven-cracker.py\" 166) (unknown 3)) (\"minter.py\" 585)) (\"minter.py\" 585)) (\"minter.py\" 588)) (\"minter.py\" 588)) (\"minter.py\" 588)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 588)) (\"minter.py\" 588))))) (computeCollateralizationPercentage (lambda 2 \"\" (\"oven-cracker.py\" 166) ((set_type (lambdaParams 2 \"\" (\"oven-cracker.py\" 166) (unknown 4)) (tuple \"nat\" (tuple \"nat\" \"nat\")) (\"minter.py\" 594)) (result (mul (floordiv (mul (floordiv (mul (first (lambdaParams 2 \"\" (\"oven-cracker.py\" 166) (unknown 4)) (\"minter.py\" 596)) (first (second (lambdaParams 2 \"\" (\"oven-cracker.py\" 166) (unknown 4)) (\"minter.py\" 597)) (\"minter.py\" 597)) (\"minter.py\" 601)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 601)) (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"minter.py\" 602)) (second (second (lambdaParams 2 \"\" (\"oven-cracker.py\" 166) (unknown 4)) (\"minter.py\" 598)) (\"minter.py\" 598)) (\"minter.py\" 602)) (literal (intOrNat 100) (\"minter.py\" 603)) (\"minter.py\" 603)) (\"minter.py\" 603))))))\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 5 (\"minter.py\" 34))",
    "line_no": "(\"oven-cracker.py\" 166)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 6 (\"oven-proxy.py\" 33)) \nstorage (record (\"oven-proxy.py\" 33) (borrowParams (variant \"None\" (unit) -1)) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (liquidateParams (variant \"None\" (unit) -1)) (minterContractAddress (contract_address (static_id 5 (\"minter.py\" 34)) \"\" (\"minter.py\" 34))) (oracleContractAddress (contract_address (static_id 3 (\"oracle.py\" 34)) \"\" (\"oracle.py\" 34))) (ovenRegistryContractAddress (contract_address (static_id 4 (\"oven-registry.py\" 18)) \"\" (\"oven-registry.py\" 18))) (pauseGuardianContractAddress (literal (address \"tz1LLNkQK4UQV6QcFShiXJ2vT2ELw449MzAA\") (\"test-helpers/addresses.py\" 51))) (paused (literal (bool False) (\"oven-proxy.py\" 33))) (state (literal (intOrNat 0) (\"oven-proxy.py\" 33))) (withdrawParams (variant \"None\" (unit) -1)))\nstorage_type (())\nmessages ((borrow True None None True (\"oven-proxy.py\" 65) ((set_type (params (\"oven-proxy.py\" 65)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (\"oven-proxy.py\" 67)) (set (operations (\"oven-proxy.py\" 315)) (cons (transfer (sender) (literal (mutez 0) (\"oven-proxy.py\" 315)) (openVariant (contract \"isOven\" \"address\" (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (\"oven-proxy.py\" 310)) \"Some\" \"None\" (\"oven-proxy.py\" 314)) (\"oven-proxy.py\" 315)) (operations (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (verify (eq (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 72)) (\"oven-proxy.py\" 72)) (literal (intOrNat 18) (\"oven-proxy.py\" 72)) (\"oven-proxy.py\" 72)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 75)) (\"oven-proxy.py\" 75)) (literal (intOrNat 12) (\"oven-proxy.py\" 75)) (\"oven-proxy.py\" 75)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 1) (\"oven-proxy.py\" 78)) (\"oven-proxy.py\" 78)) (set (attr (data) \"borrowParams\" (\"oven-proxy.py\" 79)) (variant \"Some\" (params (\"oven-proxy.py\" 65)) (\"oven-proxy.py\" 79)) (\"oven-proxy.py\" 79)) (set (operations (\"oven-proxy.py\" 326)) (cons (transfer (self \"borrow_callback\" (\"oven-proxy.py\" 319)) (literal (mutez 0) (\"oven-proxy.py\" 326)) (openVariant (contract \"getXtzUsdRate\" (contract \"nat\") (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 320)) \"Some\" \"None\" (\"oven-proxy.py\" 324)) (\"oven-proxy.py\" 326)) (operations (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)))) (borrow_callback True None None True (\"oven-proxy.py\" 83) ((set_type (params (\"oven-proxy.py\" 83)) \"nat\" (\"oven-proxy.py\" 85)) (verify (eq (sender) (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 88)) (literal (intOrNat 3) (\"oven-proxy.py\" 88)) (\"oven-proxy.py\" 88)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 1) (\"oven-proxy.py\" 91)) (\"oven-proxy.py\" 91)) (literal (intOrNat 12) (\"oven-proxy.py\" 91)) (\"oven-proxy.py\" 91)) (set (operations (\"oven-proxy.py\" 100)) (cons (transfer (tuple (\"oven-proxy.py\" 100) (params (\"oven-proxy.py\" 83)) (openVariant (attr (data) \"borrowParams\" (\"oven-proxy.py\" 79)) \"Some\" \"None\" (\"oven-proxy.py\" 94))) (balance) (openVariant (contract \"borrow\" (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\")))))))) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 95)) \"Some\" \"None\" (\"oven-proxy.py\" 99)) (\"oven-proxy.py\" 100)) (operations (\"oven-proxy.py\" 100)) (\"oven-proxy.py\" 100)) (\"oven-proxy.py\" 100)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 103)) (\"oven-proxy.py\" 103)) (set (attr (data) \"borrowParams\" (\"oven-proxy.py\" 79)) (variant \"None\" (unit) -1) (\"oven-proxy.py\" 104)))) (default True None None True (\"oven-proxy.py\" 56) ((set_type (params (\"oven-proxy.py\" 56)) \"unit\" (\"oven-proxy.py\" 58)) (failwith (literal (intOrNat 19) (\"oven-proxy.py\" 59)) (\"oven-proxy.py\" 59)))) (deposit True None None True (\"oven-proxy.py\" 205) ((set_type (params (\"oven-proxy.py\" 205)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" \"int\")))))) (\"oven-proxy.py\" 207)) (set (operations (\"oven-proxy.py\" 315)) (cons (transfer (sender) (literal (mutez 0) (\"oven-proxy.py\" 315)) (openVariant (contract \"isOven\" \"address\" (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (\"oven-proxy.py\" 310)) \"Some\" \"None\" (\"oven-proxy.py\" 314)) (\"oven-proxy.py\" 315)) (operations (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (verify (eq (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 211)) (\"oven-proxy.py\" 211)) (literal (intOrNat 18) (\"oven-proxy.py\" 211)) (\"oven-proxy.py\" 211)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 214)) (\"oven-proxy.py\" 214)) (literal (intOrNat 12) (\"oven-proxy.py\" 214)) (\"oven-proxy.py\" 214)) (set (operations (\"oven-proxy.py\" 221)) (cons (transfer (params (\"oven-proxy.py\" 205)) (amount) (openVariant (contract \"deposit\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" \"int\")))))) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 216)) \"Some\" \"None\" (\"oven-proxy.py\" 220)) (\"oven-proxy.py\" 221)) (operations (\"oven-proxy.py\" 221)) (\"oven-proxy.py\" 221)) (\"oven-proxy.py\" 221)))) (liquidate True None None True (\"oven-proxy.py\" 125) ((set_type (params (\"oven-proxy.py\" 125)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"address\"))))))) (\"oven-proxy.py\" 127)) (set (operations (\"oven-proxy.py\" 315)) (cons (transfer (sender) (literal (mutez 0) (\"oven-proxy.py\" 315)) (openVariant (contract \"isOven\" \"address\" (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (\"oven-proxy.py\" 310)) \"Some\" \"None\" (\"oven-proxy.py\" 314)) (\"oven-proxy.py\" 315)) (operations (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (verify (eq (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 131)) (\"oven-proxy.py\" 131)) (literal (intOrNat 18) (\"oven-proxy.py\" 131)) (\"oven-proxy.py\" 131)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 134)) (\"oven-proxy.py\" 134)) (literal (intOrNat 12) (\"oven-proxy.py\" 134)) (\"oven-proxy.py\" 134)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 3) (\"oven-proxy.py\" 137)) (\"oven-proxy.py\" 137)) (set (attr (data) \"liquidateParams\" (\"oven-proxy.py\" 138)) (variant \"Some\" (params (\"oven-proxy.py\" 125)) (\"oven-proxy.py\" 138)) (\"oven-proxy.py\" 138)) (set (operations (\"oven-proxy.py\" 326)) (cons (transfer (self \"liquidate_callback\" (\"oven-proxy.py\" 319)) (literal (mutez 0) (\"oven-proxy.py\" 326)) (openVariant (contract \"getXtzUsdRate\" (contract \"nat\") (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 320)) \"Some\" \"None\" (\"oven-proxy.py\" 324)) (\"oven-proxy.py\" 326)) (operations (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)))) (liquidate_callback True None None True (\"oven-proxy.py\" 142) ((set_type (params (\"oven-proxy.py\" 142)) \"nat\" (\"oven-proxy.py\" 144)) (verify (eq (sender) (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 147)) (literal (intOrNat 3) (\"oven-proxy.py\" 147)) (\"oven-proxy.py\" 147)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 3) (\"oven-proxy.py\" 150)) (\"oven-proxy.py\" 150)) (literal (intOrNat 12) (\"oven-proxy.py\" 150)) (\"oven-proxy.py\" 150)) (set (operations (\"oven-proxy.py\" 159)) (cons (transfer (tuple (\"oven-proxy.py\" 159) (params (\"oven-proxy.py\" 142)) (openVariant (attr (data) \"liquidateParams\" (\"oven-proxy.py\" 138)) \"Some\" \"None\" (\"oven-proxy.py\" 153))) (balance) (openVariant (contract \"liquidate\" (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"address\")))))))) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 154)) \"Some\" \"None\" (\"oven-proxy.py\" 158)) (\"oven-proxy.py\" 159)) (operations (\"oven-proxy.py\" 159)) (\"oven-proxy.py\" 159)) (\"oven-proxy.py\" 159)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 162)) (\"oven-proxy.py\" 162)) (set (attr (data) \"liquidateParams\" (\"oven-proxy.py\" 138)) (variant \"None\" (unit) -1) (\"oven-proxy.py\" 163)))) (pause True None None False (\"oven-proxy.py\" 248) ((verify (eq (sender) (attr (data) \"pauseGuardianContractAddress\" (\"oven-proxy.py\" 250)) (\"oven-proxy.py\" 250)) (literal (intOrNat 9) (\"oven-proxy.py\" 250)) (\"oven-proxy.py\" 250)) (set (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool True) (\"oven-proxy.py\" 251)) (\"oven-proxy.py\" 251)))) (repay True None None True (\"oven-proxy.py\" 106) ((set_type (params (\"oven-proxy.py\" 106)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (\"oven-proxy.py\" 108)) (set (operations (\"oven-proxy.py\" 315)) (cons (transfer (sender) (literal (mutez 0) (\"oven-proxy.py\" 315)) (openVariant (contract \"isOven\" \"address\" (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (\"oven-proxy.py\" 310)) \"Some\" \"None\" (\"oven-proxy.py\" 314)) (\"oven-proxy.py\" 315)) (operations (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (verify (eq (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 113)) (\"oven-proxy.py\" 113)) (literal (intOrNat 18) (\"oven-proxy.py\" 113)) (\"oven-proxy.py\" 113)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 116)) (\"oven-proxy.py\" 116)) (literal (intOrNat 12) (\"oven-proxy.py\" 116)) (\"oven-proxy.py\" 116)) (set (operations (\"oven-proxy.py\" 123)) (cons (transfer (params (\"oven-proxy.py\" 106)) (amount) (openVariant (contract \"repay\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 118)) \"Some\" \"None\" (\"oven-proxy.py\" 122)) (\"oven-proxy.py\" 123)) (operations (\"oven-proxy.py\" 123)) (\"oven-proxy.py\" 123)) (\"oven-proxy.py\" 123)))) (setGovernorContract True None None True (\"oven-proxy.py\" 264) ((set_type (params (\"oven-proxy.py\" 264)) \"address\" (\"oven-proxy.py\" 266)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 268)) (literal (intOrNat 4) (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 268)) (set (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (params (\"oven-proxy.py\" 264)) (\"oven-proxy.py\" 269)))) (setMinterContract True None None True (\"oven-proxy.py\" 272) ((set_type (params (\"oven-proxy.py\" 272)) \"address\" (\"oven-proxy.py\" 274)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 276)) (literal (intOrNat 4) (\"oven-proxy.py\" 276)) (\"oven-proxy.py\" 276)) (set (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (params (\"oven-proxy.py\" 272)) (\"oven-proxy.py\" 277)))) (setOracleContract True None None True (\"oven-proxy.py\" 288) ((set_type (params (\"oven-proxy.py\" 288)) \"address\" (\"oven-proxy.py\" 290)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 292)) (literal (intOrNat 4) (\"oven-proxy.py\" 292)) (\"oven-proxy.py\" 292)) (set (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (params (\"oven-proxy.py\" 288)) (\"oven-proxy.py\" 293)))) (setOvenRegistryContract True None None True (\"oven-proxy.py\" 280) ((set_type (params (\"oven-proxy.py\" 280)) \"address\" (\"oven-proxy.py\" 282)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 284)) (literal (intOrNat 4) (\"oven-proxy.py\" 284)) (\"oven-proxy.py\" 284)) (set (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (params (\"oven-proxy.py\" 280)) (\"oven-proxy.py\" 285)))) (setPauseGuardianContract True None None True (\"oven-proxy.py\" 296) ((set_type (params (\"oven-proxy.py\" 296)) \"address\" (\"oven-proxy.py\" 298)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 300)) (literal (intOrNat 4) (\"oven-proxy.py\" 300)) (\"oven-proxy.py\" 300)) (set (attr (data) \"pauseGuardianContractAddress\" (\"oven-proxy.py\" 250)) (params (\"oven-proxy.py\" 296)) (\"oven-proxy.py\" 301)))) (unpause True None None False (\"oven-proxy.py\" 258) ((verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-proxy.py\" 268)) (\"oven-proxy.py\" 260)) (literal (intOrNat 4) (\"oven-proxy.py\" 260)) (\"oven-proxy.py\" 260)) (set (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 261)) (\"oven-proxy.py\" 261)))) (updateState True None None True (\"oven-proxy.py\" 227) ((set_type (params (\"oven-proxy.py\" 227)) (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (\"oven-proxy.py\" 229)) (verify (eq (sender) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 232)) (literal (intOrNat 5) (\"oven-proxy.py\" 232)) (\"oven-proxy.py\" 232)) (set (operations (\"oven-proxy.py\" 241)) (cons (transfer (params (\"oven-proxy.py\" 227)) (amount) (openVariant (contract \"updateState\" (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (first (params (\"oven-proxy.py\" 227)) (\"oven-proxy.py\" 235)) (\"oven-proxy.py\" 236)) \"Some\" \"None\" (\"oven-proxy.py\" 240)) (\"oven-proxy.py\" 241)) (operations (\"oven-proxy.py\" 241)) (\"oven-proxy.py\" 241)) (\"oven-proxy.py\" 241)))) (withdraw True None None True (\"oven-proxy.py\" 165) ((set_type (params (\"oven-proxy.py\" 165)) (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"mutez\"))))))) (\"oven-proxy.py\" 167)) (set (operations (\"oven-proxy.py\" 315)) (cons (transfer (sender) (literal (mutez 0) (\"oven-proxy.py\" 315)) (openVariant (contract \"isOven\" \"address\" (attr (data) \"ovenRegistryContractAddress\" (\"oven-proxy.py\" 312)) (\"oven-proxy.py\" 310)) \"Some\" \"None\" (\"oven-proxy.py\" 314)) (\"oven-proxy.py\" 315)) (operations (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (\"oven-proxy.py\" 315)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 171)) (\"oven-proxy.py\" 171)) (literal (intOrNat 12) (\"oven-proxy.py\" 171)) (\"oven-proxy.py\" 171)) (verify (eq (attr (data) \"paused\" (\"oven-proxy.py\" 72)) (literal (bool False) (\"oven-proxy.py\" 174)) (\"oven-proxy.py\" 174)) (literal (intOrNat 18) (\"oven-proxy.py\" 174)) (\"oven-proxy.py\" 174)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 2) (\"oven-proxy.py\" 177)) (\"oven-proxy.py\" 177)) (set (attr (data) \"withdrawParams\" (\"oven-proxy.py\" 178)) (variant \"Some\" (params (\"oven-proxy.py\" 165)) (\"oven-proxy.py\" 178)) (\"oven-proxy.py\" 178)) (set (operations (\"oven-proxy.py\" 326)) (cons (transfer (self \"withdraw_callback\" (\"oven-proxy.py\" 319)) (literal (mutez 0) (\"oven-proxy.py\" 326)) (openVariant (contract \"getXtzUsdRate\" (contract \"nat\") (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 320)) \"Some\" \"None\" (\"oven-proxy.py\" 324)) (\"oven-proxy.py\" 326)) (operations (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)) (\"oven-proxy.py\" 326)))) (withdraw_callback True None None True (\"oven-proxy.py\" 182) ((set_type (params (\"oven-proxy.py\" 182)) \"nat\" (\"oven-proxy.py\" 184)) (verify (eq (sender) (attr (data) \"oracleContractAddress\" (\"oven-proxy.py\" 322)) (\"oven-proxy.py\" 187)) (literal (intOrNat 3) (\"oven-proxy.py\" 187)) (\"oven-proxy.py\" 187)) (verify (eq (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 2) (\"oven-proxy.py\" 190)) (\"oven-proxy.py\" 190)) (literal (intOrNat 12) (\"oven-proxy.py\" 190)) (\"oven-proxy.py\" 190)) (set (operations (\"oven-proxy.py\" 199)) (cons (transfer (tuple (\"oven-proxy.py\" 199) (params (\"oven-proxy.py\" 182)) (openVariant (attr (data) \"withdrawParams\" (\"oven-proxy.py\" 178)) \"Some\" \"None\" (\"oven-proxy.py\" 193))) (balance) (openVariant (contract \"withdraw\" (tuple \"nat\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"mutez\")))))))) (attr (data) \"minterContractAddress\" (\"oven-proxy.py\" 97)) (\"oven-proxy.py\" 194)) \"Some\" \"None\" (\"oven-proxy.py\" 198)) (\"oven-proxy.py\" 199)) (operations (\"oven-proxy.py\" 199)) (\"oven-proxy.py\" 199)) (\"oven-proxy.py\" 199)) (set (attr (data) \"state\" (\"oven-proxy.py\" 75)) (literal (intOrNat 0) (\"oven-proxy.py\" 202)) (\"oven-proxy.py\" 202)) (set (attr (data) \"withdrawParams\" (\"oven-proxy.py\" 178)) (variant \"None\" (unit) -1) (\"oven-proxy.py\" 203)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 6 (\"oven-proxy.py\" 33))",
    "line_no": "(\"oven-cracker.py\" 173)",
    "show": true
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 8 (\"oven-factory.py\" 33)) \nstorage (record (\"oven-factory.py\" 33) (governorContractAddress (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))) (initialDelegate (variant \"Some\" (literal (key_hash \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"oven-factory.py\" 27)) (\"oven-factory.py\" 27))) (makeOvenOwner (variant \"None\" (unit) -1)) (minterContractAddress (contract_address (static_id 5 (\"minter.py\" 34)) \"\" (\"minter.py\" 34))) (ovenProxyContractAddress (contract_address (static_id 6 (\"oven-proxy.py\" 33)) \"\" (\"oven-proxy.py\" 33))) (ovenRegistryContractAddress (contract_address (static_id 4 (\"oven-registry.py\" 18)) \"\" (\"oven-registry.py\" 18))) (state (literal (intOrNat 0) (\"oven-factory.py\" 33))))\nstorage_type (())\nmessages ((default True None None True (\"oven-factory.py\" 73) ((set_type (params (\"oven-factory.py\" 73)) \"unit\" (\"oven-factory.py\" 75)) (failwith (literal (intOrNat 19) (\"oven-factory.py\" 76)) (\"oven-factory.py\" 76)))) (makeOven True None None True (\"oven-factory.py\" 49) ((set_type (params (\"oven-factory.py\" 49)) \"unit\" (\"oven-factory.py\" 51)) (verify (eq (attr (data) \"state\" (\"oven-factory.py\" 54)) (literal (intOrNat 0) (\"oven-factory.py\" 54)) (\"oven-factory.py\" 54)) (literal (intOrNat 12) (\"oven-factory.py\" 54)) (\"oven-factory.py\" 54)) (verify (eq (amount) (literal (mutez 0) (\"oven-factory.py\" 57)) (\"oven-factory.py\" 57)) (literal (intOrNat 15) (\"oven-factory.py\" 57)) (\"oven-factory.py\" 57)) (set (attr (data) \"state\" (\"oven-factory.py\" 54)) (literal (intOrNat 1) (\"oven-factory.py\" 60)) (\"oven-factory.py\" 60)) (set (attr (data) \"makeOvenOwner\" (\"oven-factory.py\" 61)) (variant \"Some\" (sender) (\"oven-factory.py\" 61)) (\"oven-factory.py\" 61)) (set (operations (\"oven-factory.py\" 70)) (cons (transfer (self \"makeOven_minterCallback\" (\"oven-factory.py\" 64)) (literal (mutez 0) (\"oven-factory.py\" 70)) (openVariant (contract \"getInterestIndex\" (contract \"nat\") (attr (data) \"minterContractAddress\" (\"oven-factory.py\" 67)) (\"oven-factory.py\" 65)) \"Some\" \"None\" (\"oven-factory.py\" 69)) (\"oven-factory.py\" 70)) (operations (\"oven-factory.py\" 70)) (\"oven-factory.py\" 70)) (\"oven-factory.py\" 70)))) (makeOven_minterCallback True None None True (\"oven-factory.py\" 82) ((set_type (params (\"oven-factory.py\" 82)) \"nat\" (\"oven-factory.py\" 84)) (verify (eq (sender) (attr (data) \"minterContractAddress\" (\"oven-factory.py\" 67)) (\"oven-factory.py\" 87)) (literal (intOrNat 5) (\"oven-factory.py\" 87)) (\"oven-factory.py\" 87)) (verify (eq (attr (data) \"state\" (\"oven-factory.py\" 54)) (literal (intOrNat 1) (\"oven-factory.py\" 90)) (\"oven-factory.py\" 90)) (literal (intOrNat 12) (\"oven-factory.py\" 90)) (\"oven-factory.py\" 90)) (defineLocal \"create_contract_oven-factory_102\" (create_contract (contract (template_id (static_id 7 (\"oven.py\" 28)) \nstorage (record (\"oven.py\" 28) (borrowedTokens (literal (nat 0) (\"oven.py\" 20))) (interestIndex (toInt (literal (nat 1000000000000000000) (\"common/constants.py\" 4)) (\"oven.py\" 22))) (isLiquidated (literal (bool False) (\"oven.py\" 28))) (ovenProxyContractAddress (literal (address \"tz1c461F8GirBvq5DpFftPoPyCcPR7HQM6gm\") (\"test-helpers/addresses.py\" 9))) (owner (literal (address \"tz1S8MNvuFEUsWgjHvi3AxibRBf388NhT1q2\") (\"test-helpers/addresses.py\" 21))) (stabilityFeeTokens (literal (int 0) (\"oven.py\" 21))))\nstorage_type (())\nmessages ((borrow True None None True (\"oven.py\" 41) ((set_type (params (\"oven.py\" 41)) \"nat\" (\"oven.py\" 43)) (verify (eq (sender) (attr (data) \"owner\" (\"oven.py\" 46)) (\"oven.py\" 46)) (literal (intOrNat 6) (\"oven.py\" 46)) (\"oven.py\" 46)) (verify (eq (amount) (literal (mutez 0) (\"oven.py\" 49)) (\"oven.py\" 49)) (literal (intOrNat 15) (\"oven.py\" 49)) (\"oven.py\" 49)) (set (operations (\"oven.py\" 61)) (cons (transfer (tuple (\"oven.py\" 61) (to_address (self) (\"oven.py\" 55)) (tuple (\"oven.py\" 61) (attr (data) \"owner\" (\"oven.py\" 46)) (tuple (\"oven.py\" 61) (mul (first (openVariant (ediv (balance) (literal (mutez 1) (\"oven.py\" 52)) (\"oven.py\" 52)) \"Some\" \"None\" (\"oven.py\" 52)) (\"oven.py\" 52)) (literal (intOrNat 1000000000000) (\"oven.py\" 52)) (\"oven.py\" 52)) (tuple (\"oven.py\" 61) (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 61) (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (tuple (\"oven.py\" 61) (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 61) (attr (data) \"interestIndex\" (\"oven.py\" 55)) (params (\"oven.py\" 41))))))))) (balance) (openVariant (contract \"borrow\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 56)) \"Some\" \"None\" (\"oven.py\" 60)) (\"oven.py\" 61)) (operations (\"oven.py\" 61)) (\"oven.py\" 61)) (\"oven.py\" 61)))) (default True None None False (\"oven.py\" 108) ((set (operations (\"oven.py\" 121)) (cons (transfer (tuple (\"oven.py\" 121) (to_address (self) (\"oven.py\" 115)) (tuple (\"oven.py\" 121) (attr (data) \"owner\" (\"oven.py\" 46)) (tuple (\"oven.py\" 121) (mul (first (openVariant (ediv (balance) (literal (mutez 1) (\"oven.py\" 111)) (\"oven.py\" 111)) \"Some\" \"None\" (\"oven.py\" 111)) (\"oven.py\" 111)) (literal (intOrNat 1000000000000) (\"oven.py\" 111)) (\"oven.py\" 111)) (tuple (\"oven.py\" 121) (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 121) (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (tuple (\"oven.py\" 121) (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (attr (data) \"interestIndex\" (\"oven.py\" 55)))))))) (balance) (openVariant (contract \"deposit\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" \"int\")))))) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 116)) \"Some\" \"None\" (\"oven.py\" 120)) (\"oven.py\" 121)) (operations (\"oven.py\" 121)) (\"oven.py\" 121)) (\"oven.py\" 121)))) (liquidate True None None True (\"oven.py\" 123) ((set_type (params (\"oven.py\" 123)) \"unit\" (\"oven.py\" 125)) (verify (eq (amount) (literal (mutez 0) (\"oven.py\" 128)) (\"oven.py\" 128)) (literal (intOrNat 15) (\"oven.py\" 128)) (\"oven.py\" 128)) (set (operations (\"oven.py\" 140)) (cons (transfer (tuple (\"oven.py\" 140) (to_address (self) (\"oven.py\" 134)) (tuple (\"oven.py\" 140) (attr (data) \"owner\" (\"oven.py\" 46)) (tuple (\"oven.py\" 140) (mul (first (openVariant (ediv (balance) (literal (mutez 1) (\"oven.py\" 131)) (\"oven.py\" 131)) \"Some\" \"None\" (\"oven.py\" 131)) (\"oven.py\" 131)) (literal (intOrNat 1000000000000) (\"oven.py\" 131)) (\"oven.py\" 131)) (tuple (\"oven.py\" 140) (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 140) (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (tuple (\"oven.py\" 140) (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 140) (attr (data) \"interestIndex\" (\"oven.py\" 55)) (sender)))))))) (balance) (openVariant (contract \"liquidate\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"address\"))))))) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 135)) \"Some\" \"None\" (\"oven.py\" 139)) (\"oven.py\" 140)) (operations (\"oven.py\" 140)) (\"oven.py\" 140)) (\"oven.py\" 140)))) (repay True None None True (\"oven.py\" 63) ((set_type (params (\"oven.py\" 63)) \"nat\" (\"oven.py\" 65)) (verify (eq (sender) (attr (data) \"owner\" (\"oven.py\" 46)) (\"oven.py\" 68)) (literal (intOrNat 6) (\"oven.py\" 68)) (\"oven.py\" 68)) (verify (eq (amount) (literal (mutez 0) (\"oven.py\" 71)) (\"oven.py\" 71)) (literal (intOrNat 15) (\"oven.py\" 71)) (\"oven.py\" 71)) (set (operations (\"oven.py\" 83)) (cons (transfer (tuple (\"oven.py\" 83) (to_address (self) (\"oven.py\" 77)) (tuple (\"oven.py\" 83) (attr (data) \"owner\" (\"oven.py\" 46)) (tuple (\"oven.py\" 83) (mul (first (openVariant (ediv (balance) (literal (mutez 1) (\"oven.py\" 74)) (\"oven.py\" 74)) \"Some\" \"None\" (\"oven.py\" 74)) (\"oven.py\" 74)) (literal (intOrNat 1000000000000) (\"oven.py\" 74)) (\"oven.py\" 74)) (tuple (\"oven.py\" 83) (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 83) (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (tuple (\"oven.py\" 83) (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 83) (attr (data) \"interestIndex\" (\"oven.py\" 55)) (params (\"oven.py\" 63))))))))) (balance) (openVariant (contract \"repay\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"nat\"))))))) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 78)) \"Some\" \"None\" (\"oven.py\" 82)) (\"oven.py\" 83)) (operations (\"oven.py\" 83)) (\"oven.py\" 83)) (\"oven.py\" 83)))) (setDelegate True None None True (\"oven.py\" 142) ((set_type (params (\"oven.py\" 142)) (option \"key_hash\") (\"oven.py\" 144)) (verify (eq (sender) (attr (data) \"owner\" (\"oven.py\" 46)) (\"oven.py\" 147)) (literal (intOrNat 6) (\"oven.py\" 147)) (\"oven.py\" 147)) (verify (eq (amount) (literal (mutez 0) (\"oven.py\" 150)) (\"oven.py\" 150)) (literal (intOrNat 15) (\"oven.py\" 150)) (\"oven.py\" 150)) (set (operations (\"oven.py\" 152)) (cons (set_delegate (params (\"oven.py\" 142)) (\"oven.py\" 152)) (operations (\"oven.py\" 152)) (\"oven.py\" 152)) (\"oven.py\" 152)))) (updateState True None None True (\"oven.py\" 158) ((set_type (params (\"oven.py\" 158)) (tuple \"address\" (tuple \"nat\" (tuple \"int\" (tuple \"int\" \"bool\")))) (\"oven.py\" 160)) (verify (eq (sender) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 163)) (literal (intOrNat 2) (\"oven.py\" 163)) (\"oven.py\" 163)) (verify (eq (first (params (\"oven.py\" 158)) (\"oven.py\" 164)) (to_address (self) (\"oven.py\" 164)) (\"oven.py\" 164)) (literal (intOrNat 13) (\"oven.py\" 164)) (\"oven.py\" 164)) (set (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (first (second (params (\"oven.py\" 158)) (\"oven.py\" 166)) (\"oven.py\" 166)) (\"oven.py\" 166)) (set (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (first (second (second (params (\"oven.py\" 158)) (\"oven.py\" 167)) (\"oven.py\" 167)) (\"oven.py\" 167)) (\"oven.py\" 167)) (set (attr (data) \"interestIndex\" (\"oven.py\" 55)) (first (second (second (second (params (\"oven.py\" 158)) (\"oven.py\" 168)) (\"oven.py\" 168)) (\"oven.py\" 168)) (\"oven.py\" 168)) (\"oven.py\" 168)) (set (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (second (second (second (second (params (\"oven.py\" 158)) (\"oven.py\" 169)) (\"oven.py\" 169)) (\"oven.py\" 169)) (\"oven.py\" 169)) (\"oven.py\" 169)))) (withdraw True None None True (\"oven.py\" 85) ((set_type (params (\"oven.py\" 85)) \"mutez\" (\"oven.py\" 87)) (verify (eq (sender) (attr (data) \"owner\" (\"oven.py\" 46)) (\"oven.py\" 90)) (literal (intOrNat 6) (\"oven.py\" 90)) (\"oven.py\" 90)) (verify (eq (amount) (literal (mutez 0) (\"oven.py\" 93)) (\"oven.py\" 93)) (literal (intOrNat 15) (\"oven.py\" 93)) (\"oven.py\" 93)) (set (operations (\"oven.py\" 105)) (cons (transfer (tuple (\"oven.py\" 105) (to_address (self) (\"oven.py\" 99)) (tuple (\"oven.py\" 105) (attr (data) \"owner\" (\"oven.py\" 46)) (tuple (\"oven.py\" 105) (mul (first (openVariant (ediv (balance) (literal (mutez 1) (\"oven.py\" 96)) (\"oven.py\" 96)) \"Some\" \"None\" (\"oven.py\" 96)) (\"oven.py\" 96)) (literal (intOrNat 1000000000000) (\"oven.py\" 96)) (\"oven.py\" 96)) (tuple (\"oven.py\" 105) (attr (data) \"borrowedTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 105) (attr (data) \"isLiquidated\" (\"oven.py\" 55)) (tuple (\"oven.py\" 105) (attr (data) \"stabilityFeeTokens\" (\"oven.py\" 55)) (tuple (\"oven.py\" 105) (attr (data) \"interestIndex\" (\"oven.py\" 55)) (params (\"oven.py\" 85))))))))) (balance) (openVariant (contract \"withdraw\" (tuple \"address\" (tuple \"address\" (tuple \"nat\" (tuple \"nat\" (tuple \"bool\" (tuple \"int\" (tuple \"int\" \"mutez\"))))))) (attr (data) \"ovenProxyContractAddress\" (\"oven.py\" 58)) (\"oven.py\" 100)) \"Some\" \"None\" (\"oven.py\" 104)) (\"oven.py\" 105)) (operations (\"oven.py\" 105)) (\"oven.py\" 105)) (\"oven.py\" 105)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())) (storage (record (\"oven-factory.py\" 94) (borrowedTokens (literal (nat 0) (\"oven-factory.py\" 95))) (interestIndex (toInt (params (\"oven-factory.py\" 82)) (\"oven-factory.py\" 96))) (isLiquidated (literal (bool False) (\"oven-factory.py\" 94))) (ovenProxyContractAddress (attr (data) \"ovenProxyContractAddress\" (\"oven-factory.py\" 98))) (owner (openVariant (attr (data) \"makeOvenOwner\" (\"oven-factory.py\" 61)) \"Some\" \"None\" (\"oven-factory.py\" 91))) (stabilityFeeTokens (literal (int 0) (\"oven-factory.py\" 100))))) (baker (attr (data) \"initialDelegate\" (\"oven-factory.py\" 102))) (amount (literal (mutez 0) (\"oven-cracker.py\" 1))) (\"oven-factory.py\" 102)) (\"oven-factory.py\" 102)) (set (operations (\"oven-factory.py\" 102)) (cons (attr (getLocal \"create_contract_oven-factory_102\" (\"oven-factory.py\" 102)) \"operation\" (\"oven-factory.py\" 102)) (operations (\"oven-factory.py\" 102)) (\"oven-factory.py\" 102)) (\"oven-factory.py\" 102)) (set (operations (\"oven-factory.py\" 111)) (cons (transfer (tuple (\"oven-factory.py\" 111) (attr (getLocal \"create_contract_oven-factory_102\" (\"oven-factory.py\" 102)) \"address\" (\"oven-factory.py\" 102)) (openVariant (attr (data) \"makeOvenOwner\" (\"oven-factory.py\" 61)) \"Some\" \"None\" (\"oven-factory.py\" 91))) (literal (mutez 0) (\"oven-factory.py\" 111)) (openVariant (contract \"addOven\" (tuple \"address\" \"address\") (attr (data) \"ovenRegistryContractAddress\" (\"oven-factory.py\" 108)) (\"oven-factory.py\" 106)) \"Some\" \"None\" (\"oven-factory.py\" 110)) (\"oven-factory.py\" 111)) (operations (\"oven-factory.py\" 111)) (\"oven-factory.py\" 111)) (\"oven-factory.py\" 111)) (set (attr (data) \"state\" (\"oven-factory.py\" 54)) (literal (intOrNat 0) (\"oven-factory.py\" 114)) (\"oven-factory.py\" 114)) (set (attr (data) \"makeOvenOwner\" (\"oven-factory.py\" 61)) (variant \"None\" (unit) -1) (\"oven-factory.py\" 115)))) (setGovernorContract True None None True (\"oven-factory.py\" 122) ((set_type (params (\"oven-factory.py\" 122)) \"address\" (\"oven-factory.py\" 124)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (\"oven-factory.py\" 126)) (literal (intOrNat 4) (\"oven-factory.py\" 126)) (\"oven-factory.py\" 126)) (set (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (params (\"oven-factory.py\" 122)) (\"oven-factory.py\" 127)))) (setInitialDelegate True None None True (\"oven-factory.py\" 154) ((set_type (params (\"oven-factory.py\" 154)) (option \"key_hash\") (\"oven-factory.py\" 156)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (\"oven-factory.py\" 158)) (literal (intOrNat 4) (\"oven-factory.py\" 158)) (\"oven-factory.py\" 158)) (set (attr (data) \"initialDelegate\" (\"oven-factory.py\" 102)) (params (\"oven-factory.py\" 154)) (\"oven-factory.py\" 159)))) (setMinterContract True None None True (\"oven-factory.py\" 146) ((set_type (params (\"oven-factory.py\" 146)) \"address\" (\"oven-factory.py\" 148)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (\"oven-factory.py\" 150)) (literal (intOrNat 4) (\"oven-factory.py\" 150)) (\"oven-factory.py\" 150)) (set (attr (data) \"minterContractAddress\" (\"oven-factory.py\" 67)) (params (\"oven-factory.py\" 146)) (\"oven-factory.py\" 151)))) (setOvenProxyContract True None None True (\"oven-factory.py\" 138) ((set_type (params (\"oven-factory.py\" 138)) \"address\" (\"oven-factory.py\" 140)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (\"oven-factory.py\" 142)) (literal (intOrNat 4) (\"oven-factory.py\" 142)) (\"oven-factory.py\" 142)) (set (attr (data) \"ovenProxyContractAddress\" (\"oven-factory.py\" 98)) (params (\"oven-factory.py\" 138)) (\"oven-factory.py\" 143)))) (setOvenRegistryContract True None None True (\"oven-factory.py\" 130) ((set_type (params (\"oven-factory.py\" 130)) \"address\" (\"oven-factory.py\" 132)) (verify (eq (sender) (attr (data) \"governorContractAddress\" (\"oven-factory.py\" 126)) (\"oven-factory.py\" 134)) (literal (intOrNat 4) (\"oven-factory.py\" 134)) (\"oven-factory.py\" 134)) (set (attr (data) \"ovenRegistryContractAddress\" (\"oven-factory.py\" 108)) (params (\"oven-factory.py\" 130)) (\"oven-factory.py\" 135)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 8 (\"oven-factory.py\" 33))",
    "line_no": "(\"oven-cracker.py\" 182)",
    "show": true
   },
   {
    "action": "message",
    "id": "(static_id 4 (\"oven-registry.py\" 18))",
    "line_no": "(\"oven-cracker.py\" 184)",
    "message": "setOvenFactoryContract",
    "params": "(contract_address (static_id 8 (\"oven-factory.py\" 33)) \"\" (\"oven-factory.py\" 33))",
    "sender": "(literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))"
   },
   {
    "action": "message",
    "id": "(static_id 5 (\"minter.py\" 34))",
    "line_no": "(\"oven-cracker.py\" 190)",
    "message": "updateContracts",
    "params": "(tuple (\"oven-cracker.py\" 190) (literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6)) (tuple (\"oven-cracker.py\" 190) (contract_address (static_id 1 (\"token.py\" 56)) \"\" (\"token.py\" 56)) (tuple (\"oven-cracker.py\" 190) (contract_address (static_id 6 (\"oven-proxy.py\" 33)) \"\" (\"oven-proxy.py\" 33)) (tuple (\"oven-cracker.py\" 190) (literal (address \"tz1W5VkdB5s7ENMESVBtwyt9kyvLqPcUczRT\") (\"test-helpers/addresses.py\" 42)) (literal (address \"tz1R6Ej25VSerE3MkSoEEeBjKHCDTFbpKuSX\") (\"test-helpers/addresses.py\" 45))))))",
    "sender": "(literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"token.py\" 56))",
    "line_no": "(\"oven-cracker.py\" 192)",
    "message": "setAdministrator",
    "params": "(contract_address (static_id 5 (\"minter.py\" 34)) \"\" (\"minter.py\" 34))",
    "sender": "(literal (address \"tz1abmz7jiCV2GH2u81LRrGgAFFgvQgiDiaf\") (\"test-helpers/addresses.py\" 6))"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 9 (\"oven-cracker.py\" 26)) \nstorage (record (\"oven-cracker.py\" 26) (minterAddress (contract_address (static_id 5 (\"minter.py\" 34)) \"\" (\"minter.py\" 34))) (myOvenAddress (literal (address \"tz1bTpviNnyx2PXsNmGpCQTMQsGoYordkUoA\") (\"test-helpers/addresses.py\" 54))) (ovenFactoryAddress (contract_address (static_id 8 (\"oven-factory.py\" 33)) \"\" (\"oven-factory.py\" 33))) (owner (contract_address (static_id 0 (\"test-helpers/dummy-contract.py\" 12)) \"\" (\"test-helpers/dummy-contract.py\" 12))) (state (literal (intOrNat 0) (\"oven-cracker.py\" 26))) (tokensToBorrow (literal (nat 0) (\"oven-cracker.py\" 19))))\nstorage_type (())\nmessages ((default True None None False (\"oven-cracker.py\" 53) ((ifBlock (eq (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 0) (\"oven-cracker.py\" 55)) (\"oven-cracker.py\" 55)) ((set (operations (\"oven-cracker.py\" 56)) (cons (transfer (unit) (balance) (openVariant (contract \"\" \"unit\" (attr (data) \"owner\" (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) \"Some\" \"None\" (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) (operations (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56))) (\"oven-cracker.py\" 55)) (elseBlock ((set (operations (\"oven-cracker.py\" 59)) (cons (transfer (unit) (balance) (openVariant (contract \"\" \"unit\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) \"Some\" \"None\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (operations (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (set (operations (\"oven-cracker.py\" 68)) (cons (transfer (attr (data) \"tokensToBorrow\" (\"oven-cracker.py\" 68)) (literal (mutez 0) (\"oven-cracker.py\" 68)) (openVariant (contract \"borrow\" \"nat\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 62)) \"Some\" \"None\" (\"oven-cracker.py\" 66)) (\"oven-cracker.py\" 68)) (operations (\"oven-cracker.py\" 68)) (\"oven-cracker.py\" 68)) (\"oven-cracker.py\" 68)) (set (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 0) (\"oven-cracker.py\" 70)) (\"oven-cracker.py\" 70)))))) (drain True None None True (\"oven-cracker.py\" 72) ((set_type (params (\"oven-cracker.py\" 72)) \"mutez\" (\"oven-cracker.py\" 78)) (set (operations (\"oven-cracker.py\" 85)) (cons (transfer (params (\"oven-cracker.py\" 72)) (literal (mutez 0) (\"oven-cracker.py\" 85)) (openVariant (contract \"withdraw\" \"mutez\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 79)) \"Some\" \"None\" (\"oven-cracker.py\" 83)) (\"oven-cracker.py\" 85)) (operations (\"oven-cracker.py\" 85)) (\"oven-cracker.py\" 85)) (\"oven-cracker.py\" 85)))) (fake_mint True None None True (\"oven-cracker.py\" 87) ((set_type (params (\"oven-cracker.py\" 87)) \"nat\" (\"oven-cracker.py\" 89)) (set (attr (data) \"tokensToBorrow\" (\"oven-cracker.py\" 68)) (params (\"oven-cracker.py\" 87)) (\"oven-cracker.py\" 92)) (set (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 1) (\"oven-cracker.py\" 94)) (\"oven-cracker.py\" 94)) (set (operations (\"oven-cracker.py\" 97)) (cons (transfer (unit) (literal (mutez 1000000) (\"oven-cracker.py\" 97)) (openVariant (contract \"\" \"unit\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 97)) \"Some\" \"None\" (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (operations (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (set (operations (\"oven-cracker.py\" 106)) (cons (transfer (literal (mutez 1000000) (\"oven-cracker.py\" 106)) (literal (mutez 0) (\"oven-cracker.py\" 106)) (openVariant (contract \"withdraw\" \"mutez\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 99)) \"Some\" \"None\" (\"oven-cracker.py\" 103)) (\"oven-cracker.py\" 106)) (operations (\"oven-cracker.py\" 106)) (\"oven-cracker.py\" 106)) (\"oven-cracker.py\" 106)))) (oven_create True None None False (\"oven-cracker.py\" 38) ((set (operations (\"oven-cracker.py\" 45)) (cons (transfer (unit) (literal (mutez 0) (\"oven-cracker.py\" 45)) (openVariant (contract \"makeOven\" \"unit\" (attr (data) \"ovenFactoryAddress\" (\"oven-cracker.py\" 42)) (\"oven-cracker.py\" 40)) \"Some\" \"None\" (\"oven-cracker.py\" 44)) (\"oven-cracker.py\" 45)) (operations (\"oven-cracker.py\" 45)) (\"oven-cracker.py\" 45)) (\"oven-cracker.py\" 45)))) (set_my_oven_address True None None True (\"oven-cracker.py\" 47) ((set_type (params (\"oven-cracker.py\" 47)) \"address\" (\"oven-cracker.py\" 49)) (set (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (params (\"oven-cracker.py\" 47)) (\"oven-cracker.py\" 50)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 9 (\"oven-cracker.py\" 26))",
    "line_no": "(\"oven-cracker.py\" 201)",
    "show": true
   },
   {
    "action": "message",
    "id": "(static_id 9 (\"oven-cracker.py\" 26))",
    "line_no": "(\"oven-cracker.py\" 203)",
    "message": "oven_create",
    "params": "(unit)"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(literal (string \"Oven added by address:\") (\"oven-cracker.py\" 209))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 209)",
    "stripStrings": false
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(getItem (attr (contract_data (static_id 4 (\"oven-registry.py\" 18)) (\"oven-cracker.py\" 184)) \"ovenMap\" (\"oven-cracker.py\" 210)) (literal (address \"KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU\") (\"oven-cracker.py\" 207)) (\"oven-cracker.py\" 210))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 210)",
    "stripStrings": false
   },
   {
    "action": "verify",
    "condition": "(eq (getItem (attr (contract_data (static_id 4 (\"oven-registry.py\" 18)) (\"oven-cracker.py\" 184)) \"ovenMap\" (\"oven-cracker.py\" 210)) (literal (address \"KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU\") (\"oven-cracker.py\" 207)) (\"oven-cracker.py\" 212)) (contract_address (static_id 9 (\"oven-cracker.py\" 26)) \"\" (\"oven-cracker.py\" 26)) (\"oven-cracker.py\" 212))",
    "line_no": "(\"oven-cracker.py\" 212)"
   },
   {
    "action": "message",
    "id": "(static_id 9 (\"oven-cracker.py\" 26))",
    "line_no": "(\"oven-cracker.py\" 215)",
    "message": "set_my_oven_address",
    "params": "(literal (address \"KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU\") (\"oven-cracker.py\" 207))"
   },
   {
    "action": "verify",
    "condition": "(eq (attr (contract_data (static_id 9 (\"oven-cracker.py\" 26)) (\"oven-cracker.py\" 215)) \"myOvenAddress\" (\"oven-cracker.py\" 216)) (literal (address \"KT1TezoooozzSmartPyzzDYNAMiCzzpLu4LU\") (\"oven-cracker.py\" 207)) (\"oven-cracker.py\" 216))",
    "line_no": "(\"oven-cracker.py\" 216)"
   },
   {
    "action": "message",
    "id": "(static_id 9 (\"oven-cracker.py\" 26))",
    "line_no": "(\"oven-cracker.py\" 224)",
    "message": "fake_mint",
    "params": "(mul (literal (nat 10000) (\"oven-cracker.py\" 220)) (literal (nat 1000000000000000000) (\"oven-cracker.py\" 219)) (\"oven-cracker.py\" 220))",
    "amount": "(literal (mutez 10000000000) (\"oven-cracker.py\" 224))"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(literal (string \"Cracker XTZ balance\") (\"oven-cracker.py\" 226))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 226)",
    "stripStrings": false
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(contract_balance (static_id 9 (\"oven-cracker.py\" 26)) (\"oven-cracker.py\" 201))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 227)",
    "stripStrings": false
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(literal (string \"Cracker KUSD balance\") (\"oven-cracker.py\" 228))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 228)",
    "stripStrings": false
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(attr (getItem (attr (contract_data (static_id 1 (\"token.py\" 56)) (\"oven-cracker.py\" 192)) \"balances\" (\"oven-cracker.py\" 229)) (contract_address (static_id 9 (\"oven-cracker.py\" 26)) \"\" (\"oven-cracker.py\" 26)) (\"oven-cracker.py\" 229)) \"balance\" (\"oven-cracker.py\" 229))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 229)",
    "stripStrings": false
   },
   {
    "action": "show",
    "compile": false,
    "expression": "(literal (string \"Owner balance\") (\"oven-cracker.py\" 231))",
    "html": true,
    "line_no": "(\"oven-cracker.py\" 231)",
    "stripStrings": false
   },
   {
    "action": "message",
    "id": "(static_id 9 (\"oven-cracker.py\" 26))",
    "line_no": "(\"oven-cracker.py\" 232)",
    "message": "drain",
    "params": "(literal (mutez 10000000000) (\"oven-cracker.py\" 232))"
   },
   {
    "action": "verify",
    "condition": "(eq (contract_balance (static_id 0 (\"test-helpers/dummy-contract.py\" 12)) (\"oven-cracker.py\" 138)) (literal (mutez 10000000000) (\"oven-cracker.py\" 234)) (\"oven-cracker.py\" 234))",
    "line_no": "(\"oven-cracker.py\" 234)"
   },
   {
    "action": "verify",
    "condition": "(eq (attr (getItem (attr (contract_data (static_id 1 (\"token.py\" 56)) (\"oven-cracker.py\" 192)) \"balances\" (\"oven-cracker.py\" 229)) (contract_address (static_id 9 (\"oven-cracker.py\" 26)) \"\" (\"oven-cracker.py\" 26)) (\"oven-cracker.py\" 235)) \"balance\" (\"oven-cracker.py\" 235)) (mul (literal (nat 10000) (\"oven-cracker.py\" 220)) (literal (nat 1000000000000000000) (\"oven-cracker.py\" 219)) (\"oven-cracker.py\" 220)) (\"oven-cracker.py\" 235))",
    "line_no": "(\"oven-cracker.py\" 235)"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "oven-cracker",
  "longname": "oven-cracker",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"oven-cracker.py\" 26)) \nstorage (record (\"oven-cracker.py\" 26) (minterAddress (literal (address \"tz1UUgPwikRHW1mEyVZfGYy6QaxrY6Y7WaG5\") (\"test-helpers/addresses.py\" 33))) (myOvenAddress (literal (address \"tz1bTpviNnyx2PXsNmGpCQTMQsGoYordkUoA\") (\"test-helpers/addresses.py\" 54))) (ovenFactoryAddress (literal (address \"tz1irJKkXS2DBWkU1NnmFQx1c1L7pbGg4yhk\") (\"test-helpers/addresses.py\" 15))) (owner (literal (address \"tz1S8MNvuFEUsWgjHvi3AxibRBf388NhT1q2\") (\"test-helpers/addresses.py\" 21))) (state (literal (intOrNat 0) (\"oven-cracker.py\" 26))) (tokensToBorrow (literal (nat 0) (\"oven-cracker.py\" 19))))\nstorage_type (())\nmessages ((default True None None False (\"oven-cracker.py\" 53) ((ifBlock (eq (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 0) (\"oven-cracker.py\" 55)) (\"oven-cracker.py\" 55)) ((set (operations (\"oven-cracker.py\" 56)) (cons (transfer (unit) (balance) (openVariant (contract \"\" \"unit\" (attr (data) \"owner\" (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) \"Some\" \"None\" (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) (operations (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56)) (\"oven-cracker.py\" 56))) (\"oven-cracker.py\" 55)) (elseBlock ((set (operations (\"oven-cracker.py\" 59)) (cons (transfer (unit) (balance) (openVariant (contract \"\" \"unit\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) \"Some\" \"None\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (operations (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 59)) (set (operations (\"oven-cracker.py\" 68)) (cons (transfer (attr (data) \"tokensToBorrow\" (\"oven-cracker.py\" 68)) (literal (mutez 0) (\"oven-cracker.py\" 68)) (openVariant (contract \"borrow\" \"nat\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 62)) \"Some\" \"None\" (\"oven-cracker.py\" 66)) (\"oven-cracker.py\" 68)) (operations (\"oven-cracker.py\" 68)) (\"oven-cracker.py\" 68)) (\"oven-cracker.py\" 68)) (set (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 0) (\"oven-cracker.py\" 70)) (\"oven-cracker.py\" 70)))))) (drain True None None True (\"oven-cracker.py\" 72) ((set_type (params (\"oven-cracker.py\" 72)) \"mutez\" (\"oven-cracker.py\" 78)) (set (operations (\"oven-cracker.py\" 85)) (cons (transfer (params (\"oven-cracker.py\" 72)) (literal (mutez 0) (\"oven-cracker.py\" 85)) (openVariant (contract \"withdraw\" \"mutez\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 79)) \"Some\" \"None\" (\"oven-cracker.py\" 83)) (\"oven-cracker.py\" 85)) (operations (\"oven-cracker.py\" 85)) (\"oven-cracker.py\" 85)) (\"oven-cracker.py\" 85)))) (fake_mint True None None True (\"oven-cracker.py\" 87) ((set_type (params (\"oven-cracker.py\" 87)) \"nat\" (\"oven-cracker.py\" 89)) (set (attr (data) \"tokensToBorrow\" (\"oven-cracker.py\" 68)) (params (\"oven-cracker.py\" 87)) (\"oven-cracker.py\" 92)) (set (attr (data) \"state\" (\"oven-cracker.py\" 55)) (literal (intOrNat 1) (\"oven-cracker.py\" 94)) (\"oven-cracker.py\" 94)) (set (operations (\"oven-cracker.py\" 97)) (cons (transfer (unit) (literal (mutez 1000000) (\"oven-cracker.py\" 97)) (openVariant (contract \"\" \"unit\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 97)) \"Some\" \"None\" (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (operations (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (\"oven-cracker.py\" 97)) (set (operations (\"oven-cracker.py\" 106)) (cons (transfer (literal (mutez 1000000) (\"oven-cracker.py\" 106)) (literal (mutez 0) (\"oven-cracker.py\" 106)) (openVariant (contract \"withdraw\" \"mutez\" (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (\"oven-cracker.py\" 99)) \"Some\" \"None\" (\"oven-cracker.py\" 103)) (\"oven-cracker.py\" 106)) (operations (\"oven-cracker.py\" 106)) (\"oven-cracker.py\" 106)) (\"oven-cracker.py\" 106)))) (oven_create True None None False (\"oven-cracker.py\" 38) ((set (operations (\"oven-cracker.py\" 45)) (cons (transfer (unit) (literal (mutez 0) (\"oven-cracker.py\" 45)) (openVariant (contract \"makeOven\" \"unit\" (attr (data) \"ovenFactoryAddress\" (\"oven-cracker.py\" 42)) (\"oven-cracker.py\" 40)) \"Some\" \"None\" (\"oven-cracker.py\" 44)) (\"oven-cracker.py\" 45)) (operations (\"oven-cracker.py\" 45)) (\"oven-cracker.py\" 45)) (\"oven-cracker.py\" 45)))) (set_my_oven_address True None None True (\"oven-cracker.py\" 47) ((set_type (params (\"oven-cracker.py\" 47)) \"address\" (\"oven-cracker.py\" 49)) (set (attr (data) \"myOvenAddress\" (\"oven-cracker.py\" 59)) (params (\"oven-cracker.py\" 47)) (\"oven-cracker.py\" 50)))))\nflags ((exceptions DefaultUnit))\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 0 (\"oven-cracker.py\" 26))",
    "line_no": "(\"\" -1)",
    "show": true
   }
  ],
  "kind": "compilation"
 }
]