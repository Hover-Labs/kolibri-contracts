parameter (pair (address %governorContractAddress) (pair (address %ovenFactoryContractAddress) (big_map %ovenMap address address)));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == verify ==
    # sp.verify(params.k0.ovenMap[sp.address('tz1LmaFsWRkjr7QMCx5PtV6xTUz3AmEpKQiF')] == sp.address('tz1S8MNvuFEUsWgjHvi3AxibRBf388NhT1q2')) # @parameter : @storage
    CDDR;       # big_map address address : @storage
    PUSH address "tz1S8MNvuFEUsWgjHvi3AxibRBf388NhT1q2"; # address : big_map address address : @storage
    SWAP;       # big_map address address : address : @storage
    PUSH address "tz1LmaFsWRkjr7QMCx5PtV6xTUz3AmEpKQiF"; # address : big_map address address : address : @storage
    GET;        # option address : address : @storage
    IF_SOME
      {
        # of_some: Get-item:214 # @some : address : @storage
      }
      {
        PUSH int 214; # int : address : @storage
        FAILWITH;   # FAILED
      }; # @some : address : @storage
    COMPARE;    # int : @storage
    EQ;         # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: params.k0.ovenMap[sp.address('tz1LmaFsWRkjr7QMCx5PtV6xTUz3AmEpKQiF')] == sp.address('tz1S8MNvuFEUsWgjHvi3AxibRBf388NhT1q2')"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };