parameter (or (or (or (or (pair %borrow address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) (nat %borrow_callback)) (or (unit %default) (pair %deposit address (pair address (pair nat (pair nat (pair bool (pair int int)))))))) (or (or (pair %liquidate address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) (nat %liquidate_callback)) (or (unit %pause) (pair %repay address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))))) (or (or (or (address %setGovernorContract) (address %setMinterContract)) (or (address %setOracleContract) (address %setOvenRegistryContract))) (or (or (address %setPauseGuardianContract) (unit %unpause)) (or (pair %updateState address (pair nat (pair int (pair int bool)))) (or (pair %withdraw address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) (nat %withdraw_callback))))));
storage   (pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == borrow ==
                    # sp.transfer(sp.sender, sp.tez(0), sp.contract(sp.TAddress, self.data.ovenRegistryContractAddress, entry_point='isOven').open_some()) # @parameter%borrow : @storage
                    NIL operation; # list operation : @parameter%borrow : @storage
                    DIG 2;      # @storage : list operation : @parameter%borrow
                    DUP;        # @storage : @storage : list operation : @parameter%borrow
                    DUG 3;      # @storage : list operation : @parameter%borrow : @storage
                    CDAAR;      # address : list operation : @parameter%borrow : @storage
                    CONTRACT %isOven address; # option (contract address) : list operation : @parameter%borrow : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%borrow : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%borrow : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%borrow : @storage
                    SENDER;     # address : mutez : @some : list operation : @parameter%borrow : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%borrow : @storage
                    CONS;       # list operation : @parameter%borrow : @storage
                    # sp.verify(self.data.paused == False, message = 18) # list operation : @parameter%borrow : @storage
                    PUSH bool False; # bool : list operation : @parameter%borrow : @storage
                    DIG 3;      # @storage : bool : list operation : @parameter%borrow
                    DUP;        # @storage : @storage : bool : list operation : @parameter%borrow
                    DUG 4;      # @storage : bool : list operation : @parameter%borrow : @storage
                    CDDAR;      # bool : bool : list operation : @parameter%borrow : @storage
                    COMPARE;    # int : list operation : @parameter%borrow : @storage
                    EQ;         # bool : list operation : @parameter%borrow : @storage
                    IF
                      {}
                      {
                        PUSH int 18; # int : list operation : @parameter%borrow : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%borrow : @storage
                    # sp.verify(self.data.state == 0, message = 12) # list operation : @parameter%borrow : @storage
                    PUSH int 0; # int : list operation : @parameter%borrow : @storage
                    DIG 3;      # @storage : int : list operation : @parameter%borrow
                    DUP;        # @storage : @storage : int : list operation : @parameter%borrow
                    DUG 4;      # @storage : int : list operation : @parameter%borrow : @storage
                    CDDDAR;     # int : int : list operation : @parameter%borrow : @storage
                    COMPARE;    # int : list operation : @parameter%borrow : @storage
                    EQ;         # bool : list operation : @parameter%borrow : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : list operation : @parameter%borrow : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%borrow : @storage
                    # self.data.state = 1 # list operation : @parameter%borrow : @storage
                    DIG 2;      # @storage : list operation : @parameter%borrow
                    DUP;        # @storage : @storage : list operation : @parameter%borrow
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation : @parameter%borrow
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    PUSH int 1; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%borrow
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%borrow
                    # self.data.borrowParams = sp.some(params) # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%borrow
                    DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%borrow
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%borrow
                    SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    CDR;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    CADR;       # address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%borrow
                    DIG 4;      # @parameter%borrow : address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SOME;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    # sp.transfer(sp.self_entry_point('borrow_callback'), sp.tez(0), sp.contract(sp.TContract(sp.TNat), self.data.oracleContractAddress, entry_point='getXtzUsdRate').open_some()) # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUP;        # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUG 2;      # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CADDDR;     # address : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CONTRACT %getXtzUsdRate (contract nat); # option (contract (contract nat)) : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    SELF %borrow_callback; # contract nat : mutez : @some : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CONS;       # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%borrow_callback
                    # == borrow_callback ==
                    # sp.verify(sp.sender == self.data.oracleContractAddress, message = 3) # @storage : @parameter%borrow_callback
                    DUP;        # @storage : @storage : @parameter%borrow_callback
                    DUG 2;      # @storage : @parameter%borrow_callback : @storage
                    CADDDR;     # address : @parameter%borrow_callback : @storage
                    SENDER;     # address : address : @parameter%borrow_callback : @storage
                    COMPARE;    # int : @parameter%borrow_callback : @storage
                    EQ;         # bool : @parameter%borrow_callback : @storage
                    IF
                      {}
                      {
                        PUSH int 3; # int : @parameter%borrow_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%borrow_callback : @storage
                    # sp.verify(self.data.state == 1, message = 12) # @parameter%borrow_callback : @storage
                    PUSH int 1; # int : @parameter%borrow_callback : @storage
                    DIG 2;      # @storage : int : @parameter%borrow_callback
                    DUP;        # @storage : @storage : int : @parameter%borrow_callback
                    DUG 3;      # @storage : int : @parameter%borrow_callback : @storage
                    CDDDAR;     # int : int : @parameter%borrow_callback : @storage
                    COMPARE;    # int : @parameter%borrow_callback : @storage
                    EQ;         # bool : @parameter%borrow_callback : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%borrow_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%borrow_callback : @storage
                    # sp.transfer((params, self.data.borrowParams.open_some()), sp.balance, sp.contract(sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TNat)))))))), self.data.minterContractAddress, entry_point='borrow').open_some()) # @parameter%borrow_callback : @storage
                    NIL operation; # list operation : @parameter%borrow_callback : @storage
                    DIG 2;      # @storage : list operation : @parameter%borrow_callback
                    DUP;        # @storage : @storage : list operation : @parameter%borrow_callback
                    DUG 3;      # @storage : list operation : @parameter%borrow_callback : @storage
                    CADDAR;     # address : list operation : @parameter%borrow_callback : @storage
                    CONTRACT %borrow (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))); # option (contract (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))))) : list operation : @parameter%borrow_callback : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%borrow_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%borrow_callback : @storage
                    BALANCE;    # mutez : @some : list operation : @parameter%borrow_callback : @storage
                    DIG 4;      # @storage : mutez : @some : list operation : @parameter%borrow_callback
                    DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%borrow_callback
                    DUG 5;      # @storage : mutez : @some : list operation : @parameter%borrow_callback : @storage
                    CAAAR;      # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : mutez : @some : list operation : @parameter%borrow_callback : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : mutez : @some : list operation : @parameter%borrow_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : @some : list operation : @parameter%borrow_callback : @storage
                    DIG 4;      # @parameter%borrow_callback : @some : mutez : @some : list operation : @storage
                    PAIR;       # pair @parameter%borrow_callback @some : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.state = 0 # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PUSH int 0; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    # self.data.borrowParams = sp.none # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CDR;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CADR;       # address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    NONE (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))); # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }
              {
                IF_LEFT
                  {
                    PUSH int 19; # int : @parameter%default : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    # == deposit ==
                    # sp.transfer(sp.sender, sp.tez(0), sp.contract(sp.TAddress, self.data.ovenRegistryContractAddress, entry_point='isOven').open_some()) # @parameter%deposit : @storage
                    NIL operation; # list operation : @parameter%deposit : @storage
                    DIG 2;      # @storage : list operation : @parameter%deposit
                    DUP;        # @storage : @storage : list operation : @parameter%deposit
                    DUG 3;      # @storage : list operation : @parameter%deposit : @storage
                    CDAAR;      # address : list operation : @parameter%deposit : @storage
                    CONTRACT %isOven address; # option (contract address) : list operation : @parameter%deposit : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%deposit : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%deposit : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%deposit : @storage
                    SENDER;     # address : mutez : @some : list operation : @parameter%deposit : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%deposit : @storage
                    CONS;       # list operation : @parameter%deposit : @storage
                    # sp.verify(self.data.paused == False, message = 18) # list operation : @parameter%deposit : @storage
                    PUSH bool False; # bool : list operation : @parameter%deposit : @storage
                    DIG 3;      # @storage : bool : list operation : @parameter%deposit
                    DUP;        # @storage : @storage : bool : list operation : @parameter%deposit
                    DUG 4;      # @storage : bool : list operation : @parameter%deposit : @storage
                    CDDAR;      # bool : bool : list operation : @parameter%deposit : @storage
                    COMPARE;    # int : list operation : @parameter%deposit : @storage
                    EQ;         # bool : list operation : @parameter%deposit : @storage
                    IF
                      {}
                      {
                        PUSH int 18; # int : list operation : @parameter%deposit : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%deposit : @storage
                    # sp.verify(self.data.state == 0, message = 12) # list operation : @parameter%deposit : @storage
                    PUSH int 0; # int : list operation : @parameter%deposit : @storage
                    DIG 3;      # @storage : int : list operation : @parameter%deposit
                    DUP;        # @storage : @storage : int : list operation : @parameter%deposit
                    DUG 4;      # @storage : int : list operation : @parameter%deposit : @storage
                    CDDDAR;     # int : int : list operation : @parameter%deposit : @storage
                    COMPARE;    # int : list operation : @parameter%deposit : @storage
                    EQ;         # bool : list operation : @parameter%deposit : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : list operation : @parameter%deposit : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%deposit : @storage
                    # sp.transfer(params, sp.amount, sp.contract(sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TInt)))))), self.data.minterContractAddress, entry_point='deposit').open_some()) # list operation : @parameter%deposit : @storage
                    DIG 2;      # @storage : list operation : @parameter%deposit
                    DUP;        # @storage : @storage : list operation : @parameter%deposit
                    DUG 3;      # @storage : list operation : @parameter%deposit : @storage
                    CADDAR;     # address : list operation : @parameter%deposit : @storage
                    CONTRACT %deposit (pair address (pair address (pair nat (pair nat (pair bool (pair int int)))))); # option (contract (pair address (pair address (pair nat (pair nat (pair bool (pair int int))))))) : list operation : @parameter%deposit : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%deposit : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%deposit : @storage
                    AMOUNT;     # mutez : @some : list operation : @parameter%deposit : @storage
                    DIG 3;      # @parameter%deposit : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : @storage
              }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == liquidate ==
                    # sp.transfer(sp.sender, sp.tez(0), sp.contract(sp.TAddress, self.data.ovenRegistryContractAddress, entry_point='isOven').open_some()) # @parameter%liquidate : @storage
                    NIL operation; # list operation : @parameter%liquidate : @storage
                    DIG 2;      # @storage : list operation : @parameter%liquidate
                    DUP;        # @storage : @storage : list operation : @parameter%liquidate
                    DUG 3;      # @storage : list operation : @parameter%liquidate : @storage
                    CDAAR;      # address : list operation : @parameter%liquidate : @storage
                    CONTRACT %isOven address; # option (contract address) : list operation : @parameter%liquidate : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%liquidate : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%liquidate : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%liquidate : @storage
                    SENDER;     # address : mutez : @some : list operation : @parameter%liquidate : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%liquidate : @storage
                    CONS;       # list operation : @parameter%liquidate : @storage
                    # sp.verify(self.data.paused == False, message = 18) # list operation : @parameter%liquidate : @storage
                    PUSH bool False; # bool : list operation : @parameter%liquidate : @storage
                    DIG 3;      # @storage : bool : list operation : @parameter%liquidate
                    DUP;        # @storage : @storage : bool : list operation : @parameter%liquidate
                    DUG 4;      # @storage : bool : list operation : @parameter%liquidate : @storage
                    CDDAR;      # bool : bool : list operation : @parameter%liquidate : @storage
                    COMPARE;    # int : list operation : @parameter%liquidate : @storage
                    EQ;         # bool : list operation : @parameter%liquidate : @storage
                    IF
                      {}
                      {
                        PUSH int 18; # int : list operation : @parameter%liquidate : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%liquidate : @storage
                    # sp.verify(self.data.state == 0, message = 12) # list operation : @parameter%liquidate : @storage
                    PUSH int 0; # int : list operation : @parameter%liquidate : @storage
                    DIG 3;      # @storage : int : list operation : @parameter%liquidate
                    DUP;        # @storage : @storage : int : list operation : @parameter%liquidate
                    DUG 4;      # @storage : int : list operation : @parameter%liquidate : @storage
                    CDDDAR;     # int : int : list operation : @parameter%liquidate : @storage
                    COMPARE;    # int : list operation : @parameter%liquidate : @storage
                    EQ;         # bool : list operation : @parameter%liquidate : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : list operation : @parameter%liquidate : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%liquidate : @storage
                    # self.data.state = 3 # list operation : @parameter%liquidate : @storage
                    DIG 2;      # @storage : list operation : @parameter%liquidate
                    DUP;        # @storage : @storage : list operation : @parameter%liquidate
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation : @parameter%liquidate
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    PUSH int 3; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%liquidate
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%liquidate
                    # self.data.liquidateParams = sp.some(params) # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%liquidate
                    DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%liquidate
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%liquidate
                    SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    CAR;        # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    CDDR;       # pair (address %minterContractAddress) (address %oracleContractAddress) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%liquidate
                    DIG 4;      # @parameter%liquidate : pair (address %minterContractAddress) (address %oracleContractAddress) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SOME;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (address %minterContractAddress) (address %oracleContractAddress) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SWAP;       # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    # sp.transfer(sp.self_entry_point('liquidate_callback'), sp.tez(0), sp.contract(sp.TContract(sp.TNat), self.data.oracleContractAddress, entry_point='getXtzUsdRate').open_some()) # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUG 2;      # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CADDDR;     # address : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CONTRACT %getXtzUsdRate (contract nat); # option (contract (contract nat)) : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    SELF %liquidate_callback; # contract nat : mutez : @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    CONS;       # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%liquidate_callback
                    # == liquidate_callback ==
                    # sp.verify(sp.sender == self.data.oracleContractAddress, message = 3) # @storage : @parameter%liquidate_callback
                    DUP;        # @storage : @storage : @parameter%liquidate_callback
                    DUG 2;      # @storage : @parameter%liquidate_callback : @storage
                    CADDDR;     # address : @parameter%liquidate_callback : @storage
                    SENDER;     # address : address : @parameter%liquidate_callback : @storage
                    COMPARE;    # int : @parameter%liquidate_callback : @storage
                    EQ;         # bool : @parameter%liquidate_callback : @storage
                    IF
                      {}
                      {
                        PUSH int 3; # int : @parameter%liquidate_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%liquidate_callback : @storage
                    # sp.verify(self.data.state == 3, message = 12) # @parameter%liquidate_callback : @storage
                    PUSH int 3; # int : @parameter%liquidate_callback : @storage
                    DIG 2;      # @storage : int : @parameter%liquidate_callback
                    DUP;        # @storage : @storage : int : @parameter%liquidate_callback
                    DUG 3;      # @storage : int : @parameter%liquidate_callback : @storage
                    CDDDAR;     # int : int : @parameter%liquidate_callback : @storage
                    COMPARE;    # int : @parameter%liquidate_callback : @storage
                    EQ;         # bool : @parameter%liquidate_callback : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%liquidate_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%liquidate_callback : @storage
                    # sp.transfer((params, self.data.liquidateParams.open_some()), sp.balance, sp.contract(sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TAddress)))))))), self.data.minterContractAddress, entry_point='liquidate').open_some()) # @parameter%liquidate_callback : @storage
                    NIL operation; # list operation : @parameter%liquidate_callback : @storage
                    DIG 2;      # @storage : list operation : @parameter%liquidate_callback
                    DUP;        # @storage : @storage : list operation : @parameter%liquidate_callback
                    DUG 3;      # @storage : list operation : @parameter%liquidate_callback : @storage
                    CADDAR;     # address : list operation : @parameter%liquidate_callback : @storage
                    CONTRACT %liquidate (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))); # option (contract (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))))) : list operation : @parameter%liquidate_callback : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%liquidate_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%liquidate_callback : @storage
                    BALANCE;    # mutez : @some : list operation : @parameter%liquidate_callback : @storage
                    DIG 4;      # @storage : mutez : @some : list operation : @parameter%liquidate_callback
                    DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%liquidate_callback
                    DUG 5;      # @storage : mutez : @some : list operation : @parameter%liquidate_callback : @storage
                    CADAR;      # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : mutez : @some : list operation : @parameter%liquidate_callback : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : mutez : @some : list operation : @parameter%liquidate_callback : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : @some : list operation : @parameter%liquidate_callback : @storage
                    DIG 4;      # @parameter%liquidate_callback : @some : mutez : @some : list operation : @storage
                    PAIR;       # pair @parameter%liquidate_callback @some : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.state = 0 # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PUSH int 0; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    # self.data.liquidateParams = sp.none # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CAR;        # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    CDDR;       # pair (address %minterContractAddress) (address %oracleContractAddress) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    NONE (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))); # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (address %minterContractAddress) (address %oracleContractAddress) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    SWAP;       # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }
              {
                IF_LEFT
                  {
                    DROP;       # @storage
                    # == pause ==
                    # sp.verify(sp.sender == self.data.pauseGuardianContractAddress, message = 9) # @storage
                    DUP;        # @storage : @storage
                    CDADR;      # address : @storage
                    SENDER;     # address : address : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH int 9; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # self.data.paused = True # @storage
                    DUP;        # @storage : @storage
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CDDR;       # pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PUSH bool True; # bool : pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                    NIL operation; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    # == repay ==
                    # sp.transfer(sp.sender, sp.tez(0), sp.contract(sp.TAddress, self.data.ovenRegistryContractAddress, entry_point='isOven').open_some()) # @parameter%repay : @storage
                    NIL operation; # list operation : @parameter%repay : @storage
                    DIG 2;      # @storage : list operation : @parameter%repay
                    DUP;        # @storage : @storage : list operation : @parameter%repay
                    DUG 3;      # @storage : list operation : @parameter%repay : @storage
                    CDAAR;      # address : list operation : @parameter%repay : @storage
                    CONTRACT %isOven address; # option (contract address) : list operation : @parameter%repay : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%repay : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%repay : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%repay : @storage
                    SENDER;     # address : mutez : @some : list operation : @parameter%repay : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%repay : @storage
                    CONS;       # list operation : @parameter%repay : @storage
                    # sp.verify(self.data.paused == False, message = 18) # list operation : @parameter%repay : @storage
                    PUSH bool False; # bool : list operation : @parameter%repay : @storage
                    DIG 3;      # @storage : bool : list operation : @parameter%repay
                    DUP;        # @storage : @storage : bool : list operation : @parameter%repay
                    DUG 4;      # @storage : bool : list operation : @parameter%repay : @storage
                    CDDAR;      # bool : bool : list operation : @parameter%repay : @storage
                    COMPARE;    # int : list operation : @parameter%repay : @storage
                    EQ;         # bool : list operation : @parameter%repay : @storage
                    IF
                      {}
                      {
                        PUSH int 18; # int : list operation : @parameter%repay : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%repay : @storage
                    # sp.verify(self.data.state == 0, message = 12) # list operation : @parameter%repay : @storage
                    PUSH int 0; # int : list operation : @parameter%repay : @storage
                    DIG 3;      # @storage : int : list operation : @parameter%repay
                    DUP;        # @storage : @storage : int : list operation : @parameter%repay
                    DUG 4;      # @storage : int : list operation : @parameter%repay : @storage
                    CDDDAR;     # int : int : list operation : @parameter%repay : @storage
                    COMPARE;    # int : list operation : @parameter%repay : @storage
                    EQ;         # bool : list operation : @parameter%repay : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : list operation : @parameter%repay : @storage
                        FAILWITH;   # FAILED
                      }; # list operation : @parameter%repay : @storage
                    # sp.transfer(params, sp.amount, sp.contract(sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TNat))))))), self.data.minterContractAddress, entry_point='repay').open_some()) # list operation : @parameter%repay : @storage
                    DIG 2;      # @storage : list operation : @parameter%repay
                    DUP;        # @storage : @storage : list operation : @parameter%repay
                    DUG 3;      # @storage : list operation : @parameter%repay : @storage
                    CADDAR;     # address : list operation : @parameter%repay : @storage
                    CONTRACT %repay (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))); # option (contract (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) : list operation : @parameter%repay : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : list operation : @parameter%repay : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%repay : @storage
                    AMOUNT;     # mutez : @some : list operation : @parameter%repay : @storage
                    DIG 3;      # @parameter%repay : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
          }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # == setGovernorContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setGovernorContract
                    DUP;        # @storage : @storage : @parameter%setGovernorContract
                    DUG 2;      # @storage : @parameter%setGovernorContract : @storage
                    CAADR;      # address : @parameter%setGovernorContract : @storage
                    SENDER;     # address : address : @parameter%setGovernorContract : @storage
                    COMPARE;    # int : @parameter%setGovernorContract : @storage
                    EQ;         # bool : @parameter%setGovernorContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setGovernorContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setGovernorContract : @storage
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # self.data.governorContractAddress = params # @storage : @parameter%setGovernorContract
                    DUP;        # @storage : @storage : @parameter%setGovernorContract
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @storage : @parameter%setGovernorContract
                    SWAP;       # @storage : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    CDR;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    CAAR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setGovernorContract
                    DIG 3;      # @parameter%setGovernorContract : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat))))))) : @parameter%setGovernorContract : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%setMinterContract
                    # == setMinterContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setMinterContract
                    DUP;        # @storage : @storage : @parameter%setMinterContract
                    DUG 2;      # @storage : @parameter%setMinterContract : @storage
                    CAADR;      # address : @parameter%setMinterContract : @storage
                    SENDER;     # address : address : @parameter%setMinterContract : @storage
                    COMPARE;    # int : @parameter%setMinterContract : @storage
                    EQ;         # bool : @parameter%setMinterContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setMinterContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setMinterContract : @storage
                    SWAP;       # @storage : @parameter%setMinterContract
                    # self.data.minterContractAddress = params # @storage : @parameter%setMinterContract
                    DUP;        # @storage : @storage : @parameter%setMinterContract
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @storage : @parameter%setMinterContract
                    SWAP;       # @storage : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    CAR;        # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    CDR;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    DUP;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    CAR;        # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    SWAP;       # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    CDDR;       # address : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setMinterContract
                    DIG 4;      # @parameter%setMinterContract : address : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair @parameter%setMinterContract address : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair @parameter%setMinterContract address : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair @parameter%setMinterContract address) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair @parameter%setMinterContract address) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair @parameter%setMinterContract address)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair @parameter%setMinterContract address))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setOracleContract
                    # == setOracleContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setOracleContract
                    DUP;        # @storage : @storage : @parameter%setOracleContract
                    DUG 2;      # @storage : @parameter%setOracleContract : @storage
                    CAADR;      # address : @parameter%setOracleContract : @storage
                    SENDER;     # address : address : @parameter%setOracleContract : @storage
                    COMPARE;    # int : @parameter%setOracleContract : @storage
                    EQ;         # bool : @parameter%setOracleContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setOracleContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setOracleContract : @storage
                    SWAP;       # @storage : @parameter%setOracleContract
                    # self.data.oracleContractAddress = params # @storage : @parameter%setOracleContract
                    DUP;        # @storage : @storage : @parameter%setOracleContract
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @storage : @parameter%setOracleContract
                    SWAP;       # @storage : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    DUP;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    CAR;        # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    CDR;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    DUP;        # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    CAR;        # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    SWAP;       # pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)) : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    CDAR;       # address : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : @parameter%setOracleContract
                    DIG 4;      # @parameter%setOracleContract : address : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # address : @parameter%setOracleContract : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair address @parameter%setOracleContract : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address))))))) : pair address @parameter%setOracleContract : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair address @parameter%setOracleContract) : pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    SWAP;       # pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress) : pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair address @parameter%setOracleContract) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair address @parameter%setOracleContract)) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair address @parameter%setOracleContract))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%setOvenRegistryContract
                    # == setOvenRegistryContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setOvenRegistryContract
                    DUP;        # @storage : @storage : @parameter%setOvenRegistryContract
                    DUG 2;      # @storage : @parameter%setOvenRegistryContract : @storage
                    CAADR;      # address : @parameter%setOvenRegistryContract : @storage
                    SENDER;     # address : address : @parameter%setOvenRegistryContract : @storage
                    COMPARE;    # int : @parameter%setOvenRegistryContract : @storage
                    EQ;         # bool : @parameter%setOvenRegistryContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setOvenRegistryContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setOvenRegistryContract : @storage
                    SWAP;       # @storage : @parameter%setOvenRegistryContract
                    # self.data.ovenRegistryContractAddress = params # @storage : @parameter%setOvenRegistryContract
                    DUP;        # @storage : @storage : @parameter%setOvenRegistryContract
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : @parameter%setOvenRegistryContract
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    CADR;       # address : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setOvenRegistryContract
                    DIG 3;      # @parameter%setOvenRegistryContract : address : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair @parameter%setOvenRegistryContract address : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair (pair @parameter%setOvenRegistryContract address) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair @parameter%setOvenRegistryContract address) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair @parameter%setOvenRegistryContract address) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair address @parameter%setOracleContract))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }; # pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
            NIL operation; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setPauseGuardianContract
                    # == setPauseGuardianContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setPauseGuardianContract
                    DUP;        # @storage : @storage : @parameter%setPauseGuardianContract
                    DUG 2;      # @storage : @parameter%setPauseGuardianContract : @storage
                    CAADR;      # address : @parameter%setPauseGuardianContract : @storage
                    SENDER;     # address : address : @parameter%setPauseGuardianContract : @storage
                    COMPARE;    # int : @parameter%setPauseGuardianContract : @storage
                    EQ;         # bool : @parameter%setPauseGuardianContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setPauseGuardianContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setPauseGuardianContract : @storage
                    SWAP;       # @storage : @parameter%setPauseGuardianContract
                    # self.data.pauseGuardianContractAddress = params # @storage : @parameter%setPauseGuardianContract
                    DUP;        # @storage : @storage : @parameter%setPauseGuardianContract
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : @parameter%setPauseGuardianContract
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    CAAR;       # address : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @parameter%setPauseGuardianContract
                    DIG 3;      # @parameter%setPauseGuardianContract : address : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # address : @parameter%setPauseGuardianContract : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair address @parameter%setPauseGuardianContract : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }
                  {
                    DROP;       # @storage
                    # == unpause ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage
                    DUP;        # @storage : @storage
                    CAADR;      # address : @storage
                    SENDER;     # address : address : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # self.data.paused = False # @storage
                    DUP;        # @storage : @storage
                    CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage
                    SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    CDDR;       # pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PUSH bool False; # bool : pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))
                    SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))
                    PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                NIL operation; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%updateState
                    # == updateState ==
                    # sp.verify(sp.sender == self.data.minterContractAddress, message = 5) # @storage : @parameter%updateState
                    DUP;        # @storage : @storage : @parameter%updateState
                    DUG 2;      # @storage : @parameter%updateState : @storage
                    CADDAR;     # address : @parameter%updateState : @storage
                    SENDER;     # address : address : @parameter%updateState : @storage
                    COMPARE;    # int : @parameter%updateState : @storage
                    EQ;         # bool : @parameter%updateState : @storage
                    IF
                      {}
                      {
                        PUSH int 5; # int : @parameter%updateState : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateState : @storage
                    # sp.transfer(params, sp.amount, sp.contract(sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TBool)))), sp.fst(params), entry_point='updateState').open_some()) # @parameter%updateState : @storage
                    DUP;        # @parameter%updateState : @parameter%updateState : @storage
                    CAR;        # address : @parameter%updateState : @storage
                    CONTRACT %updateState (pair address (pair nat (pair int (pair int bool)))); # option (contract (pair address (pair nat (pair int (pair int bool))))) : @parameter%updateState : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : @parameter%updateState : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%updateState : @storage
                    NIL operation; # list operation : @some : @parameter%updateState : @storage
                    SWAP;       # @some : list operation : @parameter%updateState : @storage
                    AMOUNT;     # mutez : @some : list operation : @parameter%updateState : @storage
                    DIG 3;      # @parameter%updateState : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    IF_LEFT
                      {
                        # == withdraw ==
                        # sp.transfer(sp.sender, sp.tez(0), sp.contract(sp.TAddress, self.data.ovenRegistryContractAddress, entry_point='isOven').open_some()) # @parameter%withdraw : @storage
                        NIL operation; # list operation : @parameter%withdraw : @storage
                        DIG 2;      # @storage : list operation : @parameter%withdraw
                        DUP;        # @storage : @storage : list operation : @parameter%withdraw
                        DUG 3;      # @storage : list operation : @parameter%withdraw : @storage
                        CDAAR;      # address : list operation : @parameter%withdraw : @storage
                        CONTRACT %isOven address; # option (contract address) : list operation : @parameter%withdraw : @storage
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : list operation : @parameter%withdraw : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%withdraw : @storage
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%withdraw : @storage
                        SENDER;     # address : mutez : @some : list operation : @parameter%withdraw : @storage
                        TRANSFER_TOKENS; # operation : list operation : @parameter%withdraw : @storage
                        CONS;       # list operation : @parameter%withdraw : @storage
                        # sp.verify(self.data.state == 0, message = 12) # list operation : @parameter%withdraw : @storage
                        PUSH int 0; # int : list operation : @parameter%withdraw : @storage
                        DIG 3;      # @storage : int : list operation : @parameter%withdraw
                        DUP;        # @storage : @storage : int : list operation : @parameter%withdraw
                        DUG 4;      # @storage : int : list operation : @parameter%withdraw : @storage
                        CDDDAR;     # int : int : list operation : @parameter%withdraw : @storage
                        COMPARE;    # int : list operation : @parameter%withdraw : @storage
                        EQ;         # bool : list operation : @parameter%withdraw : @storage
                        IF
                          {}
                          {
                            PUSH int 12; # int : list operation : @parameter%withdraw : @storage
                            FAILWITH;   # FAILED
                          }; # list operation : @parameter%withdraw : @storage
                        # sp.verify(self.data.paused == False, message = 18) # list operation : @parameter%withdraw : @storage
                        PUSH bool False; # bool : list operation : @parameter%withdraw : @storage
                        DIG 3;      # @storage : bool : list operation : @parameter%withdraw
                        DUP;        # @storage : @storage : bool : list operation : @parameter%withdraw
                        DUG 4;      # @storage : bool : list operation : @parameter%withdraw : @storage
                        CDDAR;      # bool : bool : list operation : @parameter%withdraw : @storage
                        COMPARE;    # int : list operation : @parameter%withdraw : @storage
                        EQ;         # bool : list operation : @parameter%withdraw : @storage
                        IF
                          {}
                          {
                            PUSH int 18; # int : list operation : @parameter%withdraw : @storage
                            FAILWITH;   # FAILED
                          }; # list operation : @parameter%withdraw : @storage
                        # self.data.state = 2 # list operation : @parameter%withdraw : @storage
                        DIG 2;      # @storage : list operation : @parameter%withdraw
                        DUP;        # @storage : @storage : list operation : @parameter%withdraw
                        CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation : @parameter%withdraw
                        SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        PUSH int 2; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation : @parameter%withdraw
                        PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%withdraw
                        # self.data.withdrawParams = sp.some(params) # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%withdraw
                        DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%withdraw
                        CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : @parameter%withdraw
                        SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDR;        # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        DUP;        # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CAR;        # bool : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        SWAP;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        CDAR;       # int : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation : @parameter%withdraw
                        DIG 5;      # @parameter%withdraw : int : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SOME;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : int : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                        PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        # sp.transfer(sp.self_entry_point('withdraw_callback'), sp.tez(0), sp.contract(sp.TContract(sp.TNat), self.data.oracleContractAddress, entry_point='getXtzUsdRate').open_some()) # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        DUG 2;      # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        CADDDR;     # address : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        CONTRACT %getXtzUsdRate (contract nat); # option (contract (contract nat)) : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        SELF %withdraw_callback; # contract nat : mutez : @some : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                        CONS;       # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%withdraw_callback
                        # == withdraw_callback ==
                        # sp.verify(sp.sender == self.data.oracleContractAddress, message = 3) # @storage : @parameter%withdraw_callback
                        DUP;        # @storage : @storage : @parameter%withdraw_callback
                        DUG 2;      # @storage : @parameter%withdraw_callback : @storage
                        CADDDR;     # address : @parameter%withdraw_callback : @storage
                        SENDER;     # address : address : @parameter%withdraw_callback : @storage
                        COMPARE;    # int : @parameter%withdraw_callback : @storage
                        EQ;         # bool : @parameter%withdraw_callback : @storage
                        IF
                          {}
                          {
                            PUSH int 3; # int : @parameter%withdraw_callback : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%withdraw_callback : @storage
                        # sp.verify(self.data.state == 2, message = 12) # @parameter%withdraw_callback : @storage
                        PUSH int 2; # int : @parameter%withdraw_callback : @storage
                        DIG 2;      # @storage : int : @parameter%withdraw_callback
                        DUP;        # @storage : @storage : int : @parameter%withdraw_callback
                        DUG 3;      # @storage : int : @parameter%withdraw_callback : @storage
                        CDDDAR;     # int : int : @parameter%withdraw_callback : @storage
                        COMPARE;    # int : @parameter%withdraw_callback : @storage
                        EQ;         # bool : @parameter%withdraw_callback : @storage
                        IF
                          {}
                          {
                            PUSH int 12; # int : @parameter%withdraw_callback : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%withdraw_callback : @storage
                        # sp.transfer((params, self.data.withdrawParams.open_some()), sp.balance, sp.contract(sp.TPair(sp.TNat, sp.TPair(sp.TAddress, sp.TPair(sp.TAddress, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TBool, sp.TPair(sp.TInt, sp.TPair(sp.TInt, sp.TMutez)))))))), self.data.minterContractAddress, entry_point='withdraw').open_some()) # @parameter%withdraw_callback : @storage
                        NIL operation; # list operation : @parameter%withdraw_callback : @storage
                        DIG 2;      # @storage : list operation : @parameter%withdraw_callback
                        DUP;        # @storage : @storage : list operation : @parameter%withdraw_callback
                        DUG 3;      # @storage : list operation : @parameter%withdraw_callback : @storage
                        CADDAR;     # address : list operation : @parameter%withdraw_callback : @storage
                        CONTRACT %withdraw (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))); # option (contract (pair nat (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : list operation : @parameter%withdraw_callback : @storage
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : list operation : @parameter%withdraw_callback : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%withdraw_callback : @storage
                        BALANCE;    # mutez : @some : list operation : @parameter%withdraw_callback : @storage
                        DIG 4;      # @storage : mutez : @some : list operation : @parameter%withdraw_callback
                        DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%withdraw_callback
                        DUG 5;      # @storage : mutez : @some : list operation : @parameter%withdraw_callback : @storage
                        CDDDDR;     # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : mutez : @some : list operation : @parameter%withdraw_callback : @storage
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : mutez : @some : list operation : @parameter%withdraw_callback : @storage
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : @parameter%withdraw_callback : @storage
                        DIG 4;      # @parameter%withdraw_callback : @some : mutez : @some : list operation : @storage
                        PAIR;       # pair @parameter%withdraw_callback @some : mutez : @some : list operation : @storage
                        TRANSFER_TOKENS; # operation : list operation : @storage
                        CONS;       # list operation : @storage
                        SWAP;       # @storage : list operation
                        # self.data.state = 0 # @storage : list operation
                        DUP;        # @storage : @storage : list operation
                        CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : @storage : list operation
                        SWAP;       # @storage : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDR;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        DUP;        # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CAR;        # bool : pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDDR;       # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PUSH int 0; # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                        PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        # self.data.withdrawParams = sp.none # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        DUP;        # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        CAR;        # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        SWAP;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDR;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        DUP;        # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CAR;        # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDR;        # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        DUP;        # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CAR;        # bool : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        CDAR;       # int : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        NONE (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))); # option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : int : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # int : option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : bool : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # bool : pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress) : pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        PAIR;       # pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : list operation
                        SWAP;       # pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress))) : pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))) : list operation
                        PAIR;       # pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))) : list operation
                        SWAP;       # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                      }; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
                  }; # list operation : @storage
              }; # list operation : pair (pair (pair (option %borrowParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) (address %governorContractAddress)) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair address @parameter%setPauseGuardianContract) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
          }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) @parameter%setGovernorContract) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair (bool %paused) (pair (int %state) (option %withdrawParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
      }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
    NIL operation; # list operation : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
    SWAP;       # list operation : list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
      }; # list operation : pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez)))))))))))
    PAIR;       # pair (list operation) (pair (pair (pair (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int nat)))))))) address) (pair (option %liquidateParams (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int address)))))))) (pair (address %minterContractAddress) (address %oracleContractAddress)))) (pair (pair (address %ovenRegistryContractAddress) (address %pauseGuardianContractAddress)) (pair bool (pair int (option (pair address (pair address (pair nat (pair nat (pair bool (pair int (pair int mutez))))))))))))
  };