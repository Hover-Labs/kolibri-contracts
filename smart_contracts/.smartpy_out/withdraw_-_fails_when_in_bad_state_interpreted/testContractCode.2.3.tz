parameter (or (pair %get string (contract (pair string (pair timestamp nat)))) (or (nat %setNewPrice) (unit %update)));
storage   (pair (string %harbingerAsset) (pair (timestamp %harbingerUpdateTime) (nat %harbingerValue)));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        # == get ==
        # sp.transfer((self.data.harbingerAsset, (self.data.harbingerUpdateTime, self.data.harbingerValue)), sp.tez(0), sp.snd(params)) # @parameter%get : @storage
        CDR;        # contract (pair string (pair timestamp nat)) : @storage
        NIL operation; # list operation : contract (pair string (pair timestamp nat)) : @storage
        SWAP;       # contract (pair string (pair timestamp nat)) : list operation : @storage
        PUSH mutez 0; # mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DIG 3;      # @storage : mutez : contract (pair string (pair timestamp nat)) : list operation
        DUP;        # @storage : @storage : mutez : contract (pair string (pair timestamp nat)) : list operation
        CDDR;       # nat : @storage : mutez : contract (pair string (pair timestamp nat)) : list operation
        SWAP;       # @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation
        DUP;        # @storage : @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation
        DUG 5;      # @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        CDAR;       # timestamp : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        PAIR;       # pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DIG 4;      # @storage : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation
        DUP;        # @storage : @storage : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation
        DUG 5;      # @storage : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        CAR;        # string : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        PAIR;       # pair string (pair timestamp nat) : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        TRANSFER_TOKENS; # operation : list operation : @storage
        CONS;       # list operation : @storage
      }
      {
        IF_LEFT
          {
            SWAP;       # @storage : @parameter%setNewPrice
            # == setNewPrice ==
            # self.data.harbingerValue = params # @storage : @parameter%setNewPrice
            DUP;        # @storage : @storage : @parameter%setNewPrice
            CAR;        # string : @storage : @parameter%setNewPrice
            SWAP;       # @storage : string : @parameter%setNewPrice
            CDAR;       # timestamp : string : @parameter%setNewPrice
            DIG 2;      # @parameter%setNewPrice : timestamp : string
            SWAP;       # timestamp : @parameter%setNewPrice : string
            PAIR;       # pair timestamp @parameter%setNewPrice : string
            SWAP;       # string : pair timestamp @parameter%setNewPrice
            PAIR;       # pair string (pair timestamp @parameter%setNewPrice)
          }
          {
            DROP;       # @storage
            # == update == # @storage
          }; # pair string (pair timestamp @parameter%setNewPrice)
        NIL operation; # list operation : pair string (pair timestamp @parameter%setNewPrice)
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };