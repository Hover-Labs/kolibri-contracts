Storage: sp.TRecord(administrator = sp.TAddress, balances = sp.TBigMap(sp.TAddress, sp.TRecord(approvals = sp.TMap(sp.TAddress, sp.TNat), balance = sp.TNat).layout(("approvals", "balance"))), debtCeiling = sp.TNat, governorContractAddress = sp.TAddress, metadata = sp.TBigMap(sp.TString, sp.TBytes), paused = sp.TBool, token_metadata = sp.TBigMap(sp.TNat, sp.TPair(sp.TNat, sp.TMap(sp.TString, sp.TBytes))), totalSupply = sp.TNat).layout(((("administrator", "balances"), ("debtCeiling", "governorContractAddress")), (("metadata", "paused"), ("token_metadata", "totalSupply"))))
Params: sp.TVariant(approve = sp.TRecord(spender = sp.TAddress, value = sp.TNat).layout(("spender", "value")), burn = sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), getAdministrator = sp.TPair(sp.TUnit, sp.TContract(sp.TAddress)), getAllowance = sp.TPair(sp.TRecord(owner = sp.TAddress, spender = sp.TAddress).layout(("owner", "spender")), sp.TContract(sp.TNat)), getBalance = sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), getTotalSupply = sp.TPair(sp.TUnit, sp.TContract(sp.TNat)), mint = sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), setAdministrator = sp.TAddress, setDebtCeiling = sp.TNat, setGovernorContract = sp.TAddress, setPause = sp.TBool, transfer = sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), updateContractMetadata = sp.TPair(sp.TString, sp.TBytes), updateTokenMetadata = sp.TPair(sp.TNat, sp.TMap(sp.TString, sp.TBytes))).layout(((("approve", ("burn", "getAdministrator")), (("getAllowance", "getBalance"), ("getTotalSupply", "mint"))), (("setAdministrator", ("setDebtCeiling", "setGovernorContract")), (("setPause", "transfer"), ("updateContractMetadata", "updateTokenMetadata")))))
Globals:
Views:
