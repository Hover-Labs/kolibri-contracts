parameter (or (or (or (pair %approve (address %spender) (nat %value)) (or (pair %burn (address %address) (nat %value)) (pair %getAdministrator unit (contract address)))) (or (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (pair %getBalance address (contract nat))) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value))))) (or (or (address %setAdministrator) (or (nat %setDebtCeiling) (address %setGovernorContract))) (or (or (bool %setPause) (pair %transfer (address %from) (pair (address %to) (nat %value)))) (or (pair %updateContractMetadata string bytes) (pair %updateTokenMetadata nat (map string bytes))))));
storage   (pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%approve
                # == approve ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%approve
                DUP;        # @storage : @storage : @parameter%approve
                DUG 2;      # @storage : @parameter%approve : @storage
                CDADR;      # bool : @parameter%approve : @storage
                IF
                  {
                    UNIT;       # unit : @parameter%approve : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%approve : @storage
                # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), message = 23) # @parameter%approve : @storage
                PUSH nat 0; # nat : @parameter%approve : @storage
                DIG 2;      # @storage : nat : @parameter%approve
                DUP;        # @storage : @storage : nat : @parameter%approve
                DUG 3;      # @storage : nat : @parameter%approve : @storage
                CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%approve : @storage
                SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%approve : @storage
                GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%approve : @storage
                IF_SOME
                  {
                    # of_some: Get-item:83 # @some : nat : @parameter%approve : @storage
                  }
                  {
                    UNIT;       # unit : nat : @parameter%approve : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%approve : @storage
                CAR;        # map address nat : nat : @parameter%approve : @storage
                DIG 2;      # @parameter%approve : map address nat : nat : @storage
                DUP;        # @parameter%approve : @parameter%approve : map address nat : nat : @storage
                DUG 3;      # @parameter%approve : map address nat : nat : @parameter%approve : @storage
                CAR;        # address : map address nat : nat : @parameter%approve : @storage
                GET;        # option nat : nat : @parameter%approve : @storage
                IF_SOME
                  {
                    # of_some: Get-item:83 # @some : nat : @parameter%approve : @storage
                  }
                  {
                    PUSH nat 0; # nat : nat : @parameter%approve : @storage
                  }; # @some : nat : @parameter%approve : @storage
                COMPARE;    # int : @parameter%approve : @storage
                EQ;         # bool : @parameter%approve : @storage
                IF
                  {
                    PUSH bool True; # bool : @parameter%approve : @storage
                  }
                  {
                    DUP;        # @parameter%approve : @parameter%approve : @storage
                    CDR;        # nat : @parameter%approve : @storage
                    PUSH nat 0; # nat : nat : @parameter%approve : @storage
                    COMPARE;    # int : @parameter%approve : @storage
                    EQ;         # bool : @parameter%approve : @storage
                  }; # bool : @parameter%approve : @storage
                IF
                  {}
                  {
                    PUSH int 23; # int : @parameter%approve : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%approve : @storage
                SWAP;       # @storage : @parameter%approve
                # self.data.balances[sp.sender].approvals[params.spender] = params.value # @storage : @parameter%approve
                DUP;        # @storage : @storage : @parameter%approve
                CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%approve
                SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                IF_SOME
                  {}
                  {
                    UNIT;       # unit : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                    FAILWITH;   # FAILED
                  }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                SWAP;       # @some : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%approve
                DIG 7;      # @parameter%approve : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                DUP;        # @parameter%approve : @parameter%approve : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                CAR;        # address : @parameter%approve : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SWAP;       # @parameter%approve : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                CDR;        # nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SOME;       # option nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SWAP;       # address : option nat : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                UPDATE;     # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%burn
                    # == burn ==
                    # sp.verify(sp.sender == self.data.administrator, message = 24) # @storage : @parameter%burn
                    DUP;        # @storage : @storage : @parameter%burn
                    DUG 2;      # @storage : @parameter%burn : @storage
                    CAAAR;      # address : @parameter%burn : @storage
                    SENDER;     # address : address : @parameter%burn : @storage
                    COMPARE;    # int : @parameter%burn : @storage
                    EQ;         # bool : @parameter%burn : @storage
                    IF
                      {}
                      {
                        PUSH int 24; # int : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%burn : @storage
                    # sp.verify(self.data.balances[params.address].balance >= params.value, message = 23) # @parameter%burn : @storage
                    DUP;        # @parameter%burn : @parameter%burn : @storage
                    CDR;        # nat : @parameter%burn : @storage
                    DIG 2;      # @storage : nat : @parameter%burn
                    DUP;        # @storage : @storage : nat : @parameter%burn
                    DUG 3;      # @storage : nat : @parameter%burn : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    DIG 2;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                    DUP;        # @parameter%burn : @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                    DUG 3;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:128 # @some : nat : @parameter%burn : @storage
                      }
                      {
                        UNIT;       # unit : nat : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%burn : @storage
                    CDR;        # nat : nat : @parameter%burn : @storage
                    COMPARE;    # int : @parameter%burn : @storage
                    GE;         # bool : @parameter%burn : @storage
                    IF
                      {}
                      {
                        PUSH int 23; # int : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%burn : @storage
                    SWAP;       # @storage : @parameter%burn
                    # self.data.balances[params.address].balance = sp.as_nat(self.data.balances[params.address].balance - params.value) # @storage : @parameter%burn
                    DUP;        # @storage : @storage : @parameter%burn
                    DUG 2;      # @storage : @parameter%burn : @storage
                    DUP;        # @storage : @storage : @parameter%burn : @storage
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%burn : @storage
                    SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DIG 5;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUP;        # @parameter%burn : @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUG 6;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CAR;        # map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DIG 6;      # @parameter%burn : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUP;        # @parameter%burn : @parameter%burn : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUG 7;      # @parameter%burn : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    CDR;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                    DIG 8;      # @storage : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    DIG 8;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%burn : @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 9;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    IF_SOME
                      {
                        # of_some: Get-item:129 # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                      }
                      {
                        UNIT;       # unit : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                        FAILWITH;   # FAILED
                      }; # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    CDR;        # nat : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    SUB;        # int : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    ISNAT;      # option nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                        FAILWITH;   # FAILED
                      }; # @some : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    SWAP;       # map address nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    PAIR;       # pair (map address nat) @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    SOME;       # option (pair (map address nat) @some) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    SWAP;       # address : option (pair (map address nat) @some) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%burn
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn
                    # self.data.totalSupply = sp.as_nat(self.data.totalSupply - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    DUP;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CAR;        # pair (big_map %metadata string bytes) (bool %paused) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    SWAP;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CDAR;       # big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%burn : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    DIG 3;      # @parameter%burn : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CDR;        # nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    DIG 4;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    CDDDR;      # nat : nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SUB;        # int : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    ISNAT;      # option nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                        FAILWITH;   # FAILED
                      }; # @some : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # big_map nat (pair nat (map string bytes)) : @some : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (big_map nat (pair nat (map string bytes))) @some : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (big_map %metadata string bytes) (bool %paused) : pair (big_map nat (pair nat (map string bytes))) @some : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) @some) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) @some)
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) @some))
                    NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) @some))
                  }
                  {
                    SWAP;       # @storage : @parameter%getAdministrator
                    # == getAdministrator ==
                    # sp.result(self.data.administrator) # @storage : @parameter%getAdministrator
                    DUP;        # @storage : @storage : @parameter%getAdministrator
                    DUG 2;      # @storage : @parameter%getAdministrator : @storage
                    CAAAR;      # address : @parameter%getAdministrator : @storage
                    # sp.transfer(__s25.value, sp.tez(0), sp.snd(params)) # address : @parameter%getAdministrator : @storage
                    NIL operation; # list operation : address : @parameter%getAdministrator : @storage
                    DIG 2;      # @parameter%getAdministrator : list operation : address : @storage
                    CDR;        # contract address : list operation : address : @storage
                    PUSH mutez 0; # mutez : contract address : list operation : address : @storage
                    DIG 3;      # address : mutez : contract address : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) @some))
              }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%getAllowance
                    # == getAllowance ==
                    # sp.result(self.data.balances[sp.fst(params).owner].approvals[sp.fst(params).spender]) # @storage : @parameter%getAllowance
                    DUP;        # @storage : @storage : @parameter%getAllowance
                    DUG 2;      # @storage : @parameter%getAllowance : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:97 # @some : @parameter%getAllowance : @storage
                      }
                      {
                        UNIT;       # unit : @parameter%getAllowance : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%getAllowance : @storage
                    CAR;        # map address nat : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : map address nat : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : @storage
                    DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : @storage
                    CADR;       # address : map address nat : @parameter%getAllowance : @storage
                    GET;        # option nat : @parameter%getAllowance : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:97 # @some : @parameter%getAllowance : @storage
                      }
                      {
                        UNIT;       # unit : @parameter%getAllowance : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%getAllowance : @storage
                    # sp.transfer(__s26.value, sp.tez(0), sp.snd(params)) # @some : @parameter%getAllowance : @storage
                    NIL operation; # list operation : @some : @parameter%getAllowance : @storage
                    DIG 2;      # @parameter%getAllowance : list operation : @some : @storage
                    CDR;        # contract nat : list operation : @some : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : @some : @storage
                    DIG 3;      # @some : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%getBalance
                    # == getBalance ==
                    # sp.result(self.data.balances[sp.fst(params)].balance) # @storage : @parameter%getBalance
                    DUP;        # @storage : @storage : @parameter%getBalance
                    DUG 2;      # @storage : @parameter%getBalance : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:93 # @some : @parameter%getBalance : @storage
                      }
                      {
                        UNIT;       # unit : @parameter%getBalance : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%getBalance : @storage
                    CDR;        # nat : @parameter%getBalance : @storage
                    # sp.transfer(__s27.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : @storage
                    NIL operation; # list operation : nat : @parameter%getBalance : @storage
                    DIG 2;      # @parameter%getBalance : list operation : nat : @storage
                    CDR;        # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%getTotalSupply
                    # == getTotalSupply ==
                    # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                    DUP;        # @storage : @storage : @parameter%getTotalSupply
                    DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                    CDDDR;      # nat : @parameter%getTotalSupply : @storage
                    # sp.transfer(__s28.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                    NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                    DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                    CDR;        # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%mint
                    # == mint ==
                    # sp.verify(sp.sender == self.data.administrator, message = 24) # @storage : @parameter%mint
                    DUP;        # @storage : @storage : @parameter%mint
                    DUG 2;      # @storage : @parameter%mint : @storage
                    CAAAR;      # address : @parameter%mint : @storage
                    SENDER;     # address : address : @parameter%mint : @storage
                    COMPARE;    # int : @parameter%mint : @storage
                    EQ;         # bool : @parameter%mint : @storage
                    IF
                      {}
                      {
                        PUSH int 24; # int : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : @storage
                    SWAP;       # @storage : @parameter%mint
                    # if ~ (self.data.balances.contains(params.address)): # @storage : @parameter%mint
                    DUP;        # @storage : @storage : @parameter%mint
                    DUG 2;      # @storage : @parameter%mint : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    MEM;        # bool : @parameter%mint : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%mint
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint
                        DUP;        # @storage : @storage : @parameter%mint
                        CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%mint
                        SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        DIG 4;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        DUG 5;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)); # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        SWAP;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        PAIR;       # pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        PAIR;       # pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        PAIR;       # pair (pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%mint
                        SWAP;       # @parameter%mint : pair (pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }; # @parameter%mint : @storage
                    SWAP;       # @storage : @parameter%mint
                    # self.data.balances[params.address].balance += params.value # @storage : @parameter%mint
                    DUP;        # @storage : @storage : @parameter%mint
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%mint
                    SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DIG 5;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 6;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # map address nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # @some : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CDR;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    DIG 7;      # @parameter%mint : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%mint : @parameter%mint : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 8;      # @parameter%mint : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    CDR;        # nat : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    ADD;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%mint
                    # self.data.totalSupply += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%mint
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%mint
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%mint
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    DUP;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    CAR;        # pair (big_map %metadata string bytes) (bool %paused) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    SWAP;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    CDR;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    DUP;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    CAR;        # big_map nat (pair nat (map string bytes)) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    SWAP;       # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    CDR;        # nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%mint
                    DIG 4;      # @parameter%mint : nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    CDR;        # nat : nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    ADD;        # nat : big_map nat (pair nat (map string bytes)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (big_map nat (pair nat (map string bytes))) nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (big_map %metadata string bytes) (bool %paused) : pair (big_map nat (pair nat (map string bytes))) nat : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # sp.verify(self.data.totalSupply <= self.data.debtCeiling, message = 20) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CADAR;      # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CDDDR;      # nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    COMPARE;    # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    LE;         # bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    IF
                      {}
                      {
                        PUSH int 20; # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                        FAILWITH;   # FAILED
                      }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                    NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # list operation : @storage
              }; # list operation : @storage
          }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%setAdministrator
                # == setAdministrator ==
                # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setAdministrator
                DUP;        # @storage : @storage : @parameter%setAdministrator
                DUG 2;      # @storage : @parameter%setAdministrator : @storage
                CADDR;      # address : @parameter%setAdministrator : @storage
                SENDER;     # address : address : @parameter%setAdministrator : @storage
                COMPARE;    # int : @parameter%setAdministrator : @storage
                EQ;         # bool : @parameter%setAdministrator : @storage
                IF
                  {}
                  {
                    PUSH int 4; # int : @parameter%setAdministrator : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%setAdministrator : @storage
                SWAP;       # @storage : @parameter%setAdministrator
                # self.data.administrator = params # @storage : @parameter%setAdministrator
                DUP;        # @storage : @storage : @parameter%setAdministrator
                CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%setAdministrator
                SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                CADR;       # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                DIG 3;      # @parameter%setAdministrator : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair (pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setDebtCeiling
                    # == setDebtCeiling ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setDebtCeiling
                    DUP;        # @storage : @storage : @parameter%setDebtCeiling
                    DUG 2;      # @storage : @parameter%setDebtCeiling : @storage
                    CADDR;      # address : @parameter%setDebtCeiling : @storage
                    SENDER;     # address : address : @parameter%setDebtCeiling : @storage
                    COMPARE;    # int : @parameter%setDebtCeiling : @storage
                    EQ;         # bool : @parameter%setDebtCeiling : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setDebtCeiling : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setDebtCeiling : @storage
                    SWAP;       # @storage : @parameter%setDebtCeiling
                    # self.data.debtCeiling = params # @storage : @parameter%setDebtCeiling
                    DUP;        # @storage : @storage : @parameter%setDebtCeiling
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%setDebtCeiling
                    SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    CDDR;       # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setDebtCeiling
                    DIG 3;      # @parameter%setDebtCeiling : address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair @parameter%setDebtCeiling address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair @parameter%setDebtCeiling address : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair @parameter%setDebtCeiling address) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair @parameter%setDebtCeiling address)) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                  }
                  {
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # == setGovernorContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%setGovernorContract
                    DUP;        # @storage : @storage : @parameter%setGovernorContract
                    DUG 2;      # @storage : @parameter%setGovernorContract : @storage
                    CADDR;      # address : @parameter%setGovernorContract : @storage
                    SENDER;     # address : address : @parameter%setGovernorContract : @storage
                    COMPARE;    # int : @parameter%setGovernorContract : @storage
                    EQ;         # bool : @parameter%setGovernorContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setGovernorContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setGovernorContract : @storage
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # self.data.governorContractAddress = params # @storage : @parameter%setGovernorContract
                    DUP;        # @storage : @storage : @parameter%setGovernorContract
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%setGovernorContract
                    SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    CDAR;       # nat : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%setGovernorContract
                    DIG 3;      # @parameter%setGovernorContract : nat : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    SWAP;       # nat : @parameter%setGovernorContract : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair nat @parameter%setGovernorContract : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair nat @parameter%setGovernorContract : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair nat @parameter%setGovernorContract) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair nat @parameter%setGovernorContract)) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                  }; # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair @parameter%setDebtCeiling address)) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
              }; # pair (pair (pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setPause
                    # == setPause ==
                    # sp.verify(sp.sender == self.data.administrator, message = 24) # @storage : @parameter%setPause
                    DUP;        # @storage : @storage : @parameter%setPause
                    DUG 2;      # @storage : @parameter%setPause : @storage
                    CAAAR;      # address : @parameter%setPause : @storage
                    SENDER;     # address : address : @parameter%setPause : @storage
                    COMPARE;    # int : @parameter%setPause : @storage
                    EQ;         # bool : @parameter%setPause : @storage
                    IF
                      {}
                      {
                        PUSH int 24; # int : @parameter%setPause : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setPause : @storage
                    SWAP;       # @storage : @parameter%setPause
                    # self.data.paused = params # @storage : @parameter%setPause
                    DUP;        # @storage : @storage : @parameter%setPause
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @storage : @parameter%setPause
                    SWAP;       # @storage : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    DUP;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    CDR;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    SWAP;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    CAAR;       # big_map string bytes : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%setPause
                    DIG 3;      # @parameter%setPause : big_map string bytes : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # big_map string bytes : @parameter%setPause : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (big_map string bytes) @parameter%setPause : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (pair (big_map string bytes) @parameter%setPause) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map string bytes) @parameter%setPause) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map string bytes) @parameter%setPause) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                  }
                  {
                    SWAP;       # @storage : @parameter%transfer
                    # == transfer ==
                    # sp.verify((sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value))), message = 22) # @storage : @parameter%transfer
                    DUP;        # @storage : @storage : @parameter%transfer
                    DUG 2;      # @storage : @parameter%transfer : @storage
                    CAAAR;      # address : @parameter%transfer : @storage
                    SENDER;     # address : address : @parameter%transfer : @storage
                    COMPARE;    # int : @parameter%transfer : @storage
                    EQ;         # bool : @parameter%transfer : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%transfer : @storage
                      }
                      {
                        SWAP;       # @storage : @parameter%transfer
                        DUP;        # @storage : @storage : @parameter%transfer
                        DUG 2;      # @storage : @parameter%transfer : @storage
                        CDADR;      # bool : @parameter%transfer : @storage
                        IF
                          {
                            PUSH bool False; # bool : @parameter%transfer : @storage
                          }
                          {
                            DUP;        # @parameter%transfer : @parameter%transfer : @storage
                            CAR;        # address : @parameter%transfer : @storage
                            SENDER;     # address : address : @parameter%transfer : @storage
                            COMPARE;    # int : @parameter%transfer : @storage
                            EQ;         # bool : @parameter%transfer : @storage
                            IF
                              {
                                PUSH bool True; # bool : @parameter%transfer : @storage
                              }
                              {
                                DUP;        # @parameter%transfer : @parameter%transfer : @storage
                                CDDR;       # nat : @parameter%transfer : @storage
                                DIG 2;      # @storage : nat : @parameter%transfer
                                DUP;        # @storage : @storage : nat : @parameter%transfer
                                DUG 3;      # @storage : nat : @parameter%transfer : @storage
                                CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                DIG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                                DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                                DUG 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                IF_SOME
                                  {
                                    # of_some: Get-item:71 # @some : nat : @parameter%transfer : @storage
                                  }
                                  {
                                    UNIT;       # unit : nat : @parameter%transfer : @storage
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : @parameter%transfer : @storage
                                CAR;        # map address nat : nat : @parameter%transfer : @storage
                                SENDER;     # address : map address nat : nat : @parameter%transfer : @storage
                                GET;        # option nat : nat : @parameter%transfer : @storage
                                IF_SOME
                                  {
                                    # of_some: Get-item:71 # @some : nat : @parameter%transfer : @storage
                                  }
                                  {
                                    UNIT;       # unit : nat : @parameter%transfer : @storage
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : @parameter%transfer : @storage
                                COMPARE;    # int : @parameter%transfer : @storage
                                GE;         # bool : @parameter%transfer : @storage
                              }; # bool : @parameter%transfer : @storage
                          }; # bool : @parameter%transfer : @storage
                      }; # bool : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH int 22; # int : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : @storage
                    SWAP;       # @storage : @parameter%transfer
                    # if ~ (self.data.balances.contains(params.to_)): # @storage : @parameter%transfer
                    DUP;        # @storage : @storage : @parameter%transfer
                    DUG 2;      # @storage : @parameter%transfer : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                    SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                    CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                    MEM;        # bool : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%transfer
                        # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer
                        DUP;        # @storage : @storage : @parameter%transfer
                        CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%transfer
                        SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        DIG 4;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        DUG 5;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)); # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        SWAP;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        PAIR;       # pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        PAIR;       # pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        PAIR;       # pair (pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        SWAP;       # @parameter%transfer : pair (pair (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }; # @parameter%transfer : @storage
                    # sp.verify(self.data.balances[params.from_].balance >= params.value, message = 23) # @parameter%transfer : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : @storage
                    CDDR;       # nat : @parameter%transfer : @storage
                    DIG 2;      # @storage : nat : @parameter%transfer
                    DUP;        # @storage : @storage : nat : @parameter%transfer
                    DUG 3;      # @storage : nat : @parameter%transfer : @storage
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    DIG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                    DUG 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:73 # @some : nat : @parameter%transfer : @storage
                      }
                      {
                        UNIT;       # unit : nat : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%transfer : @storage
                    CDR;        # nat : nat : @parameter%transfer : @storage
                    COMPARE;    # int : @parameter%transfer : @storage
                    GE;         # bool : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH int 23; # int : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : @storage
                    SWAP;       # @storage : @parameter%transfer
                    # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # @storage : @parameter%transfer
                    DUP;        # @storage : @storage : @parameter%transfer
                    DUG 2;      # @storage : @parameter%transfer : @storage
                    DUP;        # @storage : @storage : @parameter%transfer : @storage
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage : @parameter%transfer : @storage
                    SWAP;       # @storage : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DUP;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CAR;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DUP;        # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CAR;        # address : pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    SWAP;       # pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance))) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DIG 5;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUG 6;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CAR;        # map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DIG 6;      # @parameter%transfer : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @storage
                    DUG 7;      # @parameter%transfer : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    CDDR;       # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : @storage
                    DIG 8;      # @storage : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAADR;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DIG 8;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 9;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    IF_SOME
                      {
                        # of_some: Get-item:74 # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                      }
                      {
                        UNIT;       # unit : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        FAILWITH;   # FAILED
                      }; # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDR;        # nat : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SUB;        # int : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    ISNAT;      # option nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        FAILWITH;   # FAILED
                      }; # @some : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # map address nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (map address nat) @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SOME;       # option (pair (map address nat) @some) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : option (pair (map address nat) @some) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                    # self.data.balances[params.to_].balance += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP;        # pair address (big_map address (pair (map address nat) nat)) : pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # address : pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDR;        # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DIG 5;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDAR;       # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # @some : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDR;        # nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DIG 7;      # @parameter%transfer : nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUP;        # @parameter%transfer : @parameter%transfer : nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    DUG 8;      # @parameter%transfer : nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CDDR;       # nat : nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    ADD;        # nat : map address nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                    SWAP;       # @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    # if (params.from_ != sp.sender) & (~ (sp.sender == self.data.administrator)): # @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    DUP;        # @parameter%transfer : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    CAR;        # address : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    SENDER;     # address : address : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    COMPARE;    # int : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    NEQ;        # bool : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAAAR;      # address : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SENDER;     # address : address : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        COMPARE;    # int : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        NEQ;        # bool : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }
                      {
                        PUSH bool False; # bool : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }; # bool : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CDR;        # pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # pair address (big_map address (pair (map address nat) nat)) : pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAR;        # address : pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CDR;        # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DIG 5;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUG 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SWAP;       # @some : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CAR;        # map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        SENDER;     # address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DIG 8;      # @parameter%transfer : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUP;        # @parameter%transfer : @parameter%transfer : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DUG 9;      # @parameter%transfer : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        CDDR;       # nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                        DIG 10;     # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))) : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        CAADR;      # big_map address (pair (map address nat) nat) : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : @parameter%transfer
                        DIG 10;     # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        GET;        # option (pair (map address nat) nat) : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        IF_SOME
                          {
                            # of_some: Get-item:77 # @some : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                          }
                          {
                            UNIT;       # unit : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                            FAILWITH;   # FAILED
                          }; # @some : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        CAR;        # map address nat : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SENDER;     # address : map address nat : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        GET;        # option nat : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        IF_SOME
                          {
                            # of_some: Get-item:77 # @some : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                          }
                          {
                            UNIT;       # unit : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                            FAILWITH;   # FAILED
                          }; # @some : nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SUB;        # int : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        ISNAT;      # option nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                            FAILWITH;   # FAILED
                          }; # @some : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SOME;       # option nat : address : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SWAP;       # address : option nat : map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        UPDATE;     # map address nat : nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        PAIR;       # pair (map address nat) nat : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (nat %debtCeiling) (address %governorContractAddress) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }
                      {
                        DROP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                      }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                  }; # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map string bytes) @parameter%setPause) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%updateContractMetadata
                    # == updateContractMetadata ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%updateContractMetadata
                    DUP;        # @storage : @storage : @parameter%updateContractMetadata
                    DUG 2;      # @storage : @parameter%updateContractMetadata : @storage
                    CADDR;      # address : @parameter%updateContractMetadata : @storage
                    SENDER;     # address : address : @parameter%updateContractMetadata : @storage
                    COMPARE;    # int : @parameter%updateContractMetadata : @storage
                    EQ;         # bool : @parameter%updateContractMetadata : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%updateContractMetadata : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateContractMetadata : @storage
                    SWAP;       # @storage : @parameter%updateContractMetadata
                    # self.data.metadata[sp.fst(params)] = sp.snd(params) # @storage : @parameter%updateContractMetadata
                    DUP;        # @storage : @storage : @parameter%updateContractMetadata
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @storage : @parameter%updateContractMetadata
                    SWAP;       # @storage : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    DUP;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    CDR;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    SWAP;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    CAR;        # pair (big_map %metadata string bytes) (bool %paused) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    DUP;        # pair (big_map %metadata string bytes) (bool %paused) : pair (big_map %metadata string bytes) (bool %paused) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    CDR;        # bool : pair (big_map %metadata string bytes) (bool %paused) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    SWAP;       # pair (big_map %metadata string bytes) (bool %paused) : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    CAR;        # big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateContractMetadata
                    DIG 4;      # @parameter%updateContractMetadata : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    DUP;        # @parameter%updateContractMetadata : @parameter%updateContractMetadata : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    CAR;        # string : @parameter%updateContractMetadata : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # @parameter%updateContractMetadata : string : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    CDR;        # bytes : string : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SOME;       # option bytes : string : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # string : option bytes : big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    UPDATE;     # big_map string bytes : bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (big_map string bytes) bool : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
                  }
                  {
                    SWAP;       # @storage : @parameter%updateTokenMetadata
                    # == updateTokenMetadata ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, message = 4) # @storage : @parameter%updateTokenMetadata
                    DUP;        # @storage : @storage : @parameter%updateTokenMetadata
                    DUG 2;      # @storage : @parameter%updateTokenMetadata : @storage
                    CADDR;      # address : @parameter%updateTokenMetadata : @storage
                    SENDER;     # address : address : @parameter%updateTokenMetadata : @storage
                    COMPARE;    # int : @parameter%updateTokenMetadata : @storage
                    EQ;         # bool : @parameter%updateTokenMetadata : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%updateTokenMetadata : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateTokenMetadata : @storage
                    SWAP;       # @storage : @parameter%updateTokenMetadata
                    # self.data.token_metadata[0] = params # @storage : @parameter%updateTokenMetadata
                    DUP;        # @storage : @storage : @parameter%updateTokenMetadata
                    CAR;        # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @storage : @parameter%updateTokenMetadata
                    SWAP;       # @storage : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    CDR;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    DUP;        # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    CAR;        # pair (big_map %metadata string bytes) (bool %paused) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    SWAP;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    CDR;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    DUP;        # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    CDR;        # nat : pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    SWAP;       # pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    CAR;        # big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    PUSH nat 0; # nat : big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : @parameter%updateTokenMetadata
                    DIG 5;      # @parameter%updateTokenMetadata : nat : big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SOME;       # option (pair nat (map string bytes)) : nat : big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # nat : option (pair nat (map string bytes)) : big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    UPDATE;     # big_map nat (pair nat (map string bytes)) : nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (big_map nat (pair nat (map string bytes))) nat : pair (big_map %metadata string bytes) (bool %paused) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (big_map %metadata string bytes) (bool %paused) : pair (big_map nat (pair nat (map string bytes))) nat : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    PAIR;       # pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))
                    SWAP;       # pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress)) : pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat)
                    PAIR;       # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
              }; # pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map string bytes) @parameter%setPause) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
          }; # pair (pair (pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
        NIL operation; # list operation : pair (pair (pair @parameter%setAdministrator (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
      }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply)))
    PAIR;       # pair (list operation) (pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair (nat %debtCeiling) (address %governorContractAddress))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (big_map %token_metadata nat (pair nat (map string bytes))) (nat %totalSupply))))
  };