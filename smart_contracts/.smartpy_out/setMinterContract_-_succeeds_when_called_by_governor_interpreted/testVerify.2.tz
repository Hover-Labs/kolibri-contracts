parameter (pair (pair (address %governorContractAddress) (pair (option %initialDelegate key_hash) (option %makeOvenOwner address))) (pair (pair (address %minterContractAddress) (address %ovenProxyContractAddress)) (pair (address %ovenRegistryContractAddress) (int %state))));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == verify ==
    # sp.verify(params.k1.minterContractAddress == sp.address('tz1UMCB2AHSTwG7YcGNr31CqYCtGN873royv')) # @parameter : @storage
    CDAAR;      # address : @storage
    PUSH address "tz1UMCB2AHSTwG7YcGNr31CqYCtGN873royv"; # address : address : @storage
    COMPARE;    # int : @storage
    EQ;         # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: params.k1.minterContractAddress == sp.address('tz1UMCB2AHSTwG7YcGNr31CqYCtGN873royv')"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };