parameter (or (or (or (or (nat %UNSAFE_redeem) (pair %approve (address %spender) (nat %value))) (or (pair %burn (address %address) (nat %value)) (nat %deposit))) (or (or (nat %deposit_callback) (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))) (or (pair %getBalance address (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (unit %manuallyAccrueInterest))))) (or (or (or (pair %mint (address %address) (nat %value)) (nat %redeem)) (or (nat %redeem_callback) (or (address %rescueXTZ) (pair %setContractMetadata string bytes)))) (or (or (address %setGovernorContract) (nat %setInterestRate)) (or (address %setStabilityFundContract) (or (pair %setTokenMetadata (nat %token_id) (map %token_info string bytes)) (pair %transfer (address %from) (pair (address %to) (nat %value))))))));
storage   (pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))));
code
  {
    # Global variable: accrueInterest # pair @parameter @storage
    LAMBDA
      (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
      (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
      {
        # __operations__ = sp.local("__operations__", sp.list([]), sp.TList(sp.TOperation)) # pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))
        NIL operation; # list operation : pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))
        SWAP;       # pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))) : list operation
        # __storage__ = sp.local("__storage__", _x0.in_storage, sp.TRecord(balances = sp.TBigMap(sp.TAddress, sp.TRecord(approvals = sp.TMap(sp.TAddress, sp.TNat), balance = sp.TNat).layout(("approvals", "balance"))), governorContractAddress = sp.TAddress, interestRate = sp.TNat, lastInterestCompoundTime = sp.TTimestamp, metadata = sp.TBigMap(sp.TString, sp.TBytes), savedState_depositor = sp.TOption(sp.TAddress), savedState_redeemer = sp.TOption(sp.TAddress), savedState_tokensToDeposit = sp.TOption(sp.TNat), savedState_tokensToRedeem = sp.TOption(sp.TNat), stabilityFundContractAddress = sp.TAddress, state = sp.TIntOrNat, tokenContractAddress = sp.TAddress, token_metadata = sp.TBigMap(sp.TNat, sp.TRecord(token_id = sp.TNat, token_info = sp.TMap(sp.TString, sp.TBytes)).layout(("token_id", "token_info"))), totalSupply = sp.TNat, underlyingBalance = sp.TNat).layout(((("balances", ("governorContractAddress", "interestRate")), (("lastInterestCompoundTime", "metadata"), ("savedState_depositor", "savedState_redeemer"))), ((("savedState_tokensToDeposit", "savedState_tokensToRedeem"), ("stabilityFundContractAddress", "state")), (("tokenContractAddress", "token_metadata"), ("totalSupply", "underlyingBalance")))))) # pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))) : list operation
        CDR;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        # numPeriods = sp.local("numPeriods", sp.as_nat(sp.now - self.data.lastInterestCompoundTime) // 60) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        GET 3;      # pair timestamp (big_map string bytes) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        CAR;        # timestamp : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        PUSH nat 60; # nat : timestamp : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        SWAP;       # timestamp : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        NOW;        # @now : timestamp : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        SUB;        # int : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        ISNAT;      # option nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        IF_NONE
          {
            UNIT;       # unit : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
            FAILWITH;   # FAILED
          }
          {}; # @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        EDIV;       # option (pair nat nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        IF_NONE
          {
            UNIT;       # unit : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
            FAILWITH;   # FAILED
          }
          {
            CAR;        # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
          }; # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        # self.data.lastInterestCompoundTime = sp.add_seconds(self.data.lastInterestCompoundTime, sp.to_int(numPeriods.value * 60)) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        SWAP;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        UNPAIR;     # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        CDR;        # big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DIG 5;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        GET 3;      # pair timestamp (big_map string bytes) : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        CAR;        # timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        PUSH nat 60; # nat : timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        DUP 7;      # nat : nat : timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        MUL;        # nat : timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        INT;        # int : timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        ADD;        # timestamp : big_map string bytes : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        PAIR;       # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        PAIR;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        SWAP;       # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : nat : list operation
        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        # accruedInterest = sp.local("accruedInterest", sp.as_nat(((self.data.underlyingBalance * (1000000000000000000 + (numPeriods.value * self.data.interestRate))) // 1000000000000000000) - self.data.underlyingBalance)) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : list operation
        DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        GET 8;      # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        PUSH nat 1000000000000000000; # nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DUP 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        CAR;        # pair (big_map address (pair (map address nat) nat)) (pair address nat) : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        GET 4;      # nat : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DIG 3;      # nat : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        MUL;        # nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        PUSH nat 1000000000000000000; # nat : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        ADD;        # nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DUP 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        GET 8;      # nat : nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        MUL;        # nat : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        EDIV;       # option (pair nat nat) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        IF_NONE
          {
            UNIT;       # unit : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
            FAILWITH;   # FAILED
          }
          {
            CAR;        # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
          }; # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        SUB;        # int : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        ISNAT;      # option nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        IF_NONE
          {
            UNIT;       # unit : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
            FAILWITH;   # FAILED
          }
          {}; # @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        # sp.transfer(accruedInterest.value, sp.tez(0), sp.contract(sp.TNat, self.data.stabilityFundContractAddress, entry_point='accrueInterest').open_some()) # @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
        DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @some
        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @some
        DUG 3;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        GET 3;      # pair (pair (option nat) (option nat)) (pair address int) : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        GET 3;      # address : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        CONTRACT %accrueInterest nat; # option (contract nat) : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        IF_NONE
          {
            UNIT;       # unit : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
            FAILWITH;   # FAILED
          }
          {}; # @some : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        PUSH mutez 0; # mutez : @some : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        DUP 4;      # @some : mutez : @some : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        TRANSFER_TOKENS; # operation : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        CONS;       # list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        # sp.result(accruedInterest.value)
        # sp.result(sp.record(operations = sp.operations(), result = __s624.value, storage = self.data)) # list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
        PAIR 3;     # pair (list operation) (pair @some (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
      }; # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : pair @parameter @storage
    SWAP;       # pair @parameter @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
    UNPAIR;     # @parameter : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%UNSAFE_redeem : @storage
                    DROP;       # @parameter%UNSAFE_redeem : @storage
                    # == UNSAFE_redeem ==
                    # sp.verify(self.data.state == 0, 12) # @parameter%UNSAFE_redeem : @storage
                    PUSH int 0; # int : @parameter%UNSAFE_redeem : @storage
                    DUP 3;      # @storage : int : @parameter%UNSAFE_redeem : @storage
                    GET 3;      # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : int : @parameter%UNSAFE_redeem : @storage
                    GET 4;      # int : int : @parameter%UNSAFE_redeem : @storage
                    COMPARE;    # int : @parameter%UNSAFE_redeem : @storage
                    EQ;         # bool : @parameter%UNSAFE_redeem : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%UNSAFE_redeem : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%UNSAFE_redeem : @storage
                    SWAP;       # @storage : @parameter%UNSAFE_redeem
                    # fractionOfPoolOwnership = sp.local("fractionOfPoolOwnership", (params * 1000000000000000000) // self.data.totalSupply) # @storage : @parameter%UNSAFE_redeem
                    DUP;        # @storage : @storage : @parameter%UNSAFE_redeem
                    DUG 2;      # @storage : @parameter%UNSAFE_redeem : @storage
                    GET 7;      # nat : @parameter%UNSAFE_redeem : @storage
                    PUSH nat 1000000000000000000; # nat : nat : @parameter%UNSAFE_redeem : @storage
                    DUP 3;      # @parameter%UNSAFE_redeem : nat : nat : @parameter%UNSAFE_redeem : @storage
                    MUL;        # nat : nat : @parameter%UNSAFE_redeem : @storage
                    EDIV;       # option (pair nat nat) : @parameter%UNSAFE_redeem : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : @parameter%UNSAFE_redeem : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @parameter%UNSAFE_redeem : @storage
                      }; # nat : @parameter%UNSAFE_redeem : @storage
                    # tokensToReceive = sp.local("tokensToReceive", (fractionOfPoolOwnership.value * self.data.underlyingBalance) // 1000000000000000000) # nat : @parameter%UNSAFE_redeem : @storage
                    PUSH nat 1000000000000000000; # nat : nat : @parameter%UNSAFE_redeem : @storage
                    DUP 4;      # @storage : nat : nat : @parameter%UNSAFE_redeem : @storage
                    GET 8;      # nat : nat : nat : @parameter%UNSAFE_redeem : @storage
                    DIG 2;      # nat : nat : nat : @parameter%UNSAFE_redeem : @storage
                    MUL;        # nat : nat : @parameter%UNSAFE_redeem : @storage
                    EDIV;       # option (pair nat nat) : @parameter%UNSAFE_redeem : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : @parameter%UNSAFE_redeem : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @parameter%UNSAFE_redeem : @storage
                      }; # nat : @parameter%UNSAFE_redeem : @storage
                    # self.data.underlyingBalance = sp.as_nat(self.data.underlyingBalance - tokensToReceive.value) # nat : @parameter%UNSAFE_redeem : @storage
                    DUP 3;      # @storage : nat : @parameter%UNSAFE_redeem : @storage
                    SWAP;       # nat : @storage : @parameter%UNSAFE_redeem : @storage
                    DUP;        # nat : nat : @storage : @parameter%UNSAFE_redeem : @storage
                    DUG 2;      # nat : @storage : nat : @parameter%UNSAFE_redeem : @storage
                    DIG 4;      # @storage : nat : @storage : nat : @parameter%UNSAFE_redeem
                    GET 8;      # nat : nat : @storage : nat : @parameter%UNSAFE_redeem
                    SUB;        # int : @storage : nat : @parameter%UNSAFE_redeem
                    ISNAT;      # option nat : @storage : nat : @parameter%UNSAFE_redeem
                    IF_NONE
                      {
                        UNIT;       # unit : @storage : nat : @parameter%UNSAFE_redeem
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @storage : nat : @parameter%UNSAFE_redeem
                    UPDATE 8;   # @storage : nat : @parameter%UNSAFE_redeem
                    DUG 2;      # nat : @parameter%UNSAFE_redeem : @storage
                    # sp.transfer(sp.record(address = sp.sender, value = params), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), sp.self_address, entry_point='burn').open_some()) # nat : @parameter%UNSAFE_redeem : @storage
                    NIL operation; # list operation : nat : @parameter%UNSAFE_redeem : @storage
                    SELF_ADDRESS; # @self : list operation : nat : @parameter%UNSAFE_redeem : @storage
                    CONTRACT %burn (pair address nat); # option (contract (pair address nat)) : list operation : nat : @parameter%UNSAFE_redeem : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : nat : @parameter%UNSAFE_redeem : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : nat : @parameter%UNSAFE_redeem : @storage
                    PUSH mutez 0; # mutez : @some : list operation : nat : @parameter%UNSAFE_redeem : @storage
                    DIG 4;      # @parameter%UNSAFE_redeem : mutez : @some : list operation : nat : @storage
                    SENDER;     # @sender : @parameter%UNSAFE_redeem : mutez : @some : list operation : nat : @storage
                    PAIR;       # pair @sender @parameter%UNSAFE_redeem : mutez : @some : list operation : nat : @storage
                    TRANSFER_TOKENS; # operation : list operation : nat : @storage
                    CONS;       # list operation : nat : @storage
                    # sp.transfer(sp.record(from_ = sp.self_address, to_ = sp.sender, value = tokensToReceive.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.tokenContractAddress, entry_point='transfer').open_some()) # list operation : nat : @storage
                    DUP 3;      # @storage : list operation : nat : @storage
                    GET 5;      # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : list operation : nat : @storage
                    CAR;        # address : list operation : nat : @storage
                    CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : nat : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : nat : @storage
                    PUSH mutez 0; # mutez : @some : list operation : nat : @storage
                    DIG 3;      # nat : mutez : @some : list operation : @storage
                    SENDER;     # @sender : nat : mutez : @some : list operation : @storage
                    SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : @storage
                    PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%approve : @storage
                    DROP;       # @parameter%approve : @storage
                    SWAP;       # @storage : @parameter%approve
                    # == approve ==
                    # if ~ (self.data.balances.contains(sp.sender)): # @storage : @parameter%approve
                    DUP;        # @storage : @storage : @parameter%approve
                    DUG 2;      # @storage : @parameter%approve : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%approve : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%approve : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                    SENDER;     # @sender : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                    MEM;        # bool : @parameter%approve : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%approve
                        # self.data.balances[sp.sender] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%approve
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%approve
                        SWAP;       # @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    # sp.verify(~ False)
                    # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'UnsafeAllowanceChange') # @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PUSH nat 0; # nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP 3;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET;        # option (pair (map address nat) nat) : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:52 # @some : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @some : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # map address nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP 3;      # @parameter%approve : map address nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # address : map address nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET;        # option nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }
                      {
                        # of_some: Get-item:52 # @some : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    COMPARE;    # int : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    EQ;         # bool : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF
                      {
                        PUSH bool True; # bool : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }
                      {
                        DUP;        # @parameter%approve : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CDR;        # nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        PUSH nat 0; # nat : nat : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        COMPARE;    # int : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        EQ;         # bool : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # bool : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF
                      {}
                      {
                        PUSH string "UnsafeAllowanceChange"; # string : @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }; # @parameter%approve : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%approve
                    # self.data.balances[sp.sender].approvals[params.spender] = params.value # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%approve
                    UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    UNPAIR;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    IF_NONE
                      {
                        UNIT;       # unit : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DUP 8;      # @parameter%approve : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%approve
                    DIG 8;      # @parameter%approve : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%burn : @storage
                    DROP;       # @parameter%burn : @storage
                    # == burn ==
                    # sp.verify(False | (sp.sender == sp.self_address)) # @parameter%burn : @storage
                    SELF_ADDRESS; # @self : @parameter%burn : @storage
                    SENDER;     # @sender : @self : @parameter%burn : @storage
                    COMPARE;    # int : @parameter%burn : @storage
                    EQ;         # bool : @parameter%burn : @storage
                    IF
                      {}
                      {
                        UNIT;       # unit : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%burn : @storage
                    # sp.verify(self.data.balances[params.address].balance >= params.value) # @parameter%burn : @storage
                    DUP;        # @parameter%burn : @parameter%burn : @storage
                    CDR;        # nat : @parameter%burn : @storage
                    DUP 3;      # @storage : nat : @parameter%burn : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @parameter%burn : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @parameter%burn : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    DUP 3;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : nat : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:99 # @some : nat : @parameter%burn : @storage
                      }; # @some : nat : @parameter%burn : @storage
                    CDR;        # nat : nat : @parameter%burn : @storage
                    COMPARE;    # int : @parameter%burn : @storage
                    GE;         # bool : @parameter%burn : @storage
                    IF
                      {}
                      {
                        UNIT;       # unit : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%burn : @storage
                    SWAP;       # @storage : @parameter%burn
                    # self.data.balances[params.address].balance = sp.as_nat(self.data.balances[params.address].balance - params.value) # @storage : @parameter%burn
                    DUP;        # @storage : @storage : @parameter%burn
                    DUG 2;      # @storage : @parameter%burn : @storage
                    UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DUP 6;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    IF_NONE
                      {
                        UNIT;       # unit : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DUP 7;      # @parameter%burn : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn : @storage
                    DIG 8;      # @storage : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    DUP 9;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    IF_NONE
                      {
                        UNIT;       # unit : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:100 # @some : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                      }; # @some : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    CDR;        # nat : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    SUB;        # int : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    ISNAT;      # option nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    IF_NONE
                      {
                        UNIT;       # unit : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    UPDATE 2;   # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    SOME;       # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    PAIR;       # pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    PAIR;       # pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%burn
                    PAIR;       # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%burn
                    # self.data.totalSupply = sp.as_nat(self.data.totalSupply - params.value) # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%burn
                    DUP;        # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%burn
                    DUG 2;      # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%burn : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @parameter%burn : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # nat : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DIG 2;      # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : nat : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET 7;      # nat : nat : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SUB;        # int : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    ISNAT;      # option nat : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    UPDATE 7;   # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%deposit : @storage
                    DROP;       # @parameter%deposit : @storage
                    # == deposit ==
                    # sp.verify(self.data.state == 0, 12) # @parameter%deposit : @storage
                    PUSH int 0; # int : @parameter%deposit : @storage
                    DUP 3;      # @storage : int : @parameter%deposit : @storage
                    GET 3;      # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : int : @parameter%deposit : @storage
                    GET 4;      # int : int : @parameter%deposit : @storage
                    COMPARE;    # int : @parameter%deposit : @storage
                    EQ;         # bool : @parameter%deposit : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%deposit : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%deposit : @storage
                    SWAP;       # @storage : @parameter%deposit
                    # self.data.state = 3 # @storage : @parameter%deposit
                    UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%deposit
                    SWAP;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    UNPAIR;     # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    UNPAIR;     # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (address %stabilityFundContractAddress) (int %state) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    SWAP;       # pair (address %stabilityFundContractAddress) (int %state) : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    CAR;        # address : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    PUSH int 3; # int : address : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    SWAP;       # address : int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    PAIR;       # pair address int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    SWAP;       # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    # self.data.savedState_tokensToDeposit = sp.some(params) # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    CDR;        # option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%deposit
                    DIG 4;      # @parameter%deposit : option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SOME;       # option nat : option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (option nat) (option nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (option nat) (option nat)) (pair address int) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SWAP;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    # self.data.savedState_depositor = sp.some(sp.sender) # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UNPAIR;     # pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    CDR;        # option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SENDER;     # @sender : option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SOME;       # option address : option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (option address) (option address) : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (option address) (option address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    # sp.transfer((sp.self_address, sp.self_entry_point('deposit_callback')), sp.tez(0), sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), self.data.tokenContractAddress, entry_point='getBalance').open_some()) # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP;        # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET 5;      # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # address : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONTRACT %getBalance (pair address (contract nat)); # option (contract (pair address (contract nat))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : @some : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SELF %deposit_callback; # @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SELF_ADDRESS; # @self : @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PAIR;       # pair @self @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONS;       # list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # list operation : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
              }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # == deposit_callback ==
                    # sp.verify(sp.sender == self.data.tokenContractAddress, 28) # @storage : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # @storage : @storage : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # @storage : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 5;      # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # address : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    SENDER;     # @sender : address : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EQ;         # bool : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {}
                      {
                        PUSH int 28; # int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # sp.verify(self.data.state == 3, 12) # @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    PUSH int 3; # int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP 3;      # @storage : int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 3;      # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 4;      # int : int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EQ;         # bool : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # y625 = sp.local("y625", self.accrueInterest(sp.record(in_param = sp.unit, in_storage = self.data))) # @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP 3;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%deposit_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DIG 2;      # @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    UNIT;       # unit : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    PAIR;       # pair unit @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EXEC;       # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # self.data = y625.value.storage # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # for op in y625.value.operations.rev(): ... # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # tokensToDeposit = sp.local("tokensToDeposit", self.data.savedState_tokensToDeposit.open_some()) # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 3;      # pair (pair (option nat) (option nat)) (pair address int) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # pair (option nat) (option nat) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # option nat : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # newTokens = sp.local("newTokens", tokensToDeposit.value * 1000000000000000000) # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    PUSH nat 1000000000000000000; # nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    SWAP;       # @some : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    MUL;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # if self.data.totalSupply != 0: # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    PUSH nat 0; # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP 7;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 7;      # nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    NEQ;        # bool : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {
                        DROP;       # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        DIG 5;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DROP;       # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        # newUnderlyingBalance = sp.local("newUnderlyingBalance", (params + y625.value.result) + tokensToDeposit.value) # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP;        # @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP 4;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        GET 3;      # nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP 6;      # @parameter%deposit_callback : nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        ADD;        # nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        ADD;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        # fractionOfPoolOwnership = sp.local("fractionOfPoolOwnership", (tokensToDeposit.value * 1000000000000000000) // newUnderlyingBalance.value) # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        PUSH nat 1000000000000000000; # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP 3;      # @some : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        MUL;        # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        EDIV;       # option (pair nat nat) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        IF_NONE
                          {
                            UNIT;       # unit : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                          }; # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        # newTokens.value = (fractionOfPoolOwnership.value * self.data.totalSupply) // sp.as_nat(1000000000000000000 - fractionOfPoolOwnership.value) # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP;        # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        PUSH nat 1000000000000000000; # nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        SUB;        # int : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        ISNAT;      # option nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        IF_NONE
                          {
                            UNIT;       # unit : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP 7;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : @some : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        GET 7;      # nat : @some : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DIG 2;      # nat : nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        MUL;        # nat : @some : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        EDIV;       # option (pair nat nat) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        IF_NONE
                          {
                            UNIT;       # unit : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                          }; # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                      }
                      {
                        DIG 6;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DROP;       # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                      }; # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # self.data.underlyingBalance = (params + y625.value.result) + tokensToDeposit.value # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 5;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback
                    DUP 3;      # @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%deposit_callback
                    DIG 5;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : @parameter%deposit_callback
                    GET 3;      # nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : @parameter%deposit_callback
                    DIG 6;      # @parameter%deposit_callback : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    ADD;        # nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    ADD;        # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    UPDATE 8;   # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    # depositor = sp.local("depositor", self.data.savedState_depositor.open_some()) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    DUG 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 5;      # option address : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # sp.transfer(sp.record(from_ = depositor.value, to_ = sp.self_address, value = tokensToDeposit.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.tokenContractAddress, entry_point='transfer').open_some()) # @some : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 3;      # list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 5;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 5;      # pair address (big_map nat (pair nat (map string bytes))) : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # address : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH mutez 0; # mutez : @some : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 5;      # @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SELF_ADDRESS; # @self : @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 6;      # @some : @self : @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PAIR 3;     # pair @some (pair @self @some) : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    TRANSFER_TOKENS; # operation : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONS;       # list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # sp.transfer(sp.record(address = depositor.value, value = newTokens.value), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), sp.self_address, entry_point='mint').open_some()) # list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SELF_ADDRESS; # @self : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONTRACT %mint (pair address nat); # option (contract (pair address nat)) : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH mutez 0; # mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 4;      # nat : mutez : @some : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 4;      # @some : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PAIR;       # pair @some nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    # self.data.state = 0 # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    UNPAIR;     # pair (pair (option nat) (option nat)) (pair address int) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    UNPAIR;     # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair address int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    CAR;        # address : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PUSH int 0; # int : address : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # address : int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair address int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    # self.data.savedState_tokensToDeposit = sp.none # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    CDR;        # option nat : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    NONE nat;   # option nat : option nat : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (pair (option nat) (option nat)) (pair address int) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    # self.data.savedState_depositor = sp.none # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    UNPAIR;     # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (option address) (option address) : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    CDR;        # option address : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    NONE address; # option address : option address : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (option address) (option address) : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    SWAP;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%getAllowance : @storage
                    DROP;       # @parameter%getAllowance : @storage
                    SWAP;       # @storage : @parameter%getAllowance
                    # == getAllowance ==
                    # if ~ (self.data.balances.contains(sp.fst(params).owner)): # @storage : @parameter%getAllowance
                    DUP;        # @storage : @storage : @parameter%getAllowance
                    DUG 2;      # @storage : @parameter%getAllowance : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%getAllowance : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%getAllowance : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    MEM;        # bool : @parameter%getAllowance : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%getAllowance
                        # self.data.balances[sp.fst(params).owner] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%getAllowance
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        DUP 6;      # @parameter%getAllowance : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        CAR;        # pair (address %owner) (address %spender) : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getAllowance
                        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getAllowance
                        SWAP;       # @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getAllowance
                    # sp.result(self.data.balances[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getAllowance
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getAllowance
                    DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # big_map address (pair (map address nat) nat) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @parameter%getAllowance : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUG 2;      # @parameter%getAllowance : big_map address (pair (map address nat) nat) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map address nat) nat) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET;        # option (pair (map address nat) nat) : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:74 # @some : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @some : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # map address nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @parameter%getAllowance : map address nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (address %owner) (address %spender) : map address nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # address : map address nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET;        # option nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }
                      {
                        # of_some: Get-item:74 # @some : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    # sp.transfer(__s626.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : nat : @parameter%getAllowance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DIG 2;      # @parameter%getAllowance : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # contract nat : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%getBalance : @storage
                    DROP;       # @parameter%getBalance : @storage
                    SWAP;       # @storage : @parameter%getBalance
                    # == getBalance ==
                    # if ~ (self.data.balances.contains(sp.fst(params))): # @storage : @parameter%getBalance
                    DUP;        # @storage : @storage : @parameter%getBalance
                    DUG 2;      # @storage : @parameter%getBalance : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%getBalance : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%getBalance : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    MEM;        # bool : @parameter%getBalance : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%getBalance
                        # self.data.balances[sp.fst(params)] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%getBalance
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        DUP 6;      # @parameter%getBalance : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%getBalance
                        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getBalance
                        SWAP;       # @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getBalance
                    # sp.result(self.data.balances[sp.fst(params)].balance) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getBalance
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getBalance
                    DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # big_map address (pair (map address nat) nat) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @parameter%getBalance : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUG 2;      # @parameter%getBalance : big_map address (pair (map address nat) nat) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET;        # option (pair (map address nat) nat) : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:66 # @some : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @some : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # nat : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    # sp.transfer(__s627.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : nat : @parameter%getBalance : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DIG 2;      # @parameter%getBalance : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # contract nat : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }
                  {
                    IF_LEFT
                      {
                        DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%getTotalSupply : @storage
                        DROP;       # @parameter%getTotalSupply : @storage
                        SWAP;       # @storage : @parameter%getTotalSupply
                        # == getTotalSupply ==
                        # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                        DUP;        # @storage : @storage : @parameter%getTotalSupply
                        DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                        GET 7;      # nat : @parameter%getTotalSupply : @storage
                        # sp.transfer(__s628.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                        NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                        DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                        CDR;        # contract nat : list operation : nat : @storage
                        PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                        DIG 3;      # nat : mutez : contract nat : list operation : @storage
                        TRANSFER_TOKENS; # operation : list operation : @storage
                        CONS;       # list operation : @storage
                      }
                      {
                        DROP;       # @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        # == manuallyAccrueInterest ==
                        # y629 = sp.local("y629", self.accrueInterest(sp.record(in_param = sp.unit, in_storage = self.data))) # @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        UNIT;       # unit : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        PAIR;       # pair unit @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        EXEC;       # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        # self.data = y629.value.storage # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        GET 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        SWAP;       # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        # for op in y629.value.operations.rev(): ... # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        CAR;        # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        # self.data.underlyingBalance += y629.value.result # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        DIG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        GET 8;      # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))
                        DIG 3;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                        GET 3;      # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                        ADD;        # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                        UPDATE 8;   # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                        SWAP;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                      }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
              }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
          }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%mint : @storage
                    DROP;       # @parameter%mint : @storage
                    # == mint ==
                    # sp.verify(False | (sp.sender == sp.self_address)) # @parameter%mint : @storage
                    SELF_ADDRESS; # @self : @parameter%mint : @storage
                    SENDER;     # @sender : @self : @parameter%mint : @storage
                    COMPARE;    # int : @parameter%mint : @storage
                    EQ;         # bool : @parameter%mint : @storage
                    IF
                      {}
                      {
                        UNIT;       # unit : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : @storage
                    SWAP;       # @storage : @parameter%mint
                    # if ~ (self.data.balances.contains(params.address)): # @storage : @parameter%mint
                    DUP;        # @storage : @storage : @parameter%mint
                    DUG 2;      # @storage : @parameter%mint : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%mint : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%mint : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                    MEM;        # bool : @parameter%mint : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%mint
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        DUP 6;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                        SWAP;       # @parameter%mint : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # @parameter%mint : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    # self.data.balances[params.address].balance += params.value # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    UNPAIR;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUP 6;      # @parameter%mint : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    IF_NONE
                      {
                        UNIT;       # unit : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    DUP 8;      # @parameter%mint : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%mint
                    PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    # self.data.totalSupply += params.value # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    GET 7;      # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%mint
                    DIG 2;      # @parameter%mint : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CDR;        # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    ADD;        # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    UPDATE 7;   # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%redeem : @storage
                    DROP;       # @parameter%redeem : @storage
                    # == redeem ==
                    # sp.verify(self.data.state == 0, 12) # @parameter%redeem : @storage
                    PUSH int 0; # int : @parameter%redeem : @storage
                    DUP 3;      # @storage : int : @parameter%redeem : @storage
                    GET 3;      # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : int : @parameter%redeem : @storage
                    GET 4;      # int : int : @parameter%redeem : @storage
                    COMPARE;    # int : @parameter%redeem : @storage
                    EQ;         # bool : @parameter%redeem : @storage
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%redeem : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%redeem : @storage
                    SWAP;       # @storage : @parameter%redeem
                    # self.data.state = 2 # @storage : @parameter%redeem
                    UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%redeem
                    SWAP;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    UNPAIR;     # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    UNPAIR;     # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (address %stabilityFundContractAddress) (int %state) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    SWAP;       # pair (address %stabilityFundContractAddress) (int %state) : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    CAR;        # address : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    PUSH int 2; # int : address : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    SWAP;       # address : int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    PAIR;       # pair address int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    SWAP;       # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    # self.data.savedState_tokensToRedeem = sp.some(params) # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    CAR;        # option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%redeem
                    DIG 4;      # @parameter%redeem : option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SOME;       # option nat : option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SWAP;       # option nat : option nat : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (option nat) (option nat) : pair address int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (option nat) (option nat)) (pair address int) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SWAP;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    # self.data.savedState_redeemer = sp.some(sp.sender) # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    UNPAIR;     # pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    CAR;        # option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SENDER;     # @sender : option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SOME;       # option address : option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # option address : option address : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (option address) (option address) : pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (option address) (option address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    # sp.transfer((sp.self_address, sp.self_entry_point('redeem_callback')), sp.tez(0), sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), self.data.tokenContractAddress, entry_point='getBalance').open_some()) # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    DUP;        # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    GET 5;      # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CAR;        # address : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONTRACT %getBalance (pair address (contract nat)); # option (contract (pair address (contract nat))) : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    IF_NONE
                      {
                        UNIT;       # unit : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : @some : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SWAP;       # @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SELF %redeem_callback; # @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    SELF_ADDRESS; # @self : @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    PAIR;       # pair @self @self : mutez : @some : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    CONS;       # list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%redeem_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # == redeem_callback ==
                    # sp.verify(sp.sender == self.data.tokenContractAddress, 28) # @storage : @parameter%redeem_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # @storage : @storage : @parameter%redeem_callback : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # @storage : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 5;      # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # address : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    SENDER;     # @sender : address : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EQ;         # bool : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {}
                      {
                        PUSH int 28; # int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # sp.verify(self.data.state == 2, 12) # @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    PUSH int 2; # int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP 3;      # @storage : int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 3;      # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 4;      # int : int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EQ;         # bool : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {}
                      {
                        PUSH int 12; # int : @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # y630 = sp.local("y630", self.accrueInterest(sp.record(in_param = sp.unit, in_storage = self.data))) # @parameter%redeem_callback : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%redeem_callback
                    UNIT;       # unit : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%redeem_callback
                    PAIR;       # pair unit @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%redeem_callback
                    EXEC;       # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    # self.data = y630.value.storage # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    GET 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    DUG 2;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # for op in y630.value.operations.rev(): ... # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # tokensToRedeem = sp.local("tokensToRedeem", self.data.savedState_tokensToRedeem.open_some()) # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 3;      # pair (pair (option nat) (option nat)) (pair address int) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # pair (option nat) (option nat) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CDR;        # option nat : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # fractionOfPoolOwnership = sp.local("fractionOfPoolOwnership", (tokensToRedeem.value * 1000000000000000000) // self.data.totalSupply) # @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 5;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 7;      # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH nat 1000000000000000000; # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 3;      # @some : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    MUL;        # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    EDIV;       # option (pair nat nat) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                      }; # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # tokensToReceive = sp.local("tokensToReceive", (fractionOfPoolOwnership.value * (params + y630.value.result)) // 1000000000000000000) # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH nat 1000000000000000000; # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 5;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 3;      # nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 7;      # @parameter%redeem_callback : nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    ADD;        # nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 2;      # nat : nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    MUL;        # nat : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    EDIV;       # option (pair nat nat) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                      }; # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # self.data.underlyingBalance = sp.as_nat((params + y630.value.result) - tokensToReceive.value) # nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 5;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    SWAP;       # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    DUP;        # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    DUG 2;      # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%redeem_callback
                    DIG 5;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : @parameter%redeem_callback
                    GET 3;      # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : @parameter%redeem_callback
                    DIG 6;      # @parameter%redeem_callback : nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    ADD;        # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    SUB;        # int : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    ISNAT;      # option nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    IF_NONE
                      {
                        UNIT;       # unit : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    UPDATE 8;   # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    # redeemer = sp.local("redeemer", self.data.savedState_redeemer.open_some()) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation
                    DUG 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 6;      # option address : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # sp.transfer(sp.record(address = redeemer.value, value = tokensToRedeem.value), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), sp.self_address, entry_point='burn').open_some()) # @some : nat : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 3;      # list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SELF_ADDRESS; # @self : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONTRACT %burn (pair address nat); # option (contract (pair address nat)) : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH mutez 0; # mutez : @some : list operation : @some : nat : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 5;      # @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 5;      # @some : @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PAIR;       # pair @some @some : mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    TRANSFER_TOKENS; # operation : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONS;       # list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # sp.transfer(sp.record(from_ = sp.self_address, to_ = redeemer.value, value = tokensToReceive.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.tokenContractAddress, entry_point='transfer').open_some()) # list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    GET 5;      # pair address (big_map nat (pair nat (map string bytes))) : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # address : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    IF_NONE
                      {
                        UNIT;       # unit : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PUSH mutez 0; # mutez : @some : list operation : @some : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 4;      # nat : mutez : @some : list operation : @some : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 4;      # @some : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SELF_ADDRESS; # @self : @some : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    PAIR 3;     # pair @self (pair @some nat) : mutez : @some : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    # self.data.state = 0 # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    UNPAIR;     # pair (pair (option nat) (option nat)) (pair address int) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    UNPAIR;     # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair address int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    CAR;        # address : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PUSH int 0; # int : address : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # address : int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair address int : pair (option nat) (option nat) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    # self.data.savedState_tokensToRedeem = sp.none # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    CAR;        # option nat : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    NONE nat;   # option nat : option nat : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # option nat : option nat : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (option nat) (option nat) : pair address int : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (pair (option nat) (option nat)) (pair address int) : pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    PAIR;       # pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : list operation
                    SWAP;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    # self.data.savedState_redeemer = sp.none # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    UNPAIR;     # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (option address) (option address) : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    CAR;        # option address : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    NONE address; # option address : option address : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # option address : option address : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (option address) (option address) : pair timestamp (big_map string bytes) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair timestamp (big_map string bytes) : pair (option address) (option address) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    SWAP;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                  }
                  {
                    IF_LEFT
                      {
                        DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%rescueXTZ : @storage
                        DROP;       # @parameter%rescueXTZ : @storage
                        SWAP;       # @storage : @parameter%rescueXTZ
                        # == rescueXTZ ==
                        # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%rescueXTZ
                        DUP;        # @storage : @storage : @parameter%rescueXTZ
                        DUG 2;      # @storage : @parameter%rescueXTZ : @storage
                        CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%rescueXTZ : @storage
                        CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%rescueXTZ : @storage
                        GET 3;      # address : @parameter%rescueXTZ : @storage
                        SENDER;     # @sender : address : @parameter%rescueXTZ : @storage
                        COMPARE;    # int : @parameter%rescueXTZ : @storage
                        EQ;         # bool : @parameter%rescueXTZ : @storage
                        IF
                          {}
                          {
                            PUSH int 4; # int : @parameter%rescueXTZ : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%rescueXTZ : @storage
                        # sp.send(params.destinationAddress, sp.tez(10)) # @parameter%rescueXTZ : @storage
                        CONTRACT unit; # option (contract unit) : @storage
                        IF_NONE
                          {
                            UNIT;       # unit : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @storage
                        NIL operation; # list operation : @some : @storage
                        SWAP;       # @some : list operation : @storage
                        PUSH mutez 10000000; # mutez : @some : list operation : @storage
                        UNIT;       # unit : mutez : @some : list operation : @storage
                        TRANSFER_TOKENS; # operation : list operation : @storage
                        CONS;       # list operation : @storage
                      }
                      {
                        DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%setContractMetadata : @storage
                        DROP;       # @parameter%setContractMetadata : @storage
                        SWAP;       # @storage : @parameter%setContractMetadata
                        # == setContractMetadata ==
                        # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%setContractMetadata
                        DUP;        # @storage : @storage : @parameter%setContractMetadata
                        DUG 2;      # @storage : @parameter%setContractMetadata : @storage
                        CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setContractMetadata : @storage
                        CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%setContractMetadata : @storage
                        GET 3;      # address : @parameter%setContractMetadata : @storage
                        SENDER;     # @sender : address : @parameter%setContractMetadata : @storage
                        COMPARE;    # int : @parameter%setContractMetadata : @storage
                        EQ;         # bool : @parameter%setContractMetadata : @storage
                        IF
                          {}
                          {
                            PUSH int 4; # int : @parameter%setContractMetadata : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%setContractMetadata : @storage
                        SWAP;       # @storage : @parameter%setContractMetadata
                        # self.data.metadata[sp.fst(params)] = sp.snd(params) # @storage : @parameter%setContractMetadata
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        SWAP;       # pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        UNPAIR;     # pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes) : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        UNPAIR;     # timestamp : big_map string bytes : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        SWAP;       # big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        DUP 6;      # @parameter%setContractMetadata : big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        CDR;        # bytes : big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        SOME;       # option bytes : big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setContractMetadata
                        DIG 6;      # @parameter%setContractMetadata : option bytes : big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        CAR;        # string : option bytes : big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        UPDATE;     # big_map string bytes : timestamp : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        SWAP;       # timestamp : big_map string bytes : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        PAIR;       # pair timestamp (big_map string bytes) : pair (option %savedState_depositor address) (option %savedState_redeemer address) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        PAIR;       # pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        PAIR;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        PAIR;       # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        NIL operation; # list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # list operation : pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair timestamp (big_map string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
              }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%setGovernorContract : @storage
                    DROP;       # @parameter%setGovernorContract : @storage
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # == setGovernorContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%setGovernorContract
                    DUP;        # @storage : @storage : @parameter%setGovernorContract
                    DUG 2;      # @storage : @parameter%setGovernorContract : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setGovernorContract : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%setGovernorContract : @storage
                    GET 3;      # address : @parameter%setGovernorContract : @storage
                    SENDER;     # @sender : address : @parameter%setGovernorContract : @storage
                    COMPARE;    # int : @parameter%setGovernorContract : @storage
                    EQ;         # bool : @parameter%setGovernorContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setGovernorContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setGovernorContract : @storage
                    SWAP;       # @storage : @parameter%setGovernorContract
                    # self.data.governorContractAddress = params # @storage : @parameter%setGovernorContract
                    UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setGovernorContract
                    UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setGovernorContract
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setGovernorContract
                    SWAP;       # pair (address %governorContractAddress) (nat %interestRate) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setGovernorContract
                    CDR;        # nat : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setGovernorContract
                    DIG 4;      # @parameter%setGovernorContract : nat : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair @parameter%setGovernorContract nat : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : pair @parameter%setGovernorContract nat : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair @parameter%setGovernorContract nat) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair @parameter%setGovernorContract nat)) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair @parameter%setGovernorContract nat)) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                    NIL operation; # list operation : pair (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (pair @parameter%setGovernorContract nat)) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }
                  {
                    SWAP;       # @storage : @parameter%setInterestRate : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # == setInterestRate ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%setInterestRate : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUP;        # @storage : @storage : @parameter%setInterestRate : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # @storage : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    GET 3;      # address : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    SENDER;     # @sender : address : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    COMPARE;    # int : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    EQ;         # bool : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    # y631 = sp.local("y631", self.accrueInterest(sp.record(in_param = sp.unit, in_storage = self.data))) # @parameter%setInterestRate : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))))
                    DUG 2;      # @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%setInterestRate
                    UNIT;       # unit : @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%setInterestRate
                    PAIR;       # pair unit @storage : lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter%setInterestRate
                    EXEC;       # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    # self.data = y631.value.storage # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    GET 4;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    DUG 2;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # for op in y631.value.operations.rev(): ... # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DUP;        # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    CAR;        # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    # self.data.underlyingBalance += y631.value.result # list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                    DIG 3;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    GET 8;      # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : @parameter%setInterestRate
                    DIG 3;      # pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @parameter%setInterestRate
                    GET 3;      # nat : nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @parameter%setInterestRate
                    ADD;        # nat : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @parameter%setInterestRate
                    UPDATE 8;   # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @parameter%setInterestRate
                    # self.data.interestRate = params # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation : @parameter%setInterestRate
                    UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation : @parameter%setInterestRate
                    UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair address nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation : @parameter%setInterestRate
                    UNPAIR;     # big_map address (pair (map address nat) nat) : pair address nat : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation : @parameter%setInterestRate
                    SWAP;       # pair address nat : big_map address (pair (map address nat) nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation : @parameter%setInterestRate
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation : @parameter%setInterestRate
                    DIG 5;      # @parameter%setInterestRate : address : big_map address (pair (map address nat) nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # address : @parameter%setInterestRate : big_map address (pair (map address nat) nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair address @parameter%setInterestRate : big_map address (pair (map address nat) nat) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    SWAP;       # big_map address (pair (map address nat) nat) : pair address @parameter%setInterestRate : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair address @parameter%setInterestRate) : pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair address @parameter%setInterestRate)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address))) : pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)) : list operation
                    PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address @parameter%setInterestRate)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))) : list operation
                    SWAP;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address @parameter%setInterestRate)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
                  }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
              }
              {
                DIG 2;      # lambda (pair unit (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))) (pair (list operation) (pair nat (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))))) : @parameter.right.right.right : @storage
                DROP;       # @parameter.right.right.right : @storage
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setStabilityFundContract
                    # == setStabilityFundContract ==
                    # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%setStabilityFundContract
                    DUP;        # @storage : @storage : @parameter%setStabilityFundContract
                    DUG 2;      # @storage : @parameter%setStabilityFundContract : @storage
                    CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract : @storage
                    CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%setStabilityFundContract : @storage
                    GET 3;      # address : @parameter%setStabilityFundContract : @storage
                    SENDER;     # @sender : address : @parameter%setStabilityFundContract : @storage
                    COMPARE;    # int : @parameter%setStabilityFundContract : @storage
                    EQ;         # bool : @parameter%setStabilityFundContract : @storage
                    IF
                      {}
                      {
                        PUSH int 4; # int : @parameter%setStabilityFundContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setStabilityFundContract : @storage
                    SWAP;       # @storage : @parameter%setStabilityFundContract
                    # self.data.stabilityFundContractAddress = params # @storage : @parameter%setStabilityFundContract
                    UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setStabilityFundContract
                    SWAP;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract
                    UNPAIR;     # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract
                    UNPAIR;     # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (address %stabilityFundContractAddress) (int %state) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract
                    SWAP;       # pair (address %stabilityFundContractAddress) (int %state) : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract
                    CDR;        # int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setStabilityFundContract
                    DIG 4;      # @parameter%setStabilityFundContract : int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair @parameter%setStabilityFundContract int : pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SWAP;       # pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat) : pair @parameter%setStabilityFundContract int : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair @parameter%setStabilityFundContract int) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    PAIR;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair @parameter%setStabilityFundContract int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                    SWAP;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair @parameter%setStabilityFundContract int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                    PAIR;       # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair @parameter%setStabilityFundContract int)) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }
                  {
                    IF_LEFT
                      {
                        SWAP;       # @storage : @parameter%setTokenMetadata
                        # == setTokenMetadata ==
                        # sp.verify(sp.sender == self.data.governorContractAddress, 4) # @storage : @parameter%setTokenMetadata
                        DUP;        # @storage : @storage : @parameter%setTokenMetadata
                        DUG 2;      # @storage : @parameter%setTokenMetadata : @storage
                        CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata : @storage
                        CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%setTokenMetadata : @storage
                        GET 3;      # address : @parameter%setTokenMetadata : @storage
                        SENDER;     # @sender : address : @parameter%setTokenMetadata : @storage
                        COMPARE;    # int : @parameter%setTokenMetadata : @storage
                        EQ;         # bool : @parameter%setTokenMetadata : @storage
                        IF
                          {}
                          {
                            PUSH int 4; # int : @parameter%setTokenMetadata : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%setTokenMetadata : @storage
                        SWAP;       # @storage : @parameter%setTokenMetadata
                        # self.data.token_metadata[0] = params # @storage : @parameter%setTokenMetadata
                        UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%setTokenMetadata
                        SWAP;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        UNPAIR;     # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        SWAP;       # pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        UNPAIR;     # pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        UNPAIR;     # address : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        SWAP;       # big_map nat (pair (nat %token_id) (map %token_info string bytes)) : address : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%setTokenMetadata
                        DIG 5;      # @parameter%setTokenMetadata : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : address : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        SOME;       # option (pair (nat %token_id) (map %token_info string bytes)) : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : address : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        PUSH nat 0; # nat : option (pair (nat %token_id) (map %token_info string bytes)) : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : address : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        UPDATE;     # big_map nat (pair (nat %token_id) (map %token_info string bytes)) : address : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        SWAP;       # address : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        PAIR;       # pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes))) : pair (nat %totalSupply) (nat %underlyingBalance) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        PAIR;       # pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        SWAP;       # pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state)) : pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        PAIR;       # pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))
                        SWAP;       # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                        PAIR;       # pair (pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }
                      {
                        # == transfer ==
                        # sp.verify(False | ((~ False) & ((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value)))) # @parameter%transfer : @storage
                        DUP;        # @parameter%transfer : @parameter%transfer : @storage
                        CAR;        # address : @parameter%transfer : @storage
                        SENDER;     # @sender : address : @parameter%transfer : @storage
                        COMPARE;    # int : @parameter%transfer : @storage
                        EQ;         # bool : @parameter%transfer : @storage
                        IF
                          {
                            PUSH bool True; # bool : @parameter%transfer : @storage
                          }
                          {
                            DUP;        # @parameter%transfer : @parameter%transfer : @storage
                            GET 4;      # nat : @parameter%transfer : @storage
                            DUP 3;      # @storage : nat : @parameter%transfer : @storage
                            CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @parameter%transfer : @storage
                            CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @parameter%transfer : @storage
                            CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                            DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                            CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                            GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                            IF_NONE
                              {
                                UNIT;       # unit : nat : @parameter%transfer : @storage
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:31 # @some : nat : @parameter%transfer : @storage
                              }; # @some : nat : @parameter%transfer : @storage
                            CAR;        # map address nat : nat : @parameter%transfer : @storage
                            SENDER;     # @sender : map address nat : nat : @parameter%transfer : @storage
                            GET;        # option nat : nat : @parameter%transfer : @storage
                            IF_NONE
                              {
                                UNIT;       # unit : nat : @parameter%transfer : @storage
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:31 # @some : nat : @parameter%transfer : @storage
                              }; # @some : nat : @parameter%transfer : @storage
                            COMPARE;    # int : @parameter%transfer : @storage
                            GE;         # bool : @parameter%transfer : @storage
                          }; # bool : @parameter%transfer : @storage
                        IF
                          {}
                          {
                            UNIT;       # unit : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%transfer : @storage
                        SWAP;       # @storage : @parameter%transfer
                        # if ~ (self.data.balances.contains(params.from_)): # @storage : @parameter%transfer
                        DUP;        # @storage : @storage : @parameter%transfer
                        DUG 2;      # @storage : @parameter%transfer : @storage
                        CAR;        # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%transfer : @storage
                        CAR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%transfer : @storage
                        CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                        SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                        MEM;        # bool : @parameter%transfer : @storage
                        IF
                          {}
                          {
                            SWAP;       # @storage : @parameter%transfer
                            # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer
                            UNPAIR;     # pair (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UNPAIR;     # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            SWAP;       # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                          }; # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        # if ~ (self.data.balances.contains(params.to_)): # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        SWAP;       # @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUG 2;      # @parameter%transfer : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GET 3;      # address : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        MEM;        # bool : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        IF
                          {}
                          {
                            SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UNPAIR;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            SWAP;       # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                          }; # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        # sp.verify(self.data.balances[params.from_].balance >= params.value) # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP;        # @parameter%transfer : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GET 4;      # nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP 3;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP 3;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GET;        # option (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        IF_NONE
                          {
                            UNIT;       # unit : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:37 # @some : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                          }; # @some : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CDR;        # nat : nat : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        COMPARE;    # int : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GE;         # bool : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        IF
                          {}
                          {
                            UNIT;       # unit : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            FAILWITH;   # FAILED
                          }; # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        IF_NONE
                          {
                            UNIT;       # unit : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP 7;      # @parameter%transfer : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DIG 8;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CAR;        # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        IF_NONE
                          {
                            UNIT;       # unit : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:38 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                          }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        IF_NONE
                          {
                            UNIT;       # unit : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        # self.data.balances[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        IF_NONE
                          {
                            UNIT;       # unit : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        DUP 8;      # @parameter%transfer : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                        PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                        SWAP;       # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        # if (params.from_ != sp.sender) & (~ False): # @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        DUP;        # @parameter%transfer : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        CAR;        # address : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        SENDER;     # @sender : address : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        COMPARE;    # int : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        NEQ;        # bool : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                        IF
                          {
                            SWAP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            DUP;        # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer
                            DUG 2;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            UNPAIR;     # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            UNPAIR;     # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            UNPAIR;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            IF_NONE
                              {
                                UNIT;       # unit : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DUP 8;      # @parameter%transfer : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                            DIG 9;      # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            CAR;        # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            CAR;        # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            CAR;        # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))) : @parameter%transfer
                            DIG 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:41 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                              }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:41 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                              }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            IF_NONE
                              {
                                UNIT;       # unit : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            UPDATE;     # big_map address (pair (map address nat) nat) : pair (address %governorContractAddress) (nat %interestRate) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            PAIR;       # pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate)) : pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address))) : pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance)))
                            PAIR;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                          }
                          {
                            DROP;       # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                          }; # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair (address %tokenContractAddress) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                      }; # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair (address %stabilityFundContractAddress) (int %state))) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                  }; # pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair address int)) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
                NIL operation; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair (address %governorContractAddress) (nat %interestRate))) (pair (pair (timestamp %lastInterestCompoundTime) (big_map %metadata string bytes)) (pair (option %savedState_depositor address) (option %savedState_redeemer address)))) (pair (pair (pair (option %savedState_tokensToDeposit nat) (option %savedState_tokensToRedeem nat)) (pair address int)) (pair (pair address (big_map nat (pair (nat %token_id) (map %token_info string bytes)))) (pair (nat %totalSupply) (nat %underlyingBalance))))
              }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
          }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
      }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
    NIL operation; # list operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
    SWAP;       # list operation : list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
      }; # list operation : pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat)))
    PAIR;       # pair (list operation) (pair (pair (pair (big_map address (pair (map address nat) nat)) (pair address nat)) (pair (pair timestamp (big_map string bytes)) (pair (option address) (option address)))) (pair (pair (pair (option nat) (option nat)) (pair address int)) (pair (pair address (big_map nat (pair nat (map string bytes)))) (pair nat nat))))
  };