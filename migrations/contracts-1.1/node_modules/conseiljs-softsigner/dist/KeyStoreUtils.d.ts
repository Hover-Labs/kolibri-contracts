/// <reference types="node" />
import { KeyStore } from 'conseiljs';
export declare namespace KeyStoreUtils {
    function generateMnemonic(strength?: number): string;
    function generateIdentity(strength?: number, password?: string, mnemonic?: string): Promise<KeyStore>;
    function restoreIdentityFromSecretKey(secretKey: string): Promise<KeyStore>;
    function restoreIdentityFromMnemonic(mnemonic: string, password?: string, pkh?: string, derivationPath?: string, validate?: boolean): Promise<KeyStore>;
    function restoreIdentityFromFundraiser(mnemonic: string, email: string, password: string, pkh: string): Promise<KeyStore>;
    function generateKeys(seed: Buffer): Promise<{
        publicKey: Buffer;
        secretKey: Buffer;
    }>;
    function recoverKeys(secretKey: Buffer): Promise<{
        publicKey: Buffer;
        secretKey: Buffer;
    }>;
    function decryptMessage(message: Buffer, passphrase: string, salt: Buffer): Promise<Buffer>;
    function encryptMessage(message: Buffer, passphrase: string, salt: Buffer): Promise<Buffer>;
    function checkTextSignature(signature: string, message: string, publicKey: string, prehash?: boolean): Promise<boolean>;
}
