import { Context } from '../context';
import { OpKind } from '../operations/types';
import { WalletDelegateParams, WalletOriginateParams, WalletProvider, WalletTransferParams } from './interface';
import { WalletParamsWithKind } from './wallet';
export declare class LegacyWalletProvider implements WalletProvider {
    private context;
    constructor(context: Context);
    getPKH(): Promise<string>;
    mapTransferParamsToWalletParams(params: () => Promise<WalletTransferParams>): Promise<import("../operations/types").withKind<WalletTransferParams, OpKind.TRANSACTION>>;
    mapOriginateParamsToWalletParams(params: () => Promise<WalletOriginateParams>): Promise<import("../operations/types").withKind<WalletOriginateParams, OpKind.ORIGINATION>>;
    mapDelegateParamsToWalletParams(params: () => Promise<WalletDelegateParams>): Promise<import("../operations/types").withKind<WalletDelegateParams, OpKind.DELEGATION>>;
    sendOperations(params: WalletParamsWithKind[]): Promise<string>;
}
