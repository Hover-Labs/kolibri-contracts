import { SubscriptionLog } from 'rxjs/internal/testing/SubscriptionLog';
import { TestMessage } from '../message/TestMessage';
import { constructSubscriptionMarble } from './constructSubscriptionMarble';
declare function marbleAssert<T = string>(source: Array<TestMessage<T | Array<TestMessage<T>>>> | Readonly<Array<TestMessage<T | Array<TestMessage<T>>>>>): {
    to: {
        equal(expected: TestMessage<T | Array<TestMessage<T>>> | Readonly<Array<TestMessage<T | Array<TestMessage<T>>>>>): void;
    };
};
declare function marbleAssert<T = void>(source: Array<SubscriptionLog>): {
    to: {
        equal(expected: Array<SubscriptionLog>): void;
    };
};
export { marbleAssert, constructSubscriptionMarble };
//# sourceMappingURL=marbleAssert.d.ts.map