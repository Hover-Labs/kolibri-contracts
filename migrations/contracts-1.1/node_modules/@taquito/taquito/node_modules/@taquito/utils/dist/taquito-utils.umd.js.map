{"version":3,"file":"taquito-utils.umd.js","sources":["../src/constants.ts","../src/validators.ts","../src/version.ts","../src/taquito-utils.ts"],"sourcesContent":["export enum Prefix {\n  TZ1 = 'tz1',\n  TZ2 = 'tz2',\n  TZ3 = 'tz3',\n  KT = 'KT',\n  KT1 = 'KT1',\n\n  EDSK2 = 'edsk2',\n  SPSK = 'spsk',\n  P2SK = 'p2sk',\n\n  EDPK = 'edpk',\n  SPPK = 'sppk',\n  P2PK = 'p2pk',\n\n  EDESK = 'edesk',\n  SPESK = 'spesk',\n  P2ESK = 'p2esk',\n\n  EDSK = 'edsk',\n  EDSIG = 'edsig',\n  SPSIG = 'spsig',\n  P2SIG = 'p2sig',\n  SIG = 'sig',\n\n  NET = 'Net',\n  NCE = 'nce',\n  B = 'b',\n  O = 'o',\n  LO = 'Lo',\n  LLO = 'LLo',\n  P = 'P',\n  CO = 'Co',\n  ID = 'id',\n\n  EXPR = 'expr',\n  TZ = 'TZ',\n}\n\nexport const prefix = {\n  [Prefix.TZ1]: new Uint8Array([6, 161, 159]),\n  [Prefix.TZ2]: new Uint8Array([6, 161, 161]),\n  [Prefix.TZ3]: new Uint8Array([6, 161, 164]),\n  [Prefix.KT]: new Uint8Array([2, 90, 121]),\n  [Prefix.KT1]: new Uint8Array([2, 90, 121]),\n\n  [Prefix.EDSK]: new Uint8Array([43, 246, 78, 7]),\n  [Prefix.EDSK2]: new Uint8Array([13, 15, 58, 7]),\n  [Prefix.SPSK]: new Uint8Array([17, 162, 224, 201]),\n  [Prefix.P2SK]: new Uint8Array([16, 81, 238, 189]),\n\n  [Prefix.EDPK]: new Uint8Array([13, 15, 37, 217]),\n  [Prefix.SPPK]: new Uint8Array([3, 254, 226, 86]),\n  [Prefix.P2PK]: new Uint8Array([3, 178, 139, 127]),\n\n  [Prefix.EDESK]: new Uint8Array([7, 90, 60, 179, 41]),\n  [Prefix.SPESK]: new Uint8Array([0x09, 0xed, 0xf1, 0xae, 0x96]),\n  [Prefix.P2ESK]: new Uint8Array([0x09, 0x30, 0x39, 0x73, 0xab]),\n\n  [Prefix.EDSIG]: new Uint8Array([9, 245, 205, 134, 18]),\n  [Prefix.SPSIG]: new Uint8Array([13, 115, 101, 19, 63]),\n  [Prefix.P2SIG]: new Uint8Array([54, 240, 44, 52]),\n  [Prefix.SIG]: new Uint8Array([4, 130, 43]),\n\n  [Prefix.NET]: new Uint8Array([87, 82, 0]),\n  [Prefix.NCE]: new Uint8Array([69, 220, 169]),\n  [Prefix.B]: new Uint8Array([1, 52]),\n  [Prefix.O]: new Uint8Array([5, 116]),\n  [Prefix.LO]: new Uint8Array([133, 233]),\n  [Prefix.LLO]: new Uint8Array([29, 159, 109]),\n  [Prefix.P]: new Uint8Array([2, 170]),\n  [Prefix.CO]: new Uint8Array([79, 179]),\n  [Prefix.ID]: new Uint8Array([153, 103]),\n\n  [Prefix.EXPR]: new Uint8Array([13, 44, 64, 27]),\n  // Legacy prefix\n  [Prefix.TZ]: new Uint8Array([2, 90, 121]),\n};\n\nexport const prefixLength: { [key: string]: number } = {\n  [Prefix.TZ1]: 20,\n  [Prefix.TZ2]: 20,\n  [Prefix.TZ3]: 20,\n  [Prefix.KT]: 20,\n  [Prefix.KT1]: 20,\n  [Prefix.EDPK]: 32,\n  [Prefix.SPPK]: 33,\n  [Prefix.P2PK]: 33,\n  [Prefix.EDSIG]: 64,\n  [Prefix.SPSIG]: 64,\n  [Prefix.P2SIG]: 64,\n  [Prefix.SIG]: 64,\n  [Prefix.NET]: 4,\n  [Prefix.B]: 32,\n  [Prefix.P]: 32,\n  [Prefix.O]: 32\n};\n","import { prefix, prefixLength, Prefix } from './constants';\n\nconst bs58check = require('bs58check');\n\nexport enum ValidationResult {\n  NO_PREFIX_MATCHED,\n  INVALID_CHECKSUM,\n  INVALID_LENGTH,\n  VALID,\n}\n\nexport function isValidPrefix(value: any): value is Prefix {\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  return value in prefix;\n}\n  /**\n   * @description This function is called by the validation functions ([[validateAddress]], [[validateChain]], [[validateContractAddress]], [[validateKeyHash]], [[validateSignature]], [[validatePublicKey]]).\n   * Verify if the value has the right prefix or return `NO_PREFIX_MATCHED`,\n   * decode the value using base58 and return `INVALID_CHECKSUM` if it fails,\n   * check if the length of the value matches the prefix type or return `INVALID_LENGTH`.\n   * If all checks pass, return `VALID`.\n   *\n   * @param value Value to validate\n   * @param prefixes prefix the value should have\n   */\nfunction validatePrefixedValue(value: any, prefixes: Prefix[]) {\n  const match = new RegExp(`^(${prefixes.join('|')})`).exec(value);\n  if (!match || match.length === 0) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  const prefixKey = match[0];\n\n  if (!isValidPrefix(prefixKey)) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  // Remove annotation from contract address before doing the validation\n  const contractAddress = /^(KT1\\w{33})(\\%(.*))?/.exec(value);\n  if (contractAddress) {\n    value = contractAddress[1];\n  }\n\n  // decodeUnsafe return undefined if decoding fail\n  let decoded = bs58check.decodeUnsafe(value);\n  if (!decoded) {\n    return ValidationResult.INVALID_CHECKSUM;\n  }\n\n  decoded = decoded.slice(prefix[prefixKey].length);\n  if (decoded.length !== prefixLength[prefixKey]) {\n    return ValidationResult.INVALID_LENGTH;\n  }\n\n  return ValidationResult.VALID;\n}\n\nconst implicitPrefix = [Prefix.TZ1, Prefix.TZ2, Prefix.TZ3];\nconst contractPrefix = [Prefix.KT1];\nconst signaturePrefix = [Prefix.EDSIG, Prefix.P2SIG, Prefix.SPSIG, Prefix.SIG];\nconst pkPrefix = [Prefix.EDPK, Prefix.SPPK, Prefix.P2PK];\n\n  /**\n   * @description Used to check if an address or a contract address is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validateAddress } from '@taquito/utils';\n   * const pkh = 'tz1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n   * const validation = validateAddress(pkh)\n   * console.log(validation)\n   * // This example return 3 which correspond to VALID\n   * ```\n   */\nexport function validateAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, [...implicitPrefix, ...contractPrefix]);\n}\n  /**\n   * @description Used to check if a chain id is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validateChain } from '@taquito/utils';\n   * const chainId = 'NetXdQprcVkpaWU'\n   * const validation = validateChain(chainId)\n   * console.log(validation)\n   * // This example return 3 which correspond to VALID\n   * ```\n   */\nexport function validateChain(value: any): ValidationResult {\n  return validatePrefixedValue(value, [Prefix.NET]);\n}\n  /**\n   * @description Used to check if a contract address is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validateContractAddress } from '@taquito/utils';\n   * const contractAddress = 'KT1JVErLYTgtY8uGGZ4mso2npTSxqVLDRVbC'\n   * const validation = validateContractAddress(contractAddress)\n   * console.log(validation)\n   * // This example return 3 which correspond to VALID\n   * ```\n   */\nexport function validateContractAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, contractPrefix);\n}\n  /**\n   * @description Used to check if a key hash is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validateKeyHash } from '@taquito/utils';\n   * const keyHashWithoutPrefix = '1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n   * const validation = validateKeyHash(keyHashWithoutPrefix)\n   * console.log(validation)\n   * // This example return 0 which correspond to NO_PREFIX_MATCHED\n   * ```\n   */\nexport function validateKeyHash(value: any): ValidationResult {\n  return validatePrefixedValue(value, implicitPrefix);\n}\n  /**\n   * @description Used to check if a signature is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validateSignature } from '@taquito/utils';\n   * const signature = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg'\n   * const validation = validateSignature(signature)\n   * console.log(validation)\n   * // This example return 3 which correspond to VALID\n   * ```\n   */\nexport function validateSignature(value: any): ValidationResult {\n  return validatePrefixedValue(value, signaturePrefix);\n}\n  /**\n   * @description Used to check if a signature is valid.\n   *\n   * @returns\n   * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n   *\n   * @example\n   * ```\n   * import { validatePublicKey } from '@taquito/utils';\n   * const publicKey = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg'\n   * const validation = validatePublicKey(publicKey)\n   * console.log(validation)\n   * // This example return 3 which correspond to VALID\n   * ```\n   */\nexport function validatePublicKey(value: any): ValidationResult {\n  return validatePrefixedValue(value, pkPrefix);\n}\n","\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"commitHash\": \"a8e9548e650215186f661033b59299ace72c9ee6\",\n    \"version\": \"9.2.0\"\n};\n/* tslint:enable */\n","/**\n * @packageDocumentation\n * @module @taquito/utils\n */\n\n/*\n * Some code in this file is originally from sotez and eztz\n * Copyright (c) 2018 Andrew Kishino\n * Copyright (c) 2017 Stephen Andrews\n */\n\nimport { Buffer } from 'buffer';\nimport { prefix } from './constants';\nconst blake = require('blakejs');\nconst bs58check = require('bs58check');\n\nexport * from './validators';\nexport { VERSION } from './version';\n\nexport { prefix, Prefix, prefixLength } from './constants';\n\n/**\n *\n * @description Hash a string using the BLAKE2b algorithm, base58 encode the hash obtained and appends the prefix 'expr' to it\n *\n * @param value Value in hex\n */\nexport function encodeExpr(value: string) {\n  const blakeHash = blake.blake2b(hex2buf(value), null, 32);\n  return b58cencode(blakeHash, prefix['expr']);\n}\n\n/**\n *\n * @description Return the operation hash of a signed operation \n * @param value Value in hex of a signed operation\n */\n export function encodeOpHash(value: string) {\n  const blakeHash = blake.blake2b(hex2buf(value), null, 32);\n  return b58cencode(blakeHash, prefix.o);\n}\n\n/**\n *\n * @description Base58 encode a string or a Uint8Array and append a prefix to it\n *\n * @param value Value to base58 encode\n * @param prefix prefix to append to the encoded string\n */\nexport function b58cencode(value: string | Uint8Array, prefix: Uint8Array) {\n  const payloadAr = typeof value === 'string' ? Uint8Array.from(Buffer.from(value, 'hex')) : value;\n\n  const n = new Uint8Array(prefix.length + payloadAr.length);\n  n.set(prefix);\n  n.set(payloadAr, prefix.length);\n\n  return bs58check.encode(Buffer.from(n.buffer));\n}\n\n/**\n *\n * @description Base58 decode a string and remove the prefix from it\n *\n * @param value Value to base58 decode\n * @param prefix prefix to remove from the decoded string\n */\nexport const b58cdecode = (enc: string, prefixArg: Uint8Array): Uint8Array =>\n  bs58check.decode(enc).slice(prefixArg.length);\n\n/**\n *\n * @description Base58 decode a string with predefined prefix\n *\n * @param value Value to base58 decode\n */\nexport function b58decode(payload: string) {\n  const buf: Buffer = bs58check.decode(payload);\n\n  const prefixMap = {\n    [prefix.tz1.toString()]: '0000',\n    [prefix.tz2.toString()]: '0001',\n    [prefix.tz3.toString()]: '0002',\n  };\n\n  let pref = prefixMap[new Uint8Array(buf.slice(0, 3)).toString()];\n  if (pref) {\n    // tz addresses\n    const hex = buf2hex(buf.slice(3));\n    return pref + hex;\n  } else {\n    // other (kt addresses)\n    return '01' + buf2hex(buf.slice(3, 42)) + '00';\n  }\n}\n\n/**\n *\n * @description Base58 encode a public key using predefined prefix\n *\n * @param value Public Key to base58 encode\n */\nexport function encodePubKey(value: string) {\n  if (value.substring(0, 2) === '00') {\n    const pref: { [key: string]: Uint8Array } = {\n      '0000': prefix.tz1,\n      '0001': prefix.tz2,\n      '0002': prefix.tz3,\n    };\n\n    return b58cencode(value.substring(4), pref[value.substring(0, 4)]);\n  }\n\n  return b58cencode(value.substring(2, 42), prefix.KT);\n}\n\n/**\n *\n * @description Base58 encode a key according to its prefix\n *\n * @param value Key to base58 encode\n */\nexport function encodeKey(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([13, 15, 37, 217]),\n      '01': new Uint8Array([3, 254, 226, 86]),\n      '02': new Uint8Array([3, 178, 139, 127]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\n/**\n *\n * @description Base58 encode a key hash according to its prefix\n *\n * @param value Key to base58 encode\n */\nexport function encodeKeyHash(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([6, 161, 159]),\n      '01': new Uint8Array([6, 161, 161]),\n      '02': new Uint8Array([6, 161, 164]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\n/**\n *\n * @description Convert an hex string to a Uint8Array\n *\n * @param hex Hex string to convert\n */\nexport const hex2buf = (hex: string): Uint8Array => {\n  return new Uint8Array(hex.match(/[\\da-f]{2}/gi)!.map((h) => parseInt(h, 16)));\n};\n\n/**\n *\n * @description Merge 2 buffers together\n *\n * @param b1 First buffer\n * @param b2 Second buffer\n */\nexport const mergebuf = (b1: Uint8Array, b2: Uint8Array): Uint8Array => {\n  const r = new Uint8Array(b1.length + b2.length);\n  r.set(b1);\n  r.set(b2, b1.length);\n  return r;\n};\n\n/**\n *\n * @description Flatten a michelson json representation to an array\n *\n * @param s michelson json\n */\nexport const mic2arr = function me2(s: any): any {\n  let ret: any = [];\n  if (Object.prototype.hasOwnProperty.call(s, 'prim')) {\n    if (s.prim === 'Pair') {\n      ret.push(me2(s.args[0]));\n      ret = ret.concat(me2(s.args[1]));\n    } else if (s.prim === 'Elt') {\n      ret = {\n        key: me2(s.args[0]),\n        val: me2(s.args[1]),\n      };\n    } else if (s.prim === 'True') {\n      ret = true;\n    } else if (s.prim === 'False') {\n      ret = false;\n    }\n  } else if (Array.isArray(s)) {\n    const sc = s.length;\n    for (let i = 0; i < sc; i++) {\n      const n = me2(s[i]);\n      if (typeof n.key !== 'undefined') {\n        if (Array.isArray(ret)) {\n          ret = {\n            keys: [],\n            vals: [],\n          };\n        }\n        ret.keys.push(n.key);\n        ret.vals.push(n.val);\n      } else {\n        ret.push(n);\n      }\n    }\n  } else if (Object.prototype.hasOwnProperty.call(s, 'string')) {\n    ret = s.string;\n  } else if (Object.prototype.hasOwnProperty.call(s, 'int')) {\n    ret = parseInt(s.int, 10);\n  } else {\n    ret = s;\n  }\n  return ret;\n};\n\n/**\n *\n * @description Convert a buffer to an hex string\n *\n * @param buffer Buffer to convert\n */\nexport const buf2hex = (buffer: Buffer): string => {\n  const byteArray = new Uint8Array(buffer);\n  const hexParts: string[] = [];\n  byteArray.forEach((byte: any) => {\n    const hex = byte.toString(16);\n    const paddedHex = `00${hex}`.slice(-2);\n    hexParts.push(paddedHex);\n  });\n  return hexParts.join('');\n};\n\n/**\n *\n * @description Convert a string to bytes\n *\n * @param str String to convert\n */\nexport function char2Bytes(str: string) {\n  return Buffer.from(str, 'utf8').toString('hex');\n}\n\n/**\n *\n * @description Convert bytes to a string\n *\n * @param str Bytes to convert\n */\nexport function bytes2Char(hex: string): string {\n  return Buffer.from(hex2buf(hex)).toString('utf8');\n}\n"],"names":["Prefix","bs58check","ValidationResult","Buffer"],"mappings":"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"}