parameter (or (pair %get string (contract (pair string (pair timestamp nat)))) (big_map %update string (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat))))))));
storage   (pair (pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        DUP;        # @parameter%get : @parameter%get : @storage
        CAR;        # string : @parameter%get : @storage
        SWAP;       # @parameter%get : string : @storage
        DUP;        # @parameter%get : @parameter%get : string : @storage
        DUG 2;      # @parameter%get : string : @parameter%get : @storage
        CDR;        # contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
        DIG 3;      # @storage : contract (pair string (pair timestamp nat)) : string : @parameter%get
        DUP;        # @storage : @storage : contract (pair string (pair timestamp nat)) : string : @parameter%get
        DUG 4;      # @storage : contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
        CADR;       # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
        DIG 2;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : @parameter%get : @storage
        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : @parameter%get : @storage
        DUG 3;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
        MEM;        # bool : contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
        IF
          {
            DIG 2;      # @parameter%get : contract (pair string (pair timestamp nat)) : string : @storage
            DROP;       # contract (pair string (pair timestamp nat)) : string : @storage
          }
          {
            UNIT;       # unit : contract (pair string (pair timestamp nat)) : string : @parameter%get : @storage
            FAILWITH;   # FAILED
          }; # contract (pair string (pair timestamp nat)) : string : @storage
        NIL operation; # list operation : contract (pair string (pair timestamp nat)) : string : @storage
        SWAP;       # contract (pair string (pair timestamp nat)) : list operation : string : @storage
        PUSH mutez 0; # mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 4;      # @storage : mutez : contract (pair string (pair timestamp nat)) : list operation : string
        DUP;        # @storage : @storage : mutez : contract (pair string (pair timestamp nat)) : list operation : string
        DUG 5;      # @storage : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CADR;       # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 4;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DUG 5;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        IF_SOME
          {}
          {
            UNIT;       # unit : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
            FAILWITH;   # FAILED
          }; # @some : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAAR;       # nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 5;      # @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string
        DUP;        # @storage : @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string
        DUG 6;      # @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CADR;       # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 5;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        DUG 6;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        IF_SOME
          {}
          {
            UNIT;       # unit : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
            FAILWITH;   # FAILED
          }; # @some : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CADR;       # timestamp : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        PAIR;       # pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 4;      # string : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        PAIR;       # pair string (pair timestamp nat) : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        TRANSFER_TOKENS; # operation : list operation : @storage
        CONS;       # list operation : @storage
      }
      {
        SWAP;       # @storage : @parameter%update
        DUP;        # @storage : @storage : @parameter%update
        DUG 2;      # @storage : @parameter%update : @storage
        CDDR;       # address : @parameter%update : @storage
        SENDER;     # address : address : @parameter%update : @storage
        COMPARE;    # int : @parameter%update : @storage
        EQ;         # bool : @parameter%update : @storage
        IF
          {}
          {
            UNIT;       # unit : @parameter%update : @storage
            FAILWITH;   # FAILED
          }; # @parameter%update : @storage
        SWAP;       # @storage : @parameter%update
        DUP;        # @storage : @storage : @parameter%update
        DUG 2;      # @storage : @parameter%update : @storage
        CAAR;       # list string : @parameter%update : @storage
        ITER
          {
            SWAP;       # @parameter%update : string : @storage
            DUP;        # @parameter%update : @parameter%update : string : @storage
            DUG 2;      # @parameter%update : string : @parameter%update : @storage
            SWAP;       # string : @parameter%update : @parameter%update : @storage
            DUP;        # string : string : @parameter%update : @parameter%update : @storage
            DUG 2;      # string : @parameter%update : string : @parameter%update : @storage
            MEM;        # bool : string : @parameter%update : @storage
            IF
              {
                SWAP;       # @parameter%update : string : @storage
                DUP;        # @parameter%update : @parameter%update : string : @storage
                DUG 2;      # @parameter%update : string : @parameter%update : @storage
                SWAP;       # string : @parameter%update : @parameter%update : @storage
                DUP;        # string : string : @parameter%update : @parameter%update : @storage
                DUG 2;      # string : @parameter%update : string : @parameter%update : @storage
                GET;        # option (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))))) : string : @parameter%update : @storage
                IF_SOME
                  {}
                  {
                    UNIT;       # unit : string : @parameter%update : @storage
                    FAILWITH;   # FAILED
                  }; # @some : string : @parameter%update : @storage
                CAR;        # timestamp : string : @parameter%update : @storage
                DIG 3;      # @storage : timestamp : string : @parameter%update
                DUP;        # @storage : @storage : timestamp : string : @parameter%update
                DUG 4;      # @storage : timestamp : string : @parameter%update : @storage
                CADR;       # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                DIG 2;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : @parameter%update : @storage
                DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : @parameter%update : @storage
                DUG 3;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                IF_SOME
                  {}
                  {
                    UNIT;       # unit : timestamp : string : @parameter%update : @storage
                    FAILWITH;   # FAILED
                  }; # @some : timestamp : string : @parameter%update : @storage
                CADR;       # timestamp : timestamp : string : @parameter%update : @storage
                SWAP;       # timestamp : timestamp : string : @parameter%update : @storage
                DUP;        # timestamp : timestamp : timestamp : string : @parameter%update : @storage
                DUG 2;      # timestamp : timestamp : timestamp : string : @parameter%update : @storage
                COMPARE;    # int : timestamp : string : @parameter%update : @storage
                GT;         # bool : timestamp : string : @parameter%update : @storage
                IF
                  {
                    DIG 2;      # @parameter%update : timestamp : string : @storage
                    DUP;        # @parameter%update : @parameter%update : timestamp : string : @storage
                    DUG 3;      # @parameter%update : timestamp : string : @parameter%update : @storage
                    DIG 2;      # string : @parameter%update : timestamp : @parameter%update : @storage
                    DUP;        # string : string : @parameter%update : timestamp : @parameter%update : @storage
                    DUG 3;      # string : @parameter%update : timestamp : string : @parameter%update : @storage
                    GET;        # option (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))))) : timestamp : string : @parameter%update : @storage
                    IF_SOME
                      {}
                      {
                        UNIT;       # unit : timestamp : string : @parameter%update : @storage
                        FAILWITH;   # FAILED
                      }; # @some : timestamp : string : @parameter%update : @storage
                    CDR;        # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat (pair nat (pair nat nat))) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat nat) : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DIG 2;      # pair nat (pair nat (pair nat nat)) : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat nat)) : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUG 3;      # pair nat (pair nat (pair nat nat)) : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DIG 2;      # pair nat (pair nat nat) : nat : pair nat nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat nat) : pair nat (pair nat nat) : nat : pair nat nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUG 3;      # pair nat (pair nat nat) : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DIG 2;      # pair nat nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat nat : pair nat nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : pair nat nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    SWAP;       # pair nat nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat nat : pair nat nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUG 4;      # pair nat nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # nat : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    PUSH nat 0; # nat : nat : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    COMPARE;    # int : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    LT;         # bool : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    IF
                      {
                        DIG 4;      # pair nat nat : nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat nat) : nat : nat : nat : nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat (pair nat nat)) : nat : nat : nat : nat : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat (pair nat (pair nat nat))) : nat : nat : nat : nat : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : nat : nat : nat : nat : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : timestamp : string : @parameter%update : @storage
                        DIG 7;      # @storage : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # @storage : @storage : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : @storage : nat : nat : nat : nat : timestamp : string : @parameter%update
                        SWAP;       # @storage : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CAR;        # list string : pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        SWAP;       # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DIG 9;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : @parameter%update
                        DUG 10;     # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CDR;        # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : @some : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        SWAP;       # @some : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CAAR;       # nat : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DIG 10;     # timestamp : nat : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair nat timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update
                        DUG 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (int %first) (int %last) : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # int : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (int %first) (int %last) : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update
                        DUG 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # pair int int : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (map %saved int nat) (nat %sum) : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CAR;        # map int nat : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair (map %saved int nat) (nat %sum) : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDR;        # nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 9;      # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUP;        # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUG 10;     # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PUSH nat 3; # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 12;     # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUP;        # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUG 13;     # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 14;     # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUP;        # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUG 15;     # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 16;     # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUP;        # nat : nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUG 17;     # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        EDIV;       # option (pair nat nat) : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_SOME
                          {
                            CAR;        # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                          }
                          {
                            UNIT;       # unit : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        MUL;        # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair int int : pair (map int nat) nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUG 7;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 15;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        CDAADR;     # int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 10;     # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUP;        # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DUG 11;     # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PUSH nat 3; # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DIG 13;     # nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update
                        DIG 14;     # nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : string : @parameter%update
                        DIG 15;     # nat : nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        EDIV;       # option (pair nat nat) : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_SOME
                          {
                            CAR;        # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                          }
                          {
                            UNIT;       # unit : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        MUL;        # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # int : option nat : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair int int : pair (map int nat) nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DIG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update
                        DUG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (int %first) (int %last) : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # int : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (int %first) (int %last) : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DIG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update
                        DUG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair int int : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (map %saved int nat) (nat %sum) : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # map int nat : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (map %saved int nat) (nat %sum) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DIG 9;      # nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        DUP;        # nat : nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        DUG 10;     # nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUG 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 12;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDDADR;     # int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DIG 10;     # nat : int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SOME;       # option nat : int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # int : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE;     # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDAR;       # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        PUSH int 1; # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : string : @parameter%update
                        DUG 5;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDAAAR;     # int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 5;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : int : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : int : string : @parameter%update
                        DUG 6;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDAADR;     # int : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SUB;        # int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        ADD;        # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF
                          {
                            DIG 2;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDAADR;     # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update
                            DUG 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDAAAR;     # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            LT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF
                              {}
                              {
                                UNIT;       # unit : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 2;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDAR;       # map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDADAR;     # map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 12;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDAAAR;     # int : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDADDR;     # nat : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SUB;        # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ISNAT;      # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            NONE nat;   # option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 12;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDAAAR;     # int : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair int int : pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # int : pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PUSH int 1; # int : int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ADD;        # int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDDADR;     # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update
                            DUG 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDDAAR;     # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            LT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF
                              {}
                              {
                                UNIT;       # unit : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 2;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDAR;       # map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDDDAR;     # map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 12;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDDAAR;     # int : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDDDDR;     # nat : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SUB;        # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ISNAT;      # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) @some) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) @some)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) @some)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) @some))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) @some)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) @some)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            NONE nat;   # option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 12;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 7;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDDAAR;     # int : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_SOME
                              {}
                              {
                                UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair nat timestamp : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # @some : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # pair int int : pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # int : pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair int int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PUSH int 1; # int : int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ADD;        # int : int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair nat timestamp : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 2;      # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                          }
                          {}; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 2;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # list string : pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # @some : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CADR;       # timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 7;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        DUG 8;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }; # @some : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDDDDR;     # nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 8;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        CADR;       # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        DIG 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        DUG 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        IF_SOME
                          {}
                          {
                            UNIT;       # unit : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            FAILWITH;   # FAILED
                          }; # @some : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        CDADDR;     # nat : nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        EDIV;       # option (pair nat nat) : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        IF_SOME
                          {
                            CAR;        # nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                          }
                          {
                            UNIT;       # unit : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            FAILWITH;   # FAILED
                          }; # nat : timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair nat timestamp : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))) : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract)) : @parameter%update
                        SWAP;       # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                      }
                      {
                        DROP 11;    # @parameter%update : @storage
                      }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
                  }
                  {
                    DROP 2;     # @parameter%update : @storage
                  }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
              }
              {
                DROP;       # @parameter%update : @storage
              }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))))) (pair (int %numDataPoints) (address %oracleContract))
          }; # @parameter%update : @storage
        DROP;       # @storage
        NIL operation; # list operation : @storage
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };